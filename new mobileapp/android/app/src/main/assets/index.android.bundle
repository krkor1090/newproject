__DEV__=
true;


__BUNDLE_START_TIME__=Date.now();
(
function(global){
var modules=Object.create(null);
var inGuard=false;

function define(id,factory){
modules[id]={
factory:factory,
module:{exports:{}},
isInitialized:false,
hasError:false};}



function require(id){
var mod=modules[id];
if(mod&&mod.isInitialized){
return mod.module.exports;}


return requireImpl(id);}


function requireImpl(id){
if(global.ErrorUtils&&!inGuard){
inGuard=true;
var returnValue;
try{
returnValue=requireImpl.apply(this,arguments);}
catch(e){
global.ErrorUtils.reportFatalError(e);}

inGuard=false;
return returnValue;}


var mod=modules[id];
if(!mod){
var msg='Requiring unknown module "'+id+'"';
if(__DEV__){
msg+='. If you are sure the module is there, try restarting the packager.';}

throw new Error(msg);}


if(mod.hasError){
throw new Error(
'Requiring module "'+id+'" which threw an exception');}



try{


mod.isInitialized=true;

__DEV__&&BridgeProfiling().profile('JS_require_'+id);



mod.factory.call(global,global,require,mod.module,mod.module.exports);

__DEV__&&BridgeProfiling().profileEnd();}
catch(e){
mod.hasError=true;
mod.isInitialized=false;
throw e;}


return mod.module.exports;}


var BridgeProfiling=__DEV__&&function(){
var _BridgeProfiling;
try{
_BridgeProfiling=require('BridgeProfiling');}
catch(e){}

return _BridgeProfiling&&_BridgeProfiling.profile?
_BridgeProfiling:{profile:function(){},profileEnd:function(){}};};


global.__d=define;
global.require=require;})(
this);
Object.

















assign=function(target,sources){
if(__DEV__){
if(target==null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target!=='object'&&typeof target!=='function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.'+
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex<arguments.length;nextIndex++){
var nextSource=arguments[nextIndex];
if(nextSource==null){
continue;}


if(__DEV__){
if(typeof nextSource!=='object'&&
typeof nextSource!=='function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.'+
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource){
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the '+
'prototype chain. This is an edge case that we do not support. '+
'This error is a performance optimization and not spec compliant.');}}



target[key]=nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val]=true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value)&&(
keys.indexOf('message')>=0||keys.indexOf('description')>=0)){
return formatError(value);}



if(keys.length===0){
if(isFunction(value)){
var name=value.name?': '+value.name:'';
return ctx.stylize('[Function'+name+']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array=true;
braces=['[',']'];}



if(isFunction(value)){
var n=value.name?': '+value.name:'';
base=' [Function'+n+']';}



if(isRegExp(value)){
base=' '+RegExp.prototype.toString.call(value);}



if(isDate(value)){
base=' '+Date.prototype.toUTCString.call(value);}



if(isError(value)){
base=' '+formatError(value);}


if(keys.length===0&&(!array||value.length==0)){
return braces[0]+base+braces[1];}


if(recurseTimes<0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output=formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output=keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\''+JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"')+'\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize(''+value,'number');
if(isBoolean(value))
return ctx.stylize(''+value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '['+Error.prototype.toString.call(value)+']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i<l;++i){
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};
if(desc.get){
if(desc.set){
str=ctx.stylize('[Getter/Setter]','special');}else 
{
str=ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str=ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name='['+key+']';}

if(!str){
if(ctx.seen.indexOf(desc.value)<0){
if(isNull(recurseTimes)){
str=formatValue(ctx,desc.value,null);}else 
{
str=formatValue(ctx,desc.value,recurseTimes-1);}

if(str.indexOf('\n')>-1){
if(array){
str=str.split('\n').map(function(line){
return '  '+line;}).
join('\n').substr(2);}else 
{
str='\n'+str.split('\n').map(function(line){
return '   '+line;}).
join('\n');}}}else 


{
str=ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array&&key.match(/^\d+$/)){
return str;}

name=JSON.stringify(''+key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name=name.substr(1,name.length-2);
name=ctx.stylize(name,'name');}else 
{
name=name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name=ctx.stylize(name,'string');}}



return name+': '+str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n')>=0)numLinesEst++;
return prev+cur.replace(/\u001b\[\d\d?m/g,'').length+1;},
0);

if(length>60){
return braces[0]+(
base===''?'':base+'\n ')+
' '+
output.join(',\n  ')+
' '+
braces[1];}


return braces[0]+base+' '+output.join(', ')+' '+braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg==='boolean';}


function isNull(arg){
return arg===null;}


function isNullOrUndefined(arg){
return arg==null;}


function isNumber(arg){
return typeof arg==='number';}


function isString(arg){
return typeof arg==='string';}


function isSymbol(arg){
return typeof arg==='symbol';}


function isUndefined(arg){
return arg===void 0;}


function isRegExp(re){
return isObject(re)&&objectToString(re)==='[object RegExp]';}


function isObject(arg){
return typeof arg==='object'&&arg!==null;}


function isDate(d){
return isObject(d)&&objectToString(d)==='[object Date]';}


function isError(e){
return isObject(e)&&(
objectToString(e)==='[object Error]'||e instanceof Error);}


function isFunction(arg){
return typeof arg==='function';}


function isPrimitive(arg){
return arg===null||
typeof arg==='boolean'||
typeof arg==='number'||
typeof arg==='string'||
typeof arg==='symbol'||
typeof arg==='undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;}();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
info:1,
warn:2,
error:3};


function setupConsole(global){
var originalConsole=global.console;

if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str;
if(arguments.length===1&&typeof arguments[0]==='string'){
str=arguments[0];}else 
{
str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');}


var logLevel=level;
if(str.slice(0,9)==='Warning: '&&logLevel>=LOG_LEVELS.error){



logLevel=LOG_LEVELS.warn;}

global.nativeLoggingHook(str,logLevel);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows=[];
for(var key in data){
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME]=key;
rows.push(row);}}}



if(rows.length===0){
global.nativeLoggingHook('',LOG_LEVELS.info);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i]=k.length;
for(var j=0;j<rows.length;j++){
var cellStr=rows[j][k].toString();
stringRows[j]=stringRows[j]||[];
stringRows[j][i]=cellStr;
columnWidths[i]=Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i]-cell.length).join('');
return cell+extraSpaces;});

space=space||' ';
return cells.join(space+'|'+space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i<rows.length;i++){
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n'+table.join('\n'),LOG_LEVELS.info);}


global.console={
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.info),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};





if(__DEV__&&originalConsole){
Object.keys(global.console).forEach(function(methodName){
var reactNativeMethod=global.console[methodName];
if(originalConsole[methodName]){
global.console[methodName]=function(){
originalConsole[methodName].apply(originalConsole,arguments);
reactNativeMethod.apply(global.console,arguments);};}});}}






if(typeof module!=='undefined'){
module.exports=setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler=fun;},

reportError:function(error){
ErrorUtils._globalHandler&&ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler&&ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e){
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun!=='function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name=name||fun.name||'<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context||this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils=ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: '+
'\n stack: '+e.stack+
'\n line: '+e.line+
'\n message: '+e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith=function(search){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
var pos=arguments.length>1?
Number(arguments[1])||0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos)===start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith=function(search){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length>1?
Number(arguments[1])||0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end-searchString.length;
if(start<0){
return false;}

return string.lastIndexOf(searchString,start)===start;};}



if(!String.prototype.contains){
String.prototype.contains=function(search){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
var pos=arguments.length>1?
Number(arguments[1])||0:0;
return string.indexOf(String(search),pos)!==-1;};}



if(!String.prototype.repeat){
String.prototype.repeat=function(count){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
count=Number(count)||0;
if(count<0||count===Infinity){
throw RangeError();}

if(count===1){
return string;}

var result='';
while(count){
if(count&1){
result+=string;}

if(count>>=1){
string+=string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this==null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate!=='function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length>>>0;
for(var i=0;i<length;i++){
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this==null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index===-1?undefined:this[index];}});}})();
if(












!Array.from){
Array.from=function(arrayLike){
if(arrayLike==null){
throw new TypeError('Object is null or undefined');}



var mapFn=arguments[1];
var thisArg=arguments[2];

var C=this;
var items=Object(arrayLike);
var symbolIterator=typeof Symbol==='function'?
Symbol.iterator:
'@@iterator';
var mapping=typeof mapFn==='function';
var usingIterator=typeof items[symbolIterator]==='function';
var key=0;
var ret;
var value;

if(usingIterator){
ret=typeof C==='function'?
new C():
[];
var it=items[symbolIterator]();
var next;

while(!(next=it.next()).done){
value=next.value;

if(mapping){
value=mapFn.call(thisArg,value,key);}


ret[key]=value;
key+=1;}


ret.length=key;
return ret;}


var len=items.length;
if(isNaN(len)||len<0){
len=0;}


ret=typeof C==='function'?
new C(len):
new Array(len);

while(key<len){
value=items[key];

if(mapping){
value=mapFn.call(thisArg,value,key);}


ret[key]=value;

key+=1;}


ret.length=key;
return ret;};}
(

















function(global){
var babelHelpers=global.babelHelpers={};

babelHelpers.createRawReactElement=function(){
var REACT_ELEMENT_TYPE=typeof Symbol==="function"&&Symbol.for&&Symbol.for("react.element")||0xeac7;
return function createRawReactElement(type,key,props){
return {
$$typeof:REACT_ELEMENT_TYPE,
type:type,
key:key,
ref:null,
props:props,
_owner:null};};}();




babelHelpers.classCallCheck=function(instance,Constructor){
if(!(instance instanceof Constructor)){
throw new TypeError("Cannot call a class as a function");}};



babelHelpers.createClass=function(){
function defineProperties(target,props){
for(var i=0;i<props.length;i++){
var descriptor=props[i];
descriptor.enumerable=descriptor.enumerable||false;
descriptor.configurable=true;
if("value" in descriptor)descriptor.writable=true;
Object.defineProperty(target,descriptor.key,descriptor);}}



return function(Constructor,protoProps,staticProps){
if(protoProps)defineProperties(Constructor.prototype,protoProps);
if(staticProps)defineProperties(Constructor,staticProps);
return Constructor;};}();



babelHelpers.defineProperty=function(obj,key,value){
if(key in obj){
Object.defineProperty(obj,key,{
value:value,
enumerable:true,
configurable:true,
writable:true});}else 

{
obj[key]=value;}


return obj;};


babelHelpers._extends=babelHelpers.extends=Object.assign||function(target){
for(var i=1;i<arguments.length;i++){
var source=arguments[i];

for(var key in source){
if(Object.prototype.hasOwnProperty.call(source,key)){
target[key]=source[key];}}}




return target;};


babelHelpers.get=function get(object,property,receiver){
if(object===null)object=Function.prototype;
var desc=Object.getOwnPropertyDescriptor(object,property);

if(desc===undefined){
var parent=Object.getPrototypeOf(object);

if(parent===null){
return undefined;}else 
{
return get(parent,property,receiver);}}else 

if("value" in desc){
return desc.value;}else 
{
var getter=desc.get;

if(getter===undefined){
return undefined;}


return getter.call(receiver);}};



babelHelpers.inherits=function(subClass,superClass){
if(typeof superClass!=="function"&&superClass!==null){
throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}


subClass.prototype=Object.create(superClass&&superClass.prototype,{
constructor:{
value:subClass,
enumerable:false,
writable:true,
configurable:true}});


if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;};


babelHelpers.interopRequireDefault=function(obj){
return obj&&obj.__esModule?obj:{
default:obj};};



babelHelpers.interopRequireWildcard=function(obj){
if(obj&&obj.__esModule){
return obj;}else 
{
var newObj={};

if(obj!=null){
for(var key in obj){
if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}



newObj.default=obj;
return newObj;}};



babelHelpers.objectWithoutProperties=function(obj,keys){
var target={};

for(var i in obj){
if(keys.indexOf(i)>=0)continue;
if(!Object.prototype.hasOwnProperty.call(obj,i))continue;
target[i]=obj[i];}


return target;};


babelHelpers.possibleConstructorReturn=function(self,call){
if(!self){
throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}


return call&&(typeof call==="object"||typeof call==="function")?call:self;};


babelHelpers.slicedToArray=function(){
function sliceIterator(arr,i){
var _arr=[];
var _n=true;
var _d=false;
var _e=undefined;

try{
for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){
_arr.push(_s.value);

if(i&&_arr.length===i)break;}}

catch(err){
_d=true;
_e=err;}finally 
{
try{
if(!_n&&_i["return"])_i["return"]();}finally 
{
if(_d)throw _e;}}



return _arr;}


return function(arr,i){
if(Array.isArray(arr)){
return arr;}else 
if(Symbol.iterator in Object(arr)){
return sliceIterator(arr,i);}else 
{
throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();




babelHelpers.taggedTemplateLiteral=function(strings,raw){
return Object.freeze(Object.defineProperties(strings,{
raw:{
value:Object.freeze(raw)}}));};




babelHelpers.toConsumableArray=function(arr){
if(Array.isArray(arr)){
for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}

return arr2;}else 
{
return Array.from(arr);}};})(


typeof global!=='undefined'?global:typeof self!=='undefined'?self:this);
__d('XenformaMobileSync/index.android.js',function(global, require, module, exports) {  "use strict";














var React=require('react-native/Libraries/react-native/react-native.js');
var synchronization=require('XenformaMobileSync/synchronization.js');
var server_auth=require('XenformaMobileSync/server_auth.js');
var LoginComponent=require('XenformaMobileSync/app.component.login.js');
var SideBarSection=require('XenformaMobileSync/app.component.side-bar.js');
var DataListComponent=require('XenformaMobileSync/app.component.data-list.js');
var ForerunnerDB=require("forerunnerdb/js/builds/nodecore.js");
var fdb=new ForerunnerDB();
var db=fdb.db('xenforma');var 


AppRegistry=









React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;var DrawerLayoutAndroid=React.DrawerLayoutAndroid;var Dimensions=React.Dimensions;var ToolbarAndroid=React.ToolbarAndroid;var ListView=React.ListView;var TextInput=React.TextInput;
var DRAWER_WIDTH_LEFT=56;
var XenformaMobileSync=React.createClass({displayName:'XenformaMobileSync',
getInitialState:function(){
var context=this;

server_auth.is_user_authenticated().then(function(){

context.start_synchronization();}).

catch(function(err){
if(err=="NOT_LOGGED_IN"){
context.setState({login_required:true});}else 

{
context.setState({data:"Error has occurred: "+err+" Please reload the application."});}});



return {data:"Loading..."};},

start_synchronization:function(){
var context=this;
console.log("auth success after start sysnchrozation");
synchronization.synchronize().
then(function(){


context.getmainmenu().
then(function(){
context.setState({data:"Synchronization is now complete"});
context.setState({load:true});}).
catch(function(err){
console.log("err");});}).



catch(function(err){
if(err=="SYNC_IN_PROGRESS"){
context.setState({data:"ERROR: Synchronization is already in progress"});}else 

if(err=="DEVICE_IS_OFFLINE"){
context.setState({data:"ERROR: Device is offline"});}else 

{
context.setState({data:"ERROR: "+JSON.stringify(err)});}});



this.setState({login_required:false,data:"Synchronization is in progress..."});},

_renderNavigation:function(){var _this=this;

return (
React.createElement(View,{style:styles.container},
React.createElement(ToolbarAndroid,{
logo:require('./images/right_logo.jpg'),
navIcon:require('./images/right_logo.jpg'),
onIconClicked:function(){return _this.drawer.openDrawer();},
style:styles.toolbar,
title:'my sample'})));},





getmainmenu:function(){
var context=this;
return new Promise(function(resolve,reject){
var request={};
request.entity="app_object";
request.method="get_menu_items";
server_auth.do_authenticated_http_call('api/entity/invoke_method',{
method:"POST",
headers:{
"Content-Type":"application/json"},

body:JSON.stringify(request)}).
then(function(response){
response.json().then(function(json_response){
var menu_items=[];
for(var module_key in json_response.data){
var module=json_response.data[module_key];
var module_name=module.name;
menu_items.push(module_name);}

context.setState({mainmenu:menu_items});
return resolve();}).

catch(function(err){
return reject(err.json_response.message);});}).


catch(function(err){
return reject(err.json_response.message);});});},



onActionSelected:function(position){
this.drawer.openDrawer();},

onActionclose_secondsub:function(rowID,rowData){
this.setState({itemcont:rowData});
console.log(rowData);
console.log("rowData");},

onActionclose_threesub:function(rowID,rowData){
this.setState({itemcont:rowData});
this.drawer.closeDrawer();},

app_object_handler:function(app_object){
var context=this;
var handle_app_object=function(){
var state_object=context.get_clear_state();
var code=app_object.code;
var data_list=app_object.type=="data_list";
var edit_form=app_object.type=="edit_form";
var dashboard=app_object.type=="dashboard";


var conditions=[];
conditions=app_object.conditions||{};





delete state_object.app_object_conditions;
if(app_object.workflow_conditions){
conditions.workflow_status=app_object.workflow_conditions.workflow_status;}


state_object.data_list=data_list;
state_object.edit_form=edit_form;
state_object.dashboard=dashboard;
state_object.app_object_code=code;
console.log("index-android");
if(data_list){
state_object.app_object_conditions=conditions;}

state_object.edit_form_id=app_object._id;
context.setState(state_object);};















this.get_object(app_object);
return handle_app_object();},

get_object:function(app_object){
var context=this;
var request={};
request.entity="app_object";
request.method="get_by_code";
request.data={app_object_code:app_object.code,conditions:context.state.app_object_conditions};

var context=this;
server_auth.do_authenticated_http_call('api/entity/invoke_method',{
method:"POST",
headers:{
"Content-Type":"application/json"},

body:JSON.stringify(request)}).
then(function(response){

response.json().then(function(json_response){
console.log(json_response.data.app_object);
console.log("json response");
context.setState({
app_object:json_response.data.app_object,
entity_attributes:json_response.data.entity_attributes,
entity_instances:[]});

context.get_colums();}).


catch(function(err){
context.setState({error:err.responseJSON.message});});}).

catch(function(err){
context.setState({error:err.responseJSON.message});});},


get_colums:function(){
var columns=[];
var context=this;
console.log("rendser_submenu");

for(var i=0;context.state.entity_attributes&&i<context.state.entity_attributes.attributes.length;i++){

var attribute=context.state.entity_attributes.attributes[i];

if(!attribute.list_visible){
continue;}

if(attribute.type=="Mixed"||attribute.is_array){
continue;}

var column={id:i,dataField:attribute.field_path,caption:attribute.caption};

if(attribute.list_of_values){

var tempAttribute=attribute.list_of_values;
column.allowHeaderFiltering=true;
column.headerFilter={
dataSource:{
load:function(loadOptions){
var res=[];
for(var i=0;i<tempAttribute.length;i++){

res.push({text:tempAttribute[i].value,value:tempAttribute[i].code});}

return res;}}};}else 




{
column.allowHeaderFiltering=false;}

var type=attribute.attribute_type==null?attribute.db_type:attribute.attribute_type;
columns.push(column);}


var column={id:i+1,dataField:"",caption:""};
columns.push(column);
context.setState({columns:columns});

context.setState({header_caption:{"Header":columns}});
context.setState({header_length:columns.length});},

get_clear_state:function(){
var state_object={};
state_object.settings=false;
state_object.invite_users=false;
state_object.edit_form=false;
state_object.data_list=false;
state_object.app_object_code=false;
state_object.edit_form_id=undefined;
state_object.dashboard=false;
state_object.setup_user=false;
state_object.reset_password=false;
state_object.forgot_password=false;
state_object.search=false;
state_object.search_string=undefined;
state_object.user_data_list=false;
state_object.home=false;
return state_object;},

navigationView:function(){
return React.createElement(SideBarSection,{on_closesecond_Event:this.onActionclose_secondsub,
on_closethree_Event:this.onActionclose_threesub,
mainmenu:this.state.mainmenu,
app_object_handler:this.app_object_handler});},


render:function(){var _this2=this;
if(this.state.login_required){
return React.createElement(LoginComponent,{on_auth_successful:this.start_synchronization.bind(null,this)});}

if(this.state.load){
var page_content=React.createElement(Text,null,"");
if(this.state.data_list){
var key=this.state.app_object_code;
if(this.state.app_object_conditions){
key+=":"+JSON.stringify(this.state.app_object_conditions);}

page_content=React.createElement(DataListComponent,{app_object_code:this.state.app_object_code,
conditions:this.state.app_object_conditions,

entity_attributes:this.state.entity_attributes,
entity_instances:this.state.entity_instances,
header_caption:this.state.header_caption,
header_length:this.state.header_length});}


;
return (
React.createElement(DrawerLayoutAndroid,{drawerWidth:300,
drawerPosition:DrawerLayoutAndroid.positions.Left,
ref:function(drawer){_this2.drawer=drawer;},
renderNavigationView:this.navigationView},
React.createElement(View,{style:styles.container},
React.createElement(ToolbarAndroid,{
logo:{uri:"http://webcreek.xenforma.com/images/logo.png"},
title:'',
navIcon:require('XenformaMobileSync/images/back.png'),
style:styles.toolbar,
onIconClicked:function(){return _this2.drawer.openDrawer();},
actions:[{title:'Settings',icon:require('XenformaMobileSync/images/title.png'),show:'always'}],
onActionSelected:this.onActionSelected}),

page_content)));}else 







{
return (
React.createElement(View,{style:styles.container_welcome},
React.createElement(Text,{style:styles.welcome},this.state.data)));}}});






var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#E6E6E6'},

toolbar:{
backgroundColor:'#2DC3E8',
height:50},

container_welcome:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:'#2DC3E8'},



searchRow:{
backgroundColor:'red',
paddingTop:5,
paddingLeft:5,
paddingRight:5,
paddingBottom:5},


searchTextInput:{
backgroundColor:'white',
borderColor:'#cccccc',
borderRadius:3,
borderWidth:1,
paddingLeft:8,
height:30},

container_main:{
flex:1,
top:37,
justifyContent:'center',
alignItems:'center',
backgroundColor:'green'},

nav_bar_content:{
flexDirection:'row',
flex:1,height:35,
justifyContent:'space-between',
alignItems:'stretch',
flexWrap:'nowrap',
backgroundColor:'#2DC3E8'},

bottom_container:{
flex:1,
alignItems:'center',
backgroundColor:'#00FCFF',
flexWrap:'nowrap',
marginBottom:10,
justifyContent:'flex-end'},


welcome:{
fontSize:20,
textAlign:'center',
margin:10,
color:'#FFFFFF'},


instructions:{
textAlign:'center',
color:'#333333',
marginBottom:5},
wrapper:{},


slide1:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:'#EEEEEE'},

slide2:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:'#EEEEEE'},

text:{
color:'#2DC3E8',
fontSize:30,
fontWeight:'bold'}});



AppRegistry.registerComponent('XenformaMobileSync',function(){return XenformaMobileSync;});
});
__d('react-native/Libraries/react-native/react-native.js',function(global, require, module, exports) {  'use strict';












var ReactNative=babelHelpers.extends({

get ActivityIndicatorIOS(){return require('ActivityIndicatorIOS');},
get ART(){return require('ReactNativeART');},
get DatePickerIOS(){return require('DatePickerIOS');},
get DrawerLayoutAndroid(){return require('DrawerLayoutAndroid');},
get Image(){return require('Image');},
get ListView(){return require('ListView');},
get MapView(){return require('MapView');},
get Modal(){return require('Modal');},
get Navigator(){return require('Navigator');},
get NavigatorIOS(){return require('NavigatorIOS');},
get PickerIOS(){return require('PickerIOS');},
get ProgressBarAndroid(){return require('ProgressBarAndroid');},
get ProgressViewIOS(){return require('ProgressViewIOS');},
get ScrollView(){return require('ScrollView');},
get SegmentedControlIOS(){return require('SegmentedControlIOS');},
get SliderIOS(){return require('SliderIOS');},
get SnapshotViewIOS(){return require('SnapshotViewIOS');},
get Switch(){return require('Switch');},
get PullToRefreshViewAndroid(){return require('PullToRefreshViewAndroid');},
get SwitchAndroid(){return require('SwitchAndroid');},
get SwitchIOS(){return require('SwitchIOS');},
get TabBarIOS(){return require('TabBarIOS');},
get Text(){return require('Text');},
get TextInput(){return require('TextInput');},
get ToastAndroid(){return require('ToastAndroid');},
get ToolbarAndroid(){return require('ToolbarAndroid');},
get Touchable(){return require('Touchable');},
get TouchableHighlight(){return require('TouchableHighlight');},
get TouchableNativeFeedback(){return require('TouchableNativeFeedback');},
get TouchableOpacity(){return require('TouchableOpacity');},
get TouchableWithoutFeedback(){return require('TouchableWithoutFeedback');},
get View(){return require('View');},
get ViewPagerAndroid(){return require('ViewPagerAndroid');},
get WebView(){return require('WebView');},


get ActionSheetIOS(){return require('ActionSheetIOS');},
get AdSupportIOS(){return require('AdSupportIOS');},
get Alert(){return require('Alert');},
get AlertIOS(){return require('AlertIOS');},
get Animated(){return require('Animated');},
get AppRegistry(){return require('AppRegistry');},
get AppStateIOS(){return require('AppStateIOS');},
get AsyncStorage(){return require('AsyncStorage');},
get BackAndroid(){return require('BackAndroid');},
get CameraRoll(){return require('CameraRoll');},
get Clipboard(){return require('Clipboard');},
get Dimensions(){return require('Dimensions');},
get Easing(){return require('Easing');},
get ImagePickerIOS(){return require('ImagePickerIOS');},
get IntentAndroid(){return require('IntentAndroid');},
get InteractionManager(){return require('InteractionManager');},
get LayoutAnimation(){return require('LayoutAnimation');},
get LinkingIOS(){return require('LinkingIOS');},
get NetInfo(){return require('NetInfo');},
get PanResponder(){return require('PanResponder');},
get PixelRatio(){return require('PixelRatio');},
get PushNotificationIOS(){return require('PushNotificationIOS');},
get Settings(){return require('Settings');},
get StatusBarIOS(){return require('StatusBarIOS');},
get StyleSheet(){return require('StyleSheet');},
get UIManager(){return require('UIManager');},
get VibrationIOS(){return require('VibrationIOS');},


get DeviceEventEmitter(){return require('RCTDeviceEventEmitter');},
get NativeAppEventEmitter(){return require('RCTNativeAppEventEmitter');},
get NativeModules(){return require('NativeModules');},
get Platform(){return require('Platform');},
get processColor(){return require('processColor');},
get requireNativeComponent(){return require('requireNativeComponent');},


get EdgeInsetsPropType(){return require('EdgeInsetsPropType');},
get PointPropType(){return require('PointPropType');},


addons:{
get LinkedStateMixin(){return require('LinkedStateMixin');},
Perf:undefined,
get PureRenderMixin(){return require('ReactComponentWithPureRenderMixin');},
get TestModule(){return require('NativeModules').TestModule;},
TestUtils:undefined,
get batchedUpdates(){return require('ReactUpdates').batchedUpdates;},
get cloneWithProps(){return require('cloneWithProps');},
get createFragment(){return require('ReactFragment').create;},
get update(){return require('update');}}},




require('React'));


if(__DEV__){
Object.defineProperty(ReactNative.addons,'Perf',{
enumerable:true,
get:function(){return require('ReactDefaultPerf');}});

Object.defineProperty(ReactNative.addons,'TestUtils',{
enumerable:true,
get:function(){return require('ReactTestUtils');}});}



module.exports=ReactNative;
});
__d('ActivityIndicatorIOS',function(global, require, module, exports) {  'use strict';











var React=require('React');
var View=require('View');

var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS',
render:function(){
return React.createElement(View,this.props);}});



module.exports=ActivityIndicatorIOS;
});
__d('React',function(global, require, module, exports) {  'use strict';












module.exports=require('ReactNative');
});
__d('ReactNative',function(global, require, module, exports) {  'use strict';














var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');

var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');
var ReactUpdates=require('ReactUpdates');

var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');
var warning=require('warning');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement=ReactElementValidator.createElement;
createFactory=ReactElementValidator.createFactory;
cloneElement=ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps){
if(props[propName]===undefined){
props[propName]=defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because '+
'it does not provide validation. Check your JSX transform.');}


element._owner=ReactCurrentOwner.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


unstable_batchedUpdates:ReactUpdates.batchedUpdates,



__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:function(
element,
mountInto,
callback)
{
warning('Use React.render instead of React.renderComponent');
return ReactNative.render(element,mountInto,callback);}};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined'&&
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject==='function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports=ReactNative;
});
__d('ReactNativeDefaultInjection',function(global, require, module, exports) {  'use strict';

















require('InitializeJavaScriptAppEngine');

var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactElement=require('ReactElement');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);


var EmptyComponent=function(){

var View=require('View');
return ReactElement.createElement(View,{
collapsable:true,
style:{position:'absolute'}});};


ReactEmptyComponent.injection.injectEmptyComponent(EmptyComponent);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectGenericComponentClass(function(tag){

var info='';
if(typeof tag==='string'&&/^[a-z]/.test(tag)){
info+=' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports={
inject:inject};
});
__d('InitializeJavaScriptAppEngine',function(global, require, module, exports) {  require(























'regenerator/runtime.js');

if(typeof GLOBAL==='undefined'){
GLOBAL=this;}


if(typeof window==='undefined'){
window=GLOBAL;}


function setUpConsole(){

var ExceptionsManager=require('ExceptionsManager');
ExceptionsManager.installConsoleErrorReporter();}

















function polyfillGlobal(name,newValue){var scope=arguments.length<=2||arguments[2]===undefined?GLOBAL:arguments[2];
var descriptor=Object.getOwnPropertyDescriptor(scope,name)||{




writable:true};


if(scope[name]!==undefined){
var backupName='original'+name[0].toUpperCase()+name.substr(1);
Object.defineProperty(scope,backupName,babelHelpers.extends({},descriptor,{value:scope[name]}));}


Object.defineProperty(scope,name,babelHelpers.extends({},descriptor,{value:newValue}));}


function setUpErrorHandler(){
if(global.__fbDisableExceptionsManager){
return;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee){
console.log('Failed to print error: ',ee.message);}}



var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpFlowChecker(){
if(__DEV__){
var checkFlowAtRuntime=require('checkFlowAtRuntime');
checkFlowAtRuntime();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout=JSTimers.setTimeout;
GLOBAL.setInterval=JSTimers.setInterval;
GLOBAL.setImmediate=JSTimers.setImmediate;
GLOBAL.clearTimeout=JSTimers.clearTimeout;
GLOBAL.clearInterval=JSTimers.clearInterval;
GLOBAL.clearImmediate=JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame=JSTimers.clearInterval;
GLOBAL.requestAnimationFrame=function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert=function(text){
var alertOpts={
title:'Alert',
message:''+text,
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts,function(){});};}}




function setUpPromise(){


GLOBAL.Promise=require('Promise');}


function setUpXHR(){


polyfillGlobal('XMLHttpRequest',require('XMLHttpRequest'));
polyfillGlobal('FormData',require('FormData'));

var fetchPolyfill=require('fetch');
polyfillGlobal('fetch',fetchPolyfill.fetch);
polyfillGlobal('Headers',fetchPolyfill.Headers);
polyfillGlobal('Request',fetchPolyfill.Request);
polyfillGlobal('Response',fetchPolyfill.Response);}


function setUpGeolocation(){
GLOBAL.navigator=GLOBAL.navigator||{};
polyfillGlobal('geolocation',require('Geolocation'),GLOBAL.navigator);}


function setUpProduct(){
Object.defineProperty(GLOBAL.navigator,'product',{value:'ReactNative'});}



function setUpWebSockets(){
polyfillGlobal('WebSocket',require('WebSocket'));}


function setUpProfile(){
if(__DEV__){
var BridgeProfiling=require('BridgeProfiling');
BridgeProfiling.swizzleReactPerf();}}



function setUpProcessEnv(){
GLOBAL.process=GLOBAL.process||{};
GLOBAL.process.env=GLOBAL.process.env||{};
if(!GLOBAL.process.env.NODE_ENV){
GLOBAL.process.env.NODE_ENV=__DEV__?'development':'production';}}



function setUpNumber(){
Number.EPSILON=Number.EPSILON||Math.pow(2,-52);
Number.MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||Math.pow(2,53)-1;
Number.MIN_SAFE_INTEGER=Number.MIN_SAFE_INTEGER||-(Math.pow(2,53)-1);}


function setUpDevTools(){

if(__DEV__){
if(!window.document&&require('Platform').OS==='ios'){
var setupDevtools=require('setupDevtools');
setupDevtools();}}}




setUpProcessEnv();
setUpConsole();
setUpTimers();
setUpAlert();
setUpPromise();
setUpErrorHandler();
setUpXHR();
setUpGeolocation();
setUpProduct();
setUpWebSockets();
setUpProfile();
setUpFlowChecker();
setUpNumber();
setUpDevTools();



if(__DEV__){
require('RCTDebugComponentOwnership');}

require('RCTDeviceEventEmitter');
require('PerformanceLogger');
});
__d('regenerator/runtime.js',function(global, require, module, exports) {  !









function(global){
"use strict";

var hasOwn=Object.prototype.hasOwnProperty;
var undefined;
var $Symbol=typeof Symbol==="function"?Symbol:{};
var iteratorSymbol=$Symbol.iterator||"@@iterator";
var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";

var inModule=typeof module==="object";
var runtime=global.regeneratorRuntime;
if(runtime){
if(inModule){


module.exports=runtime;}



return;}




runtime=global.regeneratorRuntime=inModule?module.exports:{};

function wrap(innerFn,outerFn,self,tryLocsList){

var generator=Object.create((outerFn||Generator).prototype);
var context=new Context(tryLocsList||[]);



generator._invoke=makeInvokeMethod(innerFn,self,context);

return generator;}

runtime.wrap=wrap;











function tryCatch(fn,obj,arg){
try{
return {type:"normal",arg:fn.call(obj,arg)};}
catch(err){
return {type:"throw",arg:err};}}



var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";



var ContinueSentinel={};





function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype;
GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor=GeneratorFunction;
GeneratorFunctionPrototype[toStringTagSymbol]=GeneratorFunction.displayName="GeneratorFunction";



function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
prototype[method]=function(arg){
return this._invoke(method,arg);};});}




runtime.isGeneratorFunction=function(genFun){
var ctor=typeof genFun==="function"&&genFun.constructor;
return ctor?
ctor===GeneratorFunction||


(ctor.displayName||ctor.name)==="GeneratorFunction":
false;};


runtime.mark=function(genFun){
if(Object.setPrototypeOf){
Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);}else 
{
genFun.__proto__=GeneratorFunctionPrototype;
if(!(toStringTagSymbol in genFun)){
genFun[toStringTagSymbol]="GeneratorFunction";}}


genFun.prototype=Object.create(Gp);
return genFun;};







runtime.awrap=function(arg){
return new AwaitArgument(arg);};


function AwaitArgument(arg){
this.arg=arg;}


function AsyncIterator(generator){
function invoke(method,arg,resolve,reject){
var record=tryCatch(generator[method],generator,arg);
if(record.type==="throw"){
reject(record.arg);}else 
{
var result=record.arg;
var value=result.value;
if(value instanceof AwaitArgument){
return Promise.resolve(value.arg).then(function(value){
invoke("next",value,resolve,reject);},
function(err){
invoke("throw",err,resolve,reject);});}



return Promise.resolve(value).then(function(unwrapped){















result.value=unwrapped;
resolve(result);},
reject);}}



if(typeof process==="object"&&process.domain){
invoke=process.domain.bind(invoke);}


var previousPromise;

function enqueue(method,arg){
function callInvokeWithMethodAndArg(){
return new Promise(function(resolve,reject){
invoke(method,arg,resolve,reject);});}



return previousPromise=












previousPromise?previousPromise.then(
callInvokeWithMethodAndArg,


callInvokeWithMethodAndArg):
callInvokeWithMethodAndArg();}




this._invoke=enqueue;}


defineIteratorMethods(AsyncIterator.prototype);




runtime.async=function(innerFn,outerFn,self,tryLocsList){
var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList));


return runtime.isGeneratorFunction(outerFn)?
iter:
iter.next().then(function(result){
return result.done?result.value:iter.next();});};



function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state===GenStateExecuting){
throw new Error("Generator is already running");}


if(state===GenStateCompleted){
if(method==="throw"){
throw arg;}




return doneResult();}


while(true){
var delegate=context.delegate;
if(delegate){
if(method==="return"||
method==="throw"&&delegate.iterator[method]===undefined){


context.delegate=null;



var returnMethod=delegate.iterator["return"];
if(returnMethod){
var record=tryCatch(returnMethod,delegate.iterator,arg);
if(record.type==="throw"){


method="throw";
arg=record.arg;
continue;}}



if(method==="return"){


continue;}}



var record=tryCatch(
delegate.iterator[method],
delegate.iterator,
arg);


if(record.type==="throw"){
context.delegate=null;



method="throw";
arg=record.arg;
continue;}





method="next";
arg=undefined;

var info=record.arg;
if(info.done){
context[delegate.resultName]=info.value;
context.next=delegate.nextLoc;}else 
{
state=GenStateSuspendedYield;
return info;}


context.delegate=null;}


if(method==="next"){
if(state===GenStateSuspendedYield){
context.sent=arg;}else 
{
context.sent=undefined;}}else 


if(method==="throw"){
if(state===GenStateSuspendedStart){
state=GenStateCompleted;
throw arg;}


if(context.dispatchException(arg)){


method="next";
arg=undefined;}}else 


if(method==="return"){
context.abrupt("return",arg);}


state=GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type==="normal"){


state=context.done?
GenStateCompleted:
GenStateSuspendedYield;

var info={
value:record.arg,
done:context.done};


if(record.arg===ContinueSentinel){
if(context.delegate&&method==="next"){


arg=undefined;}}else 

{
return info;}}else 


if(record.type==="throw"){
state=GenStateCompleted;


method="throw";
arg=record.arg;}}};}







defineIteratorMethods(Gp);

Gp[iteratorSymbol]=function(){
return this;};


Gp[toStringTagSymbol]="Generator";

Gp.toString=function(){
return "[object Generator]";};


function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc=locs[1];}


if(2 in locs){
entry.finallyLoc=locs[2];
entry.afterLoc=locs[3];}


this.tryEntries.push(entry);}


function resetTryEntry(entry){
var record=entry.completion||{};
record.type="normal";
delete record.arg;
entry.completion=record;}


function Context(tryLocsList){



this.tryEntries=[{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);}


runtime.keys=function(object){
var keys=[];
for(var key in object){
keys.push(key);}

keys.reverse();



return function next(){
while(keys.length){
var key=keys.pop();
if(key in object){
next.value=key;
next.done=false;
return next;}}






next.done=true;
return next;};};



function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);}


if(typeof iterable.next==="function"){
return iterable;}


if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i<iterable.length){
if(hasOwn.call(iterable,i)){
next.value=iterable[i];
next.done=false;
return next;}}



next.value=undefined;
next.done=true;

return next;};


return next.next=next;}}




return {next:doneResult};}

runtime.values=values;

function doneResult(){
return {value:undefined,done:true};}


Context.prototype={
constructor:Context,

reset:function(skipTempReset){
this.prev=0;
this.next=0;
this.sent=undefined;
this.done=false;
this.delegate=null;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this){

if(name.charAt(0)==="t"&&
hasOwn.call(this,name)&&
!isNaN(+name.slice(1))){
this[name]=undefined;}}}},





stop:function(){
this.done=true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type==="throw"){
throw rootRecord.arg;}


return this.rval;},


dispatchException:function(exception){
if(this.done){
throw exception;}


var context=this;
function handle(loc,caught){
record.type="throw";
record.arg=exception;
context.next=loc;
return !!caught;}


for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc==="root"){



return handle("end");}


if(entry.tryLoc<=this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch&&hasFinally){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);}else 
if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


if(hasCatch){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);}}else 


if(hasFinally){
if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


{
throw new Error("try statement without catch or finally");}}}},





abrupt:function(type,arg){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc<=this.prev&&
hasOwn.call(entry,"finallyLoc")&&
this.prev<entry.finallyLoc){
var finallyEntry=entry;
break;}}



if(finallyEntry&&(
type==="break"||
type==="continue")&&
finallyEntry.tryLoc<=arg&&
arg<=finallyEntry.finallyLoc){


finallyEntry=null;}


var record=finallyEntry?finallyEntry.completion:{};
record.type=type;
record.arg=arg;

if(finallyEntry){
this.next=finallyEntry.finallyLoc;}else 
{
this.complete(record);}


return ContinueSentinel;},


complete:function(record,afterLoc){
if(record.type==="throw"){
throw record.arg;}


if(record.type==="break"||
record.type==="continue"){
this.next=record.arg;}else 
if(record.type==="return"){
this.rval=record.arg;
this.next="end";}else 
if(record.type==="normal"&&afterLoc){
this.next=afterLoc;}},



finish:function(finallyLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.finallyLoc===finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;}}},




"catch":function(tryLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc===tryLoc){
var record=entry.completion;
if(record.type==="throw"){
var thrown=record.arg;
resetTryEntry(entry);}

return thrown;}}





throw new Error("illegal catch attempt");},


delegateYield:function(iterable,resultName,nextLoc){
this.delegate={
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


return ContinueSentinel;}};}(






typeof global==="object"?global:
typeof window==="object"?window:
typeof self==="object"?self:this);
});
__d('ExceptionsManager',function(global, require, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;

var exceptionID=0;




function reportException(e,isFatal){
var currentExceptionID=++exceptionID;
if(RCTExceptionsManager){
var stack=parseErrorStack(e);
if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack,currentExceptionID);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack,currentExceptionID);}

if(__DEV__){
(sourceMapPromise=sourceMapPromise||loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack,currentExceptionID);}).

catch(function(error){


console.warn('Unable to load source map: '+error.message);});}}}








function handleException(e,isFatal){




if(!e.message){
e=new Error(e);}


(console._errorOriginal||console.error)(e.message);
reportException(e,isFatal);}






function installConsoleErrorReporter(){

if(console._errorOriginal){
return;}

console._errorOriginal=console.error.bind(console);
console.error=function reactConsoleError(){
console._errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}


if(arguments[0]&&arguments[0].stack){
reportException(arguments[0],false);}else 
{
var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
if(str.slice(0,10)==='"Warning: '){



return;}

var error=new Error('console.error: '+str);
error.framesToPop=1;
reportException(error,false);}};


if(console.reportErrorsAsExceptions===undefined){
console.reportErrorsAsExceptions=true;}}



module.exports={handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('NativeModules',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var RemoteModules=BatchedBridge.RemoteModules;

function normalizePrefix(moduleName){
return moduleName.replace(/^(RCT|RK)/,'');}





Object.keys(RemoteModules).forEach(function(moduleName){
var strippedName=normalizePrefix(moduleName);
if(RemoteModules['RCT'+strippedName]&&RemoteModules['RK'+strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: '+moduleName);}


if(strippedName!==moduleName){
RemoteModules[strippedName]=RemoteModules[moduleName];
delete RemoteModules[moduleName];}});







var NativeModules={};
Object.keys(RemoteModules).forEach(function(moduleName){
Object.defineProperty(NativeModules,moduleName,{
enumerable:true,
get:function(){
var module=RemoteModules[moduleName];
if(module&&typeof module.moduleID==='number'&&global.nativeRequireModuleConfig){
var json=global.nativeRequireModuleConfig(moduleName);
var config=json&&JSON.parse(json);
module=config&&BatchedBridge.processModuleConfig(config,module.moduleID);
RemoteModules[moduleName]=module;}

return module;}});});













var UIManager=NativeModules.UIManager;
UIManager&&Object.keys(UIManager).forEach(function(viewName){
var viewConfig=UIManager[viewName];
var constants={};
if(viewConfig.Manager){
Object.defineProperty(viewConfig,'Constants',{
enumerable:true,
get:function(){
var viewManager=NativeModules[normalizePrefix(viewConfig.Manager)];
viewManager&&Object.keys(viewManager).forEach(function(key){
var value=viewManager[key];
if(typeof value!=='function'){
constants[key]=value;}});


return constants;}});}});





module.exports=NativeModules;
});
__d('BatchedBridge',function(global, require, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig,
__fbBatchedBridgeConfig.localModulesConfig);




var BridgeProfiling=require('BridgeProfiling');
var JSTimersExecution=require('JSTimersExecution');

BatchedBridge.registerCallableModule('BridgeProfiling',BridgeProfiling);
BatchedBridge.registerCallableModule('JSTimersExecution',JSTimersExecution);







Object.defineProperty(global,'__fbBatchedBridge',{value:BatchedBridge});

module.exports=BatchedBridge;
});
__d('MessageQueue',function(global, require, module, exports) {  'use strict';














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;
var MIN_TIME_BETWEEN_FLUSHES_MS=5;

var SPY_MODE=false;

var MethodTypes=keyMirror({
remote:null,
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error){
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=function(){

function MessageQueue(remoteModules,localModules){var _this=this;babelHelpers.classCallCheck(this,MessageQueue);
this.RemoteModules={};

this._callableModules={};
this._queue=[[],[],[]];
this._moduleTable={};
this._methodTable={};
this._callbacks=[];
this._callbackID=0;
this._lastFlush=0;

[
'invokeCallbackAndReturnFlushedQueue',
'callFunctionReturnFlushedQueue',
'flushedQueue'].
forEach(function(fn){return _this[fn]=_this[fn].bind(_this);});

var modulesConfig=this._genModulesConfig(remoteModules);
this._genModules(modulesConfig);
localModules&&this._genLookupTables(
this._genModulesConfig(localModules),this._moduleTable,this._methodTable);


this._debugInfo={};
this._remoteModuleTable={};
this._remoteMethodTable={};
this._genLookupTables(
modulesConfig,this._remoteModuleTable,this._remoteMethodTable);}babelHelpers.createClass(MessageQueue,[{key:'callFunctionReturnFlushedQueue',value:function callFunctionReturnFlushedQueue(






module,method,args){var _this2=this;
guard(function(){
_this2.__callFunction(module,method,args);
_this2.__callImmediates();});


return this.flushedQueue();}},{key:'invokeCallbackAndReturnFlushedQueue',value:function invokeCallbackAndReturnFlushedQueue(


cbID,args){var _this3=this;
guard(function(){
_this3.__invokeCallback(cbID,args);
_this3.__callImmediates();});


return this.flushedQueue();}},{key:'flushedQueue',value:function flushedQueue()


{
this.__callImmediates();

var queue=this._queue;
this._queue=[[],[],[]];
return queue[0].length?queue:null;}},{key:'processModuleConfig',value:function processModuleConfig(


config,moduleID){
var module=this._genModule(config,moduleID);
this._genLookup(config,moduleID,this._remoteModuleTable,this._remoteMethodTable);
return module;}},{key:'__callImmediates',value:function __callImmediates()






{
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();}},{key:'__nativeCall',value:function __nativeCall(


module,method,params,onFail,onSucc){
if(onFail||onSucc){

this._callbackID>1<<5&&(
this._debugInfo[this._callbackID>>5]=null);

this._debugInfo[this._callbackID>>1]=[module,method];
onFail&&params.push(this._callbackID);
this._callbacks[this._callbackID++]=onFail;
onSucc&&params.push(this._callbackID);
this._callbacks[this._callbackID++]=onSucc;}

this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);

var now=new Date().getTime();
if(global.nativeFlushQueueImmediate&&
now-this._lastFlush>=MIN_TIME_BETWEEN_FLUSHES_MS){
global.nativeFlushQueueImmediate(this._queue);
this._queue=[[],[],[]];
this._lastFlush=now;}

if(__DEV__&&SPY_MODE&&isFinite(module)){
console.log('JS->N : '+this._remoteModuleTable[module]+'.'+
this._remoteMethodTable[module][method]+'('+JSON.stringify(params)+')');}}},{key:'__callFunction',value:function __callFunction(



module,method,args){
this._lastFlush=new Date().getTime();
if(isFinite(module)){
method=this._methodTable[module][method];
module=this._moduleTable[module];}

BridgeProfiling.profile(function(){return module+'.'+method+'('+stringifySafe(args)+')';});
if(__DEV__&&SPY_MODE){
console.log('N->JS : '+module+'.'+method+'('+JSON.stringify(args)+')');}

var moduleMethods=this._callableModules[module];
if(!moduleMethods){



console.warn('Module is not registered:',module);
moduleMethods=require(module);}








moduleMethods[method].apply(moduleMethods,args);
BridgeProfiling.profileEnd();}},{key:'__invokeCallback',value:function __invokeCallback(


cbID,args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback('+cbID+', '+stringifySafe(args)+')';});
this._lastFlush=new Date().getTime();
var callback=this._callbacks[cbID];
if(!callback||__DEV__){
var debug=this._debugInfo[cbID>>1];
var _module=debug&&this._remoteModuleTable[debug[0]];
var method=debug&&this._remoteMethodTable[debug[0]][debug[1]];
invariant(
callback,'Callback with id '+
cbID+': '+_module+'.'+method+'() not found');

if(callback&&SPY_MODE){
console.log('N->JS : <callback for '+_module+'.'+method+'>('+JSON.stringify(args)+')');}}


this._callbacks[cbID&~1]=null;
this._callbacks[cbID|1]=null;
callback.apply(null,args);
BridgeProfiling.profileEnd();}},{key:'_genModulesConfig',value:function _genModulesConfig(











modules){
if(Array.isArray(modules)){
return modules;}else 
{
var moduleArray=[];
var moduleNames=Object.keys(modules);
for(var i=0,l=moduleNames.length;i<l;i++){
var moduleName=moduleNames[i];
var moduleConfig=modules[moduleName];
var _module2=[moduleName];
if(moduleConfig.constants){
_module2.push(moduleConfig.constants);}

var methodsConfig=moduleConfig.methods;
if(methodsConfig){
var methods=[];
var asyncMethods=[];
var methodNames=Object.keys(methodsConfig);
for(var j=0,ll=methodNames.length;j<ll;j++){
var methodName=methodNames[j];
var methodConfig=methodsConfig[methodName];
methods[methodConfig.methodID]=methodName;
if(methodConfig.type===MethodTypes.remoteAsync){
asyncMethods.push(methodConfig.methodID);}}


if(methods.length){
_module2.push(methods);
if(asyncMethods.length){
_module2.push(asyncMethods);}}}



moduleArray[moduleConfig.moduleID]=_module2;}

return moduleArray;}}},{key:'_genLookupTables',value:function _genLookupTables(



modulesConfig,moduleTable,methodTable){var _this4=this;
modulesConfig.forEach(function(config,moduleID){
_this4._genLookup(config,moduleID,moduleTable,methodTable);});}},{key:'_genLookup',value:function _genLookup(



config,moduleID,moduleTable,methodTable){
if(!config){
return;}


var moduleName=undefined,methods=undefined;
if(moduleHasConstants(config)){var _config=babelHelpers.slicedToArray(
config,3);moduleName=_config[0];methods=_config[2];}else 
{var _config2=babelHelpers.slicedToArray(
config,2);moduleName=_config2[0];methods=_config2[1];}


moduleTable[moduleID]=moduleName;
methodTable[moduleID]=babelHelpers.extends({},methods);}},{key:'_genModules',value:function _genModules(


remoteModules){var _this5=this;
remoteModules.forEach(function(config,moduleID){
_this5._genModule(config,moduleID);});}},{key:'_genModule',value:function _genModule(



config,moduleID){var _this6=this;
if(!config){
return;}


var moduleName=undefined,constants=undefined,methods=undefined,asyncMethods=undefined;
if(moduleHasConstants(config)){var _config3=babelHelpers.slicedToArray(
config,4);moduleName=_config3[0];constants=_config3[1];methods=_config3[2];asyncMethods=_config3[3];}else 
{var _config4=babelHelpers.slicedToArray(
config,3);moduleName=_config4[0];methods=_config4[1];asyncMethods=_config4[2];}


var module={};
methods&&methods.forEach(function(methodName,methodID){
var methodType=
asyncMethods&&arrayContains(asyncMethods,methodID)?
MethodTypes.remoteAsync:MethodTypes.remote;
module[methodName]=_this6._genMethod(moduleID,methodID,methodType);});

babelHelpers.extends(module,constants);

if(!constants&&!methods&&!asyncMethods){
module.moduleID=moduleID;}


this.RemoteModules[moduleName]=module;
return module;}},{key:'_genMethod',value:function _genMethod(


module,method,type){
var fn=null;
var self=this;
if(type===MethodTypes.remoteAsync){
fn=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
return new Promise(function(resolve,reject){
self.__nativeCall(module,method,args,resolve,function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
fn=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}
var lastArg=args.length>0?args[args.length-1]:null;
var secondLastArg=args.length>1?args[args.length-2]:null;
var hasSuccCB=typeof lastArg==='function';
var hasErrorCB=typeof secondLastArg==='function';
hasErrorCB&&invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB+hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args=args.slice(0,args.length-numCBs);
return self.__nativeCall(module,method,args,onFail,onSucc);};}


fn.type=type;
return fn;}},{key:'registerCallableModule',value:function registerCallableModule(


name,methods){
this._callableModules[name]=methods;}}]);return MessageQueue;}();




function moduleHasConstants(moduleArray){
return !Array.isArray(moduleArray[1]);}


function arrayContains(array,value){
return array.indexOf(value)!==-1;}


function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=babelHelpers.objectWithoutProperties(errorData,['message']);
var error=new Error(message);
error.framesToPop=1;
return babelHelpers.extends(error,extraErrorInfo);}


module.exports=MessageQueue;
});
__d('BridgeProfiling',function(global, require, module, exports) {  'use strict';



















var GLOBAL=GLOBAL||this;
var TRACE_TAG_REACT_APPS=1<<17;
var TRACE_TAG_JSC_CALLS=1<<27;

var _enabled=false;
var _asyncCookie=0;
var _ReactPerf=null;
function ReactPerf(){
if(!_ReactPerf){
_ReactPerf=require('ReactPerf');}

return _ReactPerf;}


var BridgeProfiling={
setEnabled:function(enabled){
if(_enabled!==enabled){
if(enabled){
global.nativeTraceBeginLegacy&&global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);}else 
{
global.nativeTraceEndLegacy&&global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);}}


_enabled=enabled;

ReactPerf().enableMeasure=enabled;},





profile:function(profileName){
if(_enabled){
profileName=typeof profileName==='function'?
profileName():profileName;
global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS,profileName);}},



profileEnd:function(){
if(_enabled){
global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);}},








profileAsync:function(profileName){
var cookie=_asyncCookie;
if(_enabled){
_asyncCookie++;
profileName=typeof profileName==='function'?
profileName():profileName;
global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS,profileName,cookie,0);}

return cookie;},


profileAsyncEnd:function(profileName,cookie){
if(_enabled){
profileName=typeof profileName==='function'?
profileName():profileName;
global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS,profileName,cookie,0);}},



reactPerfMeasure:function(objName,fnName,func){
return function(component){
if(!_enabled){
return func.apply(this,arguments);}


var name=objName==='ReactCompositeComponent'&&this.getName()||'';
BridgeProfiling.profile(objName+'.'+fnName+'('+name+')');
var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};},



swizzleReactPerf:function(){
ReactPerf().injection.injectMeasure(BridgeProfiling.reactPerfMeasure);},






attachToRelayProfiler:function(relayProfiler){
relayProfiler.attachProfileHandler('*',function(name){
var cookie=BridgeProfiling.profileAsync(name);
return function(){
BridgeProfiling.profileAsyncEnd(name,cookie);};});},






swizzleJSON:function(){
BridgeProfiling.measureMethods(JSON,'JSON',[
'parse',
'stringify']);},











measureMethods:function(object,objectName,methodNames){
if(!__DEV__){
return;}


methodNames.forEach(function(methodName){
object[methodName]=BridgeProfiling.measure(
objectName,
methodName,
object[methodName]);});},













measure:function(objName,fnName,func){
if(!__DEV__){
return func;}


var profileName=objName+'.'+fnName;
return function(){
if(!_enabled){
return func.apply(this,arguments);}


BridgeProfiling.profile(profileName);
var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};}};




BridgeProfiling.setEnabled(global.__RCTProfileIsProfiling||false);

module.exports=BridgeProfiling;
});
__d('ReactPerf',function(global, require, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames){
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key]=ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc=ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName=objName+'_'+fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure=measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports=ReactPerf;
});
__d('ErrorUtils',function(global, require, module, exports) {  var 











GLOBAL=this;













module.exports=GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',function(global, require, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');
var BridgeProfiling=require('BridgeProfiling');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID<=JSTimersExecution.GUID,'Tried to call timer with ID '+timerID+' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex===-1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type===JSTimersExecution.Type.setTimeout||
type===JSTimersExecution.Type.setImmediate||
type===JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type===JSTimersExecution.Type.setTimeout||
type===JSTimersExecution.Type.setInterval||
type===JSTimersExecution.Type.setImmediate){
callback();}else 
if(type===JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: '+type);
return;}}

catch(e){

JSTimersExecution.errors=JSTimersExecution.errors||[];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length!==0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors=null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount>1){


for(var ii=1;ii<errorCount;ii++){
require('JSTimers').setTimeout(
function(error){throw error;}.bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediatesPass:function(){
BridgeProfiling.profile('JSTimersExecution.callImmediatesPass()');



if(JSTimersExecution.immediates.length>0){
var passImmediates=JSTimersExecution.immediates.slice();
JSTimersExecution.immediates=[];



for(var i=0;i<passImmediates.length;++i){
JSTimersExecution.callTimer(passImmediates[i]);}}



BridgeProfiling.profileEnd();

return JSTimersExecution.immediates.length>0;},






callImmediates:function(){
JSTimersExecution.errors=null;
while(JSTimersExecution.callImmediatesPass()){}
if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i]=null;
JSTimersExecution.callbacks[i]=null;
JSTimersExecution.types[i]=null;}};



module.exports=JSTimersExecution;
});
__d('invariant',function(global, require, module, exports) {  'use strict';























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format===undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format===undefined){
error=new Error(
'Minified exception occurred; use the non-minified dev environment '+
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error=new Error(
'Invariant Violation: '+
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop=1;
throw error;}};



module.exports=invariant;
});
__d('keyMirror',function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object&&!Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj){
if(!obj.hasOwnProperty(key)){
continue;}

ret[key]=key;}

return ret;};


module.exports=keyMirror;
});
__d('performanceNow',function(global, require, module, exports) {  var 











performance=require('performance');
var curPerformance=performance;






if(!curPerformance||!curPerformance.now){
curPerformance=Date;}


var performanceNow=curPerformance.now.bind(curPerformance);

module.exports=performanceNow;
});
__d('performance',function(global, require, module, exports) {  'use strict';













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance=
window.performance||
window.msPerformance||
window.webkitPerformance;}


module.exports=performance||{};
});
__d('ExecutionEnvironment',function(global, require, module, exports) {  "use strict";


























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker!=='undefined',

canUseEventListeners:
canUseDOM&&!!(window.addEventListener||window.attachEvent),

canUseViewport:canUseDOM&&!!window.screen,

isInWorker:!canUseDOM};



module.exports=ExecutionEnvironment;
});
__d('warning',function(global, require, module, exports) {  'use strict';












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning=function(condition,format){for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}
if(format===undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning '+
'message argument');}



if(format.indexOf('Failed Composite propType: ')===0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: '+format.replace(/%s/g,function(){return args[argIndex++];});
if(typeof console!=='undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x){}}};}




module.exports=warning;
});
__d('emptyFunction',function(global, require, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns=makeEmptyFunction;
emptyFunction.thatReturnsFalse=makeEmptyFunction(false);
emptyFunction.thatReturnsTrue=makeEmptyFunction(true);
emptyFunction.thatReturnsNull=makeEmptyFunction(null);
emptyFunction.thatReturnsThis=function(){return this;};
emptyFunction.thatReturnsArgument=function(arg){return arg;};

module.exports=emptyFunction;
});
__d('JSTimers',function(global, require, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex===-1){
freeIndex=JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration||0,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2>2?_len2-2:0),_key2=2;_key2<_len2;_key2++){args[_key2-2]=arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration||0,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){args[_key3-1]=arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=func;
JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID==null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index!==-1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index]!==JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports=JSTimers;
});
__d('stringifySafe',function(global, require, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg===undefined){
ret='undefined';}else 
if(arg===null){
ret='null';}else 
if(type==='string'){
ret='"'+arg+'"';}else 
if(type==='function'){
try{
ret=arg.toString();}
catch(e){
ret='[function unknown]';}}else 

{


try{
ret=JSON.stringify(arg);}
catch(e){
if(typeof arg.toString==='function'){
try{
ret=arg.toString();}
catch(E){}}}}



return ret||'["'+type+'" failed to stringify]';}


module.exports=stringifySafe;
});
__d('loadSourceMap',function(global, require, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url===null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL+mapURL;}


module.exports=loadSourceMap;
});
__d('Promise',function(global, require, module, exports) {  'use strict';























global.setImmediate=require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally=function(onSettled){
return this.then(onSettled,onSettled);};



module.exports=Promise;
});
__d('setImmediate',function(global, require, module, exports) {  module.
















exports=global.setImmediate||
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',function(global, require, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args=Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle]=function(){
handler.apply(undefined,args);};

queueTail=queueTail.next={handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask&&(next=queueHead.next)){
queueHead=next;
if(task=tasksByHandle[next.handle]){
currentlyRunningATask=true;
try{
task();
currentlyRunningATask=false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask=false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage&&!global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous=false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$"+Math.random()+"$";
var onGlobalMessage=function(event){
if(event.source===global&&
typeof event.data==="string"&&
event.data.indexOf(messagePrefix)===0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate=function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix+handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage=flushQueue;
setImmediate=function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate=function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange=function(){
script.onreadystatechange=null;
html.removeChild(script);
script=null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate=function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc&&"onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate=setImmediate;
exports.clearImmediate=clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',function(global, require, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');

module.exports=Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._61);
p._81=1;
p._65=value;
return p;}

Promise.resolve=function(value){
if(value instanceof Promise)return value;

if(value===null)return NULL;
if(value===undefined)return UNDEFINED;
if(value===true)return TRUE;
if(value===false)return FALSE;
if(value===0)return ZERO;
if(value==='')return EMPTYSTRING;

if(typeof value==='object'||typeof value==='function'){
try{
var then=value.then;
if(typeof then==='function'){
return new Promise(then.bind(value));}}

catch(ex){
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all=function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length===0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val&&(typeof val==='object'||typeof val==='function')){
if(val instanceof Promise&&val.then===Promise.prototype.then){
while(val._81===3){
val=val._65;}

if(val._81===1)return res(i,val._65);
if(val._81===2)reject(val._65);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then==='function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i]=val;
if(--remaining===0){
resolve(args);}}


for(var i=0;i<args.length;i++){
res(i,args[i]);}});};




Promise.reject=function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race=function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch']=function(onRejected){
return this.then(null,onRejected);};
});
__d('promise/setimmediate/core.js',function(global, require, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex){
LAST_ERROR=ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex){
LAST_ERROR=ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex){
LAST_ERROR=ex;
return IS_ERROR;}}



module.exports=Promise;

function Promise(fn){
if(typeof this!=='object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn!=='function'){
throw new TypeError('not a function');}

this._45=0;
this._81=0;
this._65=null;
this._54=null;
if(fn===noop)return;
doResolve(fn,this);}

Promise._10=null;
Promise._97=null;
Promise._61=noop;

Promise.prototype.then=function(onFulfilled,onRejected){
if(this.constructor!==Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._81===3){
self=self._65;}

if(Promise._10){
Promise._10(self);}

if(self._81===0){
if(self._45===0){
self._45=1;
self._54=deferred;
return;}

if(self._45===1){
self._45=2;
self._54=[self._54,deferred];
return;}

self._54.push(deferred);
return;}

handleResolved(self,deferred);}


function handleResolved(self,deferred){
setImmediate(function(){
var cb=self._81===1?deferred.onFulfilled:deferred.onRejected;
if(cb===null){
if(self._81===1){
resolve(deferred.promise,self._65);}else 
{
reject(deferred.promise,self._65);}

return;}

var ret=tryCallOne(cb,self._65);
if(ret===IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue===self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue&&(
typeof newValue==='object'||typeof newValue==='function'))
{
var then=getThen(newValue);
if(then===IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then===self.then&&
newValue instanceof Promise)
{
self._81=3;
self._65=newValue;
finale(self);
return;}else 
if(typeof then==='function'){
doResolve(then.bind(newValue),self);
return;}}


self._81=1;
self._65=newValue;
finale(self);}


function reject(self,newValue){
self._81=2;
self._65=newValue;
if(Promise._97){
Promise._97(self,newValue);}

finale(self);}

function finale(self){
if(self._45===1){
handle(self,self._54);
self._54=null;}

if(self._45===2){
for(var i=0;i<self._54.length;i++){
handle(self,self._54[i]);}

self._54=null;}}



function Handler(onFulfilled,onRejected,promise){
this.onFulfilled=typeof onFulfilled==='function'?onFulfilled:null;
this.onRejected=typeof onRejected==='function'?onRejected:null;
this.promise=promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done=true;
resolve(promise,value);},
function(reason){
if(done)return;
done=true;
reject(promise,reason);});

if(!done&&res===IS_ERROR){
done=true;
reject(promise,LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',function(global, require, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports=Promise;
Promise.prototype.done=function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};
});
__d('SourceMap',function(global, require, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports=scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName!="string"){
throw new TypeError('Expected string, got: '+moduleName);}


if(arguments.length==2){
payload=deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: "+moduleName);}

define.modules[moduleName]=payload;}
;




define.modules={};










function Domain(){
this.modules={};
this._currentModule=null;}


(function(){
















Domain.prototype.require=function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split('/');
var i=1;
while(i<bits.length){
if(bits[i]==='..'){
bits.splice(i-1,1);}else 
if(bits[i]==='.'){
bits.splice(i,1);}else 
{
i++;}}


return bits.join('/');}


function join(a,b){
a=a.trim();
b=b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,'/')+b;}}



function dirname(path){
var bits=path.split('/');
bits.pop();
return bits.join('/');}








Domain.prototype.lookup=function(moduleName){
if(/^\./.test(moduleName)){
moduleName=normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: "+moduleName);}


var module=define.modules[moduleName];

if(typeof module=="function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule=moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule=previousModule;
module=exports;}



this.modules[moduleName]=module;

return module;};})();




define.Domain=Domain;
define.globalDomain=new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define('source-map/source-map-generator',['require','exports','module','source-map/base64-vlq','source-map/util','source-map/array-set'],function(require,exports,module){

var base64VLQ=require('./base64-vlq');
var util=require('./util');
var ArraySet=require('./array-set').ArraySet;









function SourceMapGenerator(aArgs){
this._file=util.getArg(aArgs,'file');
this._sourceRoot=util.getArg(aArgs,'sourceRoot',null);
this._sources=new ArraySet();
this._names=new ArraySet();
this._mappings=[];
this._sourcesContents=null;}


SourceMapGenerator.prototype._version=3;






SourceMapGenerator.fromSourceMap=
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source=mapping.source;
if(sourceRoot){
newMapping.source=util.relative(sourceRoot,newMapping.source);}


newMapping.original={
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name=mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping=
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,'generated');
var original=util.getArg(aArgs,'original',null);
var source=util.getArg(aArgs,'source',null);
var name=util.getArg(aArgs,'name',null);

this._validateMapping(generated,original,source,name);

if(source&&!this._sources.has(source)){
this._sources.add(source);}


if(name&&!this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original!=null&&original.line,
originalColumn:original!=null&&original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent=
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source=util.relative(this._sourceRoot,source);}


if(aSourceContent!==null){


if(!this._sourcesContents){
this._sourcesContents={};}

this._sourcesContents[util.toSetString(source)]=aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length===0){
this._sourcesContents=null;}}};














SourceMapGenerator.prototype.applySourceMap=
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile=aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile=util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source===aSourceFile&&mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source!==null){

if(sourceRoot){
mapping.source=util.relative(sourceRoot,original.source);}else 
{
mapping.source=original.source;}

mapping.originalLine=original.line;
mapping.originalColumn=original.column;
if(original.name!==null&&mapping.name!==null){


mapping.name=original.name;}}}




var source=mapping.source;
if(source&&!newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name&&!newNames.has(name)){
newNames.add(name);}},


this);
this._sources=newSources;
this._names=newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile=util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping=
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated&&'line' in aGenerated&&'column' in aGenerated&&
aGenerated.line>0&&aGenerated.column>=0&&
!aOriginal&&!aSource&&!aName){

return;}else 

if(aGenerated&&'line' in aGenerated&&'column' in aGenerated&&
aOriginal&&'line' in aOriginal&&'column' in aOriginal&&
aGenerated.line>0&&aGenerated.column>=0&&
aOriginal.line>0&&aOriginal.column>=0&&
aSource){

return;}else 

{
throw new Error('Invalid mapping: '+JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings=
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result='';
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i<len;i++){
mapping=this._mappings[i];

if(mapping.generatedLine!==previousGeneratedLine){
previousGeneratedColumn=0;
while(mapping.generatedLine!==previousGeneratedLine){
result+=';';
previousGeneratedLine++;}}else 


{
if(i>0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i-1])){
continue;}

result+=',';}}



result+=base64VLQ.encode(mapping.generatedColumn-
previousGeneratedColumn);
previousGeneratedColumn=mapping.generatedColumn;

if(mapping.source){
result+=base64VLQ.encode(this._sources.indexOf(mapping.source)-
previousSource);
previousSource=this._sources.indexOf(mapping.source);


result+=base64VLQ.encode(mapping.originalLine-1-
previousOriginalLine);
previousOriginalLine=mapping.originalLine-1;

result+=base64VLQ.encode(mapping.originalColumn-
previousOriginalColumn);
previousOriginalColumn=mapping.originalColumn;

if(mapping.name){
result+=base64VLQ.encode(this._names.indexOf(mapping.name)-
previousName);
previousName=this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent=
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source=util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON=
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot=this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString=
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator=SourceMapGenerator;});






































define('source-map/base64-vlq',['require','exports','module','source-map/base64'],function(require,exports,module){

var base64=require('./base64');













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1<<VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE-1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue<0?
(-aValue<<1)+1:
(aValue<<1)+0;}








function fromVLQSigned(aValue){
var isNegative=(aValue&1)===1;
var shifted=aValue>>1;
return isNegative?
-shifted:
shifted;}





exports.encode=function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit=vlq&VLQ_BASE_MASK;
vlq>>>=VLQ_BASE_SHIFT;
if(vlq>0){


digit|=VLQ_CONTINUATION_BIT;}

encoded+=base64.encode(digit);}while(
vlq>0);

return encoded;};






exports.decode=function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i>=strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit=base64.decode(aStr.charAt(i++));
continuation=!!(digit&VLQ_CONTINUATION_BIT);
digit&=VLQ_BASE_MASK;
result=result+(digit<<shift);
shift+=VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define('source-map/base64',['require','exports','module'],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.
split('').
forEach(function(ch,index){
charToIntMap[ch]=index;
intToCharMap[index]=ch;});





exports.encode=function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: "+aNumber);};





exports.decode=function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: "+aChar);};});









define('source-map/util',['require','exports','module'],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length===3){
return aDefaultValue;}else 
{
throw new Error('"'+aName+'" is a required argument.');}}


exports.getArg=getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse=urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme+"://";
if(aParsedUrl.auth){
url+=aParsedUrl.auth+"@";}

if(aParsedUrl.host){
url+=aParsedUrl.host;}

if(aParsedUrl.port){
url+=":"+aParsedUrl.port;}

if(aParsedUrl.path){
url+=aParsedUrl.path;}

return url;}

exports.urlGenerate=urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp)||aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0)==='/'&&(url=urlParse(aRoot))){
url.path=aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,'')+'/'+aPath;}

exports.join=join;










function toSetString(aStr){
return '$'+aStr;}

exports.toSetString=toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString=fromSetString;

function relative(aRoot,aPath){
aRoot=aRoot.replace(/\/$/,'');

var url=urlParse(aRoot);
if(aPath.charAt(0)=="/"&&url&&url.path=="/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot+'/')===0?
aPath.substr(aRoot.length+1):
aPath;}

exports.relative=relative;

function strcmp(aStr1,aStr2){
var s1=aStr1||"";
var s2=aStr2||"";
return (s1>s2)-(s1<s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp=strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp=mappingA.originalLine-mappingB.originalLine;
if(cmp){
return cmp;}


cmp=mappingA.originalColumn-mappingB.originalColumn;
if(cmp||onlyCompareOriginal){
return cmp;}


cmp=strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp=mappingA.generatedLine-mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn-mappingB.generatedColumn;}
;
exports.compareByOriginalPositions=compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp=mappingA.generatedLine-mappingB.generatedLine;
if(cmp){
return cmp;}


cmp=mappingA.generatedColumn-mappingB.generatedColumn;
if(cmp||onlyCompareGenerated){
return cmp;}


cmp=strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp=mappingA.originalLine-mappingB.originalLine;
if(cmp){
return cmp;}


cmp=mappingA.originalColumn-mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions=compareByGeneratedPositions;});








define('source-map/array-set',['require','exports','module','source-map/util'],function(require,exports,module){

var util=require('./util');







function ArraySet(){
this._array=[];
this._set={};}





ArraySet.fromArray=function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i<len;i++){
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add=function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate||aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)]=idx;}};








ArraySet.prototype.has=function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf=function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error('"'+aStr+'" is not in the set.');};







ArraySet.prototype.at=function ArraySet_at(aIdx){
if(aIdx>=0&&aIdx<this._array.length){
return this._array[aIdx];}

throw new Error('No element indexed by '+aIdx);};







ArraySet.prototype.toArray=function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet=ArraySet;});








define('source-map/source-map-consumer',['require','exports','module','source-map/util','source-map/binary-search','source-map/array-set','source-map/base64-vlq'],function(require,exports,module){

var util=require('./util');
var binarySearch=require('./binary-search');
var ArraySet=require('./array-set').ArraySet;
var base64VLQ=require('./base64-vlq');































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap==='string'){
sourceMap=JSON.parse(aSourceMap.replace(/^\)\]\}'/,''));}


var version=util.getArg(sourceMap,'version');
var sources=util.getArg(sourceMap,'sources');


var names=util.getArg(sourceMap,'names',[]);
var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);
var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);
var mappings=util.getArg(sourceMap,'mappings');
var file=util.getArg(sourceMap,'file',null);



if(version!=this._version){
throw new Error('Unsupported version: '+version);}






this._names=ArraySet.fromArray(names,true);
this._sources=ArraySet.fromArray(sources,true);

this.sourceRoot=sourceRoot;
this.sourcesContent=sourcesContent;
this._mappings=mappings;
this.file=file;}









SourceMapConsumer.fromSourceMap=
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names=ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources=ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot=aSourceMap._sourceRoot;
smc.sourcesContent=aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file=aSourceMap._file;

smc.__generatedMappings=aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings=aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version=3;




Object.defineProperty(SourceMapConsumer.prototype,'sources',{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings=null;
Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings=[];
this.__originalMappings=[];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings=null;
Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings=[];
this.__originalMappings=[];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings=
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length>0){
if(str.charAt(0)===';'){
generatedLine++;
str=str.slice(1);
previousGeneratedColumn=0;}else 

if(str.charAt(0)===','){
str=str.slice(1);}else 

{
mapping={};
mapping.generatedLine=generatedLine;


temp=base64VLQ.decode(str);
mapping.generatedColumn=previousGeneratedColumn+temp.value;
previousGeneratedColumn=mapping.generatedColumn;
str=temp.rest;

if(str.length>0&&!mappingSeparator.test(str.charAt(0))){

temp=base64VLQ.decode(str);
mapping.source=this._sources.at(previousSource+temp.value);
previousSource+=temp.value;
str=temp.rest;
if(str.length===0||mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source, but no line and column');}



temp=base64VLQ.decode(str);
mapping.originalLine=previousOriginalLine+temp.value;
previousOriginalLine=mapping.originalLine;

mapping.originalLine+=1;
str=temp.rest;
if(str.length===0||mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source and line, but no column');}



temp=base64VLQ.decode(str);
mapping.originalColumn=previousOriginalColumn+temp.value;
previousOriginalColumn=mapping.originalColumn;
str=temp.rest;

if(str.length>0&&!mappingSeparator.test(str.charAt(0))){

temp=base64VLQ.decode(str);
mapping.name=this._names.at(previousName+temp.value);
previousName+=temp.value;
str=temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine==='number'){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping=
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName]<=0){
throw new TypeError('Line must be greater than or equal to 1, got '+
aNeedle[aLineName]);}

if(aNeedle[aColumnName]<0){
throw new TypeError('Column must be greater than or equal to 0, got '+
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor=
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,'line'),
generatedColumn:util.getArg(aArgs,'column')};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,'source',null);
if(source&&this.sourceRoot){
source=util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,'originalLine',null),
column:util.getArg(mapping,'originalColumn',null),
name:util.getArg(mapping,'name',null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor=
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource=util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot&&(
url=util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme=="file"&&
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path||url.path=="/")&&
this._sources.has("/"+aSource)){
return this.sourcesContent[this._sources.indexOf("/"+aSource)];}}



throw new Error('"'+aSource+'" is not in the SourceMap.');};
















SourceMapConsumer.prototype.generatedPositionFor=
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,'source'),
originalLine:util.getArg(aArgs,'line'),
originalColumn:util.getArg(aArgs,'column')};


if(this.sourceRoot){
needle.source=util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,'generatedLine',null),
column:util.getArg(mapping,'generatedColumn',null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER=1;
SourceMapConsumer.ORIGINAL_ORDER=2;

















SourceMapConsumer.prototype.eachMapping=
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext||null;
var order=aOrder||SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings=this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings=this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source&&sourceRoot){
source=util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer=SourceMapConsumer;});








define('source-map/binary-search',['require','exports','module'],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh-aLow)/2)+aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp===0){

return aHaystack[mid];}else 

if(cmp>0){

if(aHigh-mid>1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid-aLow>1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow<0?
null:
aHaystack[aLow];}}
















exports.search=function search(aNeedle,aHaystack,aCompare){
return aHaystack.length>0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define('source-map/source-node',['require','exports','module','source-map/source-map-generator','source-map/util'],function(require,exports,module){

var SourceMapGenerator=require('./source-map-generator').SourceMapGenerator;
var util=require('./util');













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children=[];
this.sourceContents={};
this.line=aLine===undefined?null:aLine;
this.column=aColumn===undefined?null:aColumn;
this.source=aSource===undefined?null:aSource;
this.name=aName===undefined?null:aName;
if(aChunks!=null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap=
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split('\n');


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping===null){



while(lastGeneratedLine<mapping.generatedLine){
node.add(remainingLines.shift()+"\n");
lastGeneratedLine++;}

if(lastGeneratedColumn<mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0]=nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn=mapping.generatedColumn;}}else 

{


if(lastGeneratedLine<mapping.generatedLine){
var code="";

do {
code+=remainingLines.shift()+"\n";
lastGeneratedLine++;
lastGeneratedColumn=0;}while(
lastGeneratedLine<mapping.generatedLine);


if(lastGeneratedColumn<mapping.generatedColumn){
var nextLine=remainingLines[0];
code+=nextLine.substr(0,mapping.generatedColumn);
remainingLines[0]=nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn=mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn-
lastGeneratedColumn);
remainingLines[0]=nextLine.substr(mapping.generatedColumn-
lastGeneratedColumn);
lastGeneratedColumn=mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping=mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping===null||mapping.source===undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add=function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode||typeof aChunk==="string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);}


return this;};








SourceNode.prototype.prepend=function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length-1;i>=0;i--){
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode||typeof aChunk==="string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);}


return this;};









SourceNode.prototype.walk=function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i<len;i++){
chunk=this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk!==''){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join=function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len>0){
newChildren=[];
for(i=0;i<len-1;i++){
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children=newChildren;}

return this;};









SourceNode.prototype.replaceRight=function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length-1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild==='string'){
this.children[this.children.length-1]=lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push(''.replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent=
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)]=aSourceContent;};








SourceNode.prototype.walkSourceContents=
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i<len;i++){
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i<len;i++){
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString=function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str+=chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code+=chunk;
if(original.source!==null&&
original.line!==null&&
original.column!==null){
if(lastOriginalSource!==original.source||
lastOriginalLine!==original.line||
lastOriginalColumn!==original.column||
lastOriginalName!==original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource=original.source;
lastOriginalLine=original.line;
lastOriginalColumn=original.column;
lastOriginalName=original.name;
sourceMappingActive=true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource=null;
sourceMappingActive=false;}

chunk.split('').forEach(function(ch){
if(ch==='\n'){
generated.line++;
generated.column=0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode=SourceNode;});





this.sourceMap={
SourceMapConsumer:require('source-map/source-map-consumer').SourceMapConsumer,
SourceMapGenerator:require('source-map/source-map-generator').SourceMapGenerator,
SourceNode:require('source-map/source-node').SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',function(global, require, module, exports) {  (














function(){
var define=null;




void function(root,factory){
if(typeof define==="function"&&define.amd){
define(factory);}else 
if(typeof exports==="object"){
module.exports=factory();}else 
{
root.sourceMappingURL=factory();}}(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:"+
"/\\*"+
"(?:\\s*\r?\n(?://)?)?"+
"(?:"+innerRegex.source+")"+
"\\s*"+
"\\*/"+
"|"+
"//(?:"+innerRegex.source+")"+
")"+
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1]||match[2]||"":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index)+string+code.slice(match.index);}else 
{
return code+string;}}};});})();
});
__d('parseErrorStack',function(global, require, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file=orig.source;
stackFrame.lineNumber=orig.line;
stackFrame.column=orig.column;}}

catch(innerEx){}}



function parseErrorStack(e,sourceMapInstance){
if(!e||!e.stack){
return [];}


var stack=Array.isArray(e.stack)?e.stack:stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop||0;
while(framesToPop--){
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports=parseErrorStack;
});
__d('stacktrace-parser/index.js',function(global, require, module, exports) {  module.exports=require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',function(global, require, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i<j;++i){
if(parts=gecko.exec(lines[i])){
element={
'file':parts[3],
'methodName':parts[1]||UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts=chrome.exec(lines[i])){
element={
'file':parts[2],
'methodName':parts[1]||UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts=node.exec(lines[i])){
element={
'file':parts[2],
'methodName':parts[1]||UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports=StackTraceParser;
});
__d('checkFlowAtRuntime',function(global, require, module, exports) {  'use strict';












function checkFlowAtRuntime(){
var url=getPackagerURL();
if(!url){
return;}

fetch(url+'flow/').
then(function(response){return response.json();}).
then(function(response){
if(response.silentError){
return;}

throw {
message:response.message,
stack:response.errors.map(function(err){
return babelHelpers.extends({},
err,{
methodName:err.description,
file:err.filename});})};},




function(){}).


done();}


function getPackagerURL(){
var NativeModules=require('NativeModules');
var scriptURL=NativeModules&&
NativeModules.SourceCode&&
NativeModules.SourceCode.scriptURL||
'';




return getFirstOrNull(scriptURL.match(/^https?:\/\/[^/]+\//));}


function getFirstOrNull(ar){
return ar?ar[0]:null;}


module.exports=checkFlowAtRuntime;
});
__d('XMLHttpRequest',function(global, require, module, exports) {  'use strict';












var FormData=require('FormData');
var RCTNetworking=require('RCTNetworking');
var XMLHttpRequestBase=require('XMLHttpRequestBase');



function convertHeadersMapToArray(headers){
var headerArray=[];
for(var name in headers){
headerArray.push([name,headers[name]]);}

return headerArray;}var 


XMLHttpRequest=function(_XMLHttpRequestBase){babelHelpers.inherits(XMLHttpRequest,_XMLHttpRequestBase);function XMLHttpRequest(){babelHelpers.classCallCheck(this,XMLHttpRequest);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(XMLHttpRequest).apply(this,arguments));}babelHelpers.createClass(XMLHttpRequest,[{key:'sendImpl',value:function sendImpl(
method,url,headers,data){
var body;
if(typeof data==='string'){
body={string:data};}else 
if(data instanceof FormData){
body={
formData:data.getParts().map(function(part){
part.headers=convertHeadersMapToArray(part.headers);
return part;})};}else 


{
body=data;}


var useIncrementalUpdates=this.onreadystatechange?true:false;
var requestId=RCTNetworking.sendRequest(
method,
url,
convertHeadersMapToArray(headers),
body,
useIncrementalUpdates);

this.didCreateRequest(requestId);}}]);return XMLHttpRequest;}(XMLHttpRequestBase);



module.exports=XMLHttpRequest;
});
__d('FormData',function(global, require, module, exports) {  'use strict';var 














































FormData=function(){


function FormData(){babelHelpers.classCallCheck(this,FormData);
this._parts=[];}babelHelpers.createClass(FormData,[{key:'append',value:function append(


key,value){





this._parts.push([key,value]);}},{key:'getParts',value:function getParts()


{
return this._parts.map(function(_ref){var _ref2=babelHelpers.slicedToArray(_ref,2);var name=_ref2[0];var value=_ref2[1];
var contentDisposition='form-data; name="'+name+'"';
var headers={'content-disposition':contentDisposition};
if(typeof value==='string'){
return {string:value,headers:headers,fieldName:name};}






if(typeof value.name==='string'){
headers['content-disposition']+='; filename="'+value.name+'"';}

if(typeof value.type==='string'){
headers['content-type']=value.type;}

return babelHelpers.extends({},value,{headers:headers,fieldName:name});});}}]);return FormData;}();




module.exports=FormData;
});
__d('RCTNetworking',function(global, require, module, exports) {  'use strict';













var RCTNetworkingNative=require('NativeModules').Networking;

var _requestId=1;
var generateRequestId=function(){
return _requestId++;};var 






RCTNetworking=function(){function RCTNetworking(){babelHelpers.classCallCheck(this,RCTNetworking);}babelHelpers.createClass(RCTNetworking,null,[{key:'sendRequest',value:function sendRequest(

method,url,headers,data,useIncrementalUpdates){
var requestId=generateRequestId();
RCTNetworkingNative.sendRequest(
method,
url,
requestId,
headers,
data,
useIncrementalUpdates);
return requestId;}},{key:'abortRequest',value:function abortRequest(


requestId){
RCTNetworkingNative.abortRequest(requestId);}},{key:'clearCookies',value:function clearCookies(


callback){
RCTNetworkingNative.clearCookies(callback);}}]);return RCTNetworking;}();



module.exports=RCTNetworking;
});
__d('XMLHttpRequestBase',function(global, require, module, exports) {  'use strict';












var RCTNetworking=require('RCTNetworking');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');var 




XMLHttpRequestBase=function(){





























function XMLHttpRequestBase(){babelHelpers.classCallCheck(this,XMLHttpRequestBase);
this.UNSENT=0;
this.OPENED=1;
this.HEADERS_RECEIVED=2;
this.LOADING=3;
this.DONE=4;

this.onreadystatechange=null;
this.onload=null;
this.upload=undefined;

this._reset();
this._method=null;
this._url=null;
this._aborted=false;}babelHelpers.createClass(XMLHttpRequestBase,[{key:'_reset',value:function _reset()


{
this.readyState=this.UNSENT;
this.responseHeaders=undefined;
this.responseText='';
this.status=0;

this._requestId=null;

this._headers={};
this._sent=false;
this._lowerCaseResponseHeaders={};

this._clearSubscriptions();}},{key:'didCreateRequest',value:function didCreateRequest(


requestId){var _this=this;
this._requestId=requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didSendNetworkData',
function(args){var _didUploadProgress2;return (_didUploadProgress2=_this._didUploadProgress).call.apply(_didUploadProgress2,[_this].concat(babelHelpers.toConsumableArray(args)));}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse',
function(args){var _didReceiveResponse2;return (_didReceiveResponse2=_this._didReceiveResponse).call.apply(_didReceiveResponse2,[_this].concat(babelHelpers.toConsumableArray(args)));}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData',
function(args){var _didReceiveData2;return (_didReceiveData2=_this._didReceiveData).call.apply(_didReceiveData2,[_this].concat(babelHelpers.toConsumableArray(args)));}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse',
function(args){var _didCompleteResponse2;return (_didCompleteResponse2=_this._didCompleteResponse).call.apply(_didCompleteResponse2,[_this].concat(babelHelpers.toConsumableArray(args)));}));}},{key:'_didUploadProgress',value:function _didUploadProgress(



requestId,progress,total){
if(requestId===this._requestId&&this.upload&&this.upload.onprogress){
var event={
lengthComputable:true,
loaded:progress,
total:total};

this.upload.onprogress(event);}}},{key:'_didReceiveResponse',value:function _didReceiveResponse(



requestId,status,responseHeaders){
if(requestId===this._requestId){
this.status=status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}},{key:'_didReceiveData',value:function _didReceiveData(



requestId,responseText){
if(requestId===this._requestId){
if(!this.responseText){
this.responseText=responseText;}else 
{
this.responseText+=responseText;}

this.setReadyState(this.LOADING);}}},{key:'_didCompleteResponse',value:function _didCompleteResponse(



requestId,error){
if(requestId===this._requestId){
if(error){
this.responseText=error;}

this._clearSubscriptions();
this._requestId=null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:function _clearSubscriptions()



{
(this._subscriptions||[]).forEach(function(sub){
sub.remove();});

this._subscriptions=[];}},{key:'getAllResponseHeaders',value:function getAllResponseHeaders()


{
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders||{};
return Object.keys(headers).map(function(headerName){
return headerName+': '+headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:function getResponseHeader(


header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value!==undefined?value:null;}},{key:'setRequestHeader',value:function setRequestHeader(


header,value){
if(this.readyState!==this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()]=value;}},{key:'open',value:function open(


method,url,async){

if(this.readyState!==this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async!==undefined&&!async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method=method;
this._url=url;
this._aborted=false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:function sendImpl(


method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'send',value:function send(


data){
if(this.readyState!==this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent=true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:function abort()


{
this._aborted=true;
if(this._requestId){
RCTNetworking.abortRequest(this._requestId);}



if(!(this.readyState===this.UNSENT||
this.readyState===this.OPENED&&!this._sent||
this.readyState===this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'setResponseHeaders',value:function setResponseHeaders(


responseHeaders){
this.responseHeaders=responseHeaders||null;
var headers=responseHeaders||{};
this._lowerCaseResponseHeaders=
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()]=headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:function setReadyState(


newState){
this.readyState=newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState===this.DONE&&!this._aborted){
this._sendLoad();}}},{key:'_sendLoad',value:function _sendLoad()



{

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;}();




module.exports=XMLHttpRequestBase;
});
__d('RCTDeviceEventEmitter',function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');
var BatchedBridge=require('BatchedBridge');

var RCTDeviceEventEmitter=new EventEmitter();

BatchedBridge.registerCallableModule(
'RCTDeviceEventEmitter',
RCTDeviceEventEmitter);


module.exports=RCTDeviceEventEmitter;
});
__d('EventEmitter',function(global, require, module, exports) {  var 












EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=function(){



function EventEmitter(){babelHelpers.classCallCheck(this,EventEmitter);
this._subscriber=new EventSubscriptionVendor();}babelHelpers.createClass(EventEmitter,[{key:'addListener',value:function addListener(

















eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:function once(












eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:function removeAllListeners(










eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:function removeCurrentListener()























{
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:function listeners(









eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:function emit(
















eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii<keys.length;ii++){
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription=subscription;
subscription.listener.apply(
subscription.context,
Array.prototype.slice.call(arguments,1));}}



this._currentSubscription=null;}}}]);return EventEmitter;}();




module.exports=EventEmitter;
});
__d('EmitterSubscription',function(global, require, module, exports) {  'use strict';



















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=function(_EventSubscription){babelHelpers.inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){babelHelpers.classCallCheck(this,EmitterSubscription);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(EmitterSubscription).call(this,
subscriber));
_this.listener=listener;
_this.context=context;return _this;}return EmitterSubscription;}(EventSubscription);



module.exports=EmitterSubscription;
});
__d('EventSubscription',function(global, require, module, exports) {  'use strict';var 






















EventSubscription=function(){





function EventSubscription(subscriber){babelHelpers.classCallCheck(this,EventSubscription);
this.subscriber=subscriber;}babelHelpers.createClass(EventSubscription,[{key:'remove',value:function remove()





{
this.subscriber.removeSubscription(this);}}]);return EventSubscription;}();



module.exports=EventSubscription;
});
__d('EventSubscriptionVendor',function(global, require, module, exports) {  'use strict';


















var invariant=require('invariant');var 





EventSubscriptionVendor=function(){

function EventSubscriptionVendor(){babelHelpers.classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType={};
this._currentSubscription=null;}babelHelpers.createClass(EventSubscriptionVendor,[{key:'addSubscription',value:function addSubscription(









eventType,subscription){
invariant(
subscription.subscriber===this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType]=[];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType=eventType;
subscription.key=key;
return subscription;}},{key:'removeAllSubscriptions',value:function removeAllSubscriptions(








eventType){
if(eventType===undefined){
this._subscriptionsForType={};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:function removeSubscription(









subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:function getSubscriptionsForType(















eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;}();



module.exports=EventSubscriptionVendor;
});
__d('fetch',function(global, require, module, exports) {  'use strict';
















var self={};

/**
 * Copyright (c) 2014 GitHub, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 */
(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name!=='string'){
name=String(name);}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value!=='string'){
value=String(value);}

return value;}


function Headers(headers){
this.map={};

if(headers instanceof Headers){
headers.forEach(function(value,name){
this.append(name,value);},
this);}else 

if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
this.append(name,headers[name]);},
this);}}



Headers.prototype.append=function(name,value){
name=normalizeName(name);
value=normalizeValue(value);
var list=this.map[name];
if(!list){
list=[];
this.map[name]=list;}

list.push(value);};


Headers.prototype['delete']=function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get=function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll=function(name){
return this.map[normalizeName(name)]||[];};


Headers.prototype.has=function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set=function(name,value){
this.map[normalizeName(name)]=[normalizeValue(value)];};


Headers.prototype.forEach=function(callback,thisArg){
Object.getOwnPropertyNames(this.map).forEach(function(name){
this.map[name].forEach(function(value){
callback.call(thisArg,value,name,this);},
this);},
this);};


function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed=true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload=function(){
resolve(reader.result);};

reader.onerror=function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:typeof FileReader==='function'&&typeof Blob==='function'&&function(){
try{
new Blob();
return true;}
catch(e){
return false;}}(),


formData:typeof FormData==='function'};


function Body(){
this.bodyUsed=false;


this._initBody=function(body){
this._bodyInit=body;
if(typeof body==='string'){
this._bodyText=body;}else 
if(support.blob&&Blob.prototype.isPrototypeOf(body)){
this._bodyBlob=body;}else 
if(support.formData&&FormData.prototype.isPrototypeOf(body)){
this._bodyFormData=body;}else 
if(!body){
this._bodyText='';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob=function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer=function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text=function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text=function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData=function(){
return this.text().then(decode);};}



this.json=function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased)>-1?upcased:method;}


function Request(input,options){
options=options||{};
var body=options.body;
if(Request.prototype.isPrototypeOf(input)){
if(input.bodyUsed){
throw new TypeError('Already read');}

this.url=input.url;
this.credentials=input.credentials;
if(!options.headers){
this.headers=new Headers(input.headers);}

this.method=input.method;
this.mode=input.mode;
if(!body){
body=input._bodyInit;
input.bodyUsed=true;}}else 

{
this.url=input;}


this.credentials=options.credentials||this.credentials||'omit';
if(options.headers||!this.headers){
this.headers=new Headers(options.headers);}

this.method=normalizeMethod(options.method||this.method||'GET');
this.mode=options.mode||this.mode||null;
this.referrer=null;

if((this.method==='GET'||this.method==='HEAD')&&body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(body);}


Request.prototype.clone=function(){
return new Request(this);};


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options={};}


this._initBody(bodyInit);
this.type='default';
this.url=null;
this.status=options.status;
this.ok=this.status>=200&&this.status<300;
this.statusText=options.statusText;
this.headers=options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url=options.url||'';}


Response.prototype.clone=function(){
return new Response(this._bodyInit,{
status:this.status,
statusText:this.statusText,
headers:new Headers(this.headers),
url:this.url});};



Body.call(Response.prototype);

self.Headers=Headers;
self.Request=Request;
self.Response=Response;

self.fetch=function(input,init){
var request;
if(Request.prototype.isPrototypeOf(input)&&!init){
request=input;}else 
{
request=new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();

function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload=function(){
var status=xhr.status===1223?204:xhr.status;
if(status<100||status>599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror=function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if(request.credentials==='include'){
xhr.withCredentials=true;}


if('responseType' in xhr&&support.blob){
xhr.responseType='blob';}


request.headers.forEach(function(value,name){
xhr.setRequestHeader(name,value);});


xhr.send(typeof request._bodyInit==='undefined'?null:request._bodyInit);});};


self.fetch.polyfill=true;})();




module.exports=self;
});
__d('Geolocation',function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;


























var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success==='function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options||{},
geo_success,
geo_error||logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options||{});
updatesEnabled=true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1&&sub1.remove();
subscriptions[watchID]=undefined;
var noWatchers=true;
for(var ii=0;ii<subscriptions.length;ii++){
if(subscriptions[ii]){
noWatchers=false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled=false;
for(var ii=0;ii<subscriptions.length;ii++){
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1&&sub1.remove();}}


subscriptions=[];}}};




module.exports=Geolocation;
});
__d('logError',function(global, require, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length===1&&arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "'+err.message+'".  Stack:\n'+err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports=logError;
});
__d('WebSocket',function(global, require, module, exports) {  'use strict';











var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketModule=require('NativeModules').WebSocketModule;

var Platform=require('Platform');
var WebSocketBase=require('WebSocketBase');
var WebSocketEvent=require('WebSocketEvent');

var WebSocketId=0;
var CLOSE_NORMAL=1000;var 






WebSocket=function(_WebSocketBase){babelHelpers.inherits(WebSocket,_WebSocketBase);function WebSocket(){babelHelpers.classCallCheck(this,WebSocket);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(WebSocket).apply(this,arguments));}babelHelpers.createClass(WebSocket,[{key:'connectToSocketImpl',value:function connectToSocketImpl(



url){
this._socketId=WebSocketId++;

RCTWebSocketModule.connect(url,this._socketId);

this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:function closeConnectionImpl(


code,reason){
this._closeWebSocket(this._socketId,code,reason);}},{key:'cancelConnectionImpl',value:function cancelConnectionImpl()


{
this._closeWebSocket(this._socketId);}},{key:'sendStringImpl',value:function sendStringImpl(


message){
RCTWebSocketModule.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:function sendArrayBufferImpl()


{

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_closeWebSocket',value:function _closeWebSocket(


id,code,reason){
if(Platform.OS==='android'){



var statusCode=typeof code==='number'?code:CLOSE_NORMAL;
var closeReason=typeof reason==='string'?reason:'';
RCTWebSocketModule.close(statusCode,closeReason,id);}else 
{
RCTWebSocketModule.close(id);}}},{key:'_unregisterEvents',value:function _unregisterEvents()



{
this._subs.forEach(function(e){return e.remove();});
this._subs=[];}},{key:'_registerEvents',value:function _registerEvents(


id){var _this2=this;
this._subs=[
RCTDeviceEventEmitter.addListener('websocketMessage',function(ev){
if(ev.id!==id){
return;}

var event=new WebSocketEvent('message',{
data:ev.data});

_this2.onmessage&&_this2.onmessage(event);
_this2.dispatchEvent(event);}),

RCTDeviceEventEmitter.addListener('websocketOpen',function(ev){
if(ev.id!==id){
return;}

_this2.readyState=_this2.OPEN;
var event=new WebSocketEvent('open');
_this2.onopen&&_this2.onopen(event);
_this2.dispatchEvent(event);}),

RCTDeviceEventEmitter.addListener('websocketClosed',function(ev){
if(ev.id!==id){
return;}

_this2.readyState=_this2.CLOSED;
var event=new WebSocketEvent('close');
event.code=ev.code;
event.reason=ev.reason;
_this2.onclose&&_this2.onclose(event);
_this2.dispatchEvent(event);
_this2._unregisterEvents();
_this2.close();}),

RCTDeviceEventEmitter.addListener('websocketFailed',function(ev){
if(ev.id!==id){
return;}

var event=new WebSocketEvent('error');
event.message=ev.message;
_this2.onerror&&_this2.onerror(event);
_this2.dispatchEvent(event);
_this2._unregisterEvents();
_this2.close();})];}}]);return WebSocket;}(WebSocketBase);





module.exports=WebSocket;
});
__d('Platform',function(global, require, module, exports) {  'use strict';













var AndroidConstants=require('NativeModules').AndroidConstants;

var Platform={
OS:'android',
Version:AndroidConstants.Version};


module.exports=Platform;
});
__d('WebSocketBase',function(global, require, module, exports) {  'use strict';











var EventTarget=require('event-target-shim/lib/event-target.js');var 




WebSocketBase=function(_EventTarget){babelHelpers.inherits(WebSocketBase,_EventTarget);

















function WebSocketBase(url,protocols){babelHelpers.classCallCheck(this,WebSocketBase);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(WebSocketBase).call(this));

_this.CONNECTING=0;
_this.OPEN=1;
_this.CLOSING=2;
_this.CLOSED=3;

if(!protocols){
protocols=[];}


_this.readyState=_this.CONNECTING;
_this.connectToSocketImpl(url);return _this;}babelHelpers.createClass(WebSocketBase,[{key:'close',value:function close()


{
if(this.readyState===this.CLOSING||
this.readyState===this.CLOSED){
return;}


if(this.readyState===this.CONNECTING){
this.cancelConnectionImpl();}


this.readyState=this.CLOSING;
this.closeConnectionImpl();}},{key:'send',value:function send(


data){
if(this.readyState===this.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data==='string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:function closeConnectionImpl()



{
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:function connectToSocketImpl()


{
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:function cancelConnectionImpl()


{
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:function sendStringImpl()


{
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:function sendArrayBufferImpl()


{
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;}(EventTarget);



WebSocketBase.CONNECTING=0;
WebSocketBase.OPEN=1;
WebSocketBase.CLOSING=2;
WebSocketBase.CLOSED=3;

module.exports=WebSocketBase;
});
__d('event-target-shim/lib/event-target.js',function(global, require, module, exports) {  "use strict";











var Commons=require("event-target-shim/lib/commons.js");
var CustomEventTarget=require("event-target-shim/lib/custom-event-target.js");
var EventWrapper=require("event-target-shim/lib/event-wrapper.js");
var LISTENERS=Commons.LISTENERS;
var CAPTURE=Commons.CAPTURE;
var BUBBLE=Commons.BUBBLE;
var ATTRIBUTE=Commons.ATTRIBUTE;
var newNode=Commons.newNode;
var defineCustomEventTarget=CustomEventTarget.defineCustomEventTarget;
var createEventWrapper=EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG=
EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;











var HAS_EVENTTARGET_INTERFACE=
typeof window!=="undefined"&&
typeof window.EventTarget!=="undefined";












var EventTarget=module.exports=function EventTarget(){
if(this instanceof EventTarget){









Object.defineProperty(this,LISTENERS,{value:Object.create(null)});}else 

if(arguments.length===1&&Array.isArray(arguments[0])){
return defineCustomEventTarget(EventTarget,arguments[0]);}else 

if(arguments.length>0){
var types=Array(arguments.length);
for(var i=0;i<arguments.length;++i){
types[i]=arguments[i];}







return defineCustomEventTarget(EventTarget,types);}else 

{
throw new TypeError("Cannot call a class as a function");}};



EventTarget.prototype=Object.create(
(HAS_EVENTTARGET_INTERFACE?window.EventTarget:Object).prototype,
{
constructor:{
value:EventTarget,
writable:true,
configurable:true},


addEventListener:{
value:function addEventListener(type,listener,capture){
if(listener==null){
return false;}

if(typeof listener!=="function"&&typeof listener!=="object"){
throw new TypeError("\"listener\" is not an object.");}


var kind=capture?CAPTURE:BUBBLE;
var node=this[LISTENERS][type];
if(node==null){
this[LISTENERS][type]=newNode(listener,kind);
return true;}


var prev=null;
while(node!=null){
if(node.listener===listener&&node.kind===kind){

return false;}

prev=node;
node=node.next;}


prev.next=newNode(listener,kind);
return true;},

configurable:true,
writable:true},


removeEventListener:{
value:function removeEventListener(type,listener,capture){
if(listener==null){
return false;}


var kind=capture?CAPTURE:BUBBLE;
var prev=null;
var node=this[LISTENERS][type];
while(node!=null){
if(node.listener===listener&&node.kind===kind){
if(prev==null){
this[LISTENERS][type]=node.next;}else 

{
prev.next=node.next;}

return true;}


prev=node;
node=node.next;}


return false;},

configurable:true,
writable:true},


dispatchEvent:{
value:function dispatchEvent(event){

var node=this[LISTENERS][event.type];
if(node==null){
return true;}



var wrapped=createEventWrapper(event,this);



while(node!=null){
if(typeof node.listener==="function"){
node.listener.call(this,wrapped);}else 

if(node.kind!==ATTRIBUTE&&typeof node.listener.handleEvent==="function"){
node.listener.handleEvent(wrapped);}


if(wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]){
break;}

node=node.next;}


return !wrapped.defaultPrevented;},

configurable:true,
writable:true}});
});
__d('event-target-shim/lib/commons.js',function(global, require, module, exports) {  "use strict";














var createUniqueKey=exports.createUniqueKey=typeof Symbol!=="undefined"?
Symbol:
function createUniqueKey(name){
return "[["+name+"_"+Math.random().toFixed(8).slice(2)+"]]";};








exports.LISTENERS=createUniqueKey("listeners");







exports.CAPTURE=1;







exports.BUBBLE=2;







exports.ATTRIBUTE=3;
















exports.newNode=function newNode(listener,kind){
return {listener:listener,kind:kind,next:null};};
});
__d('event-target-shim/lib/custom-event-target.js',function(global, require, module, exports) {  "use strict";











var Commons=require("event-target-shim/lib/commons.js");
var LISTENERS=Commons.LISTENERS;
var ATTRIBUTE=Commons.ATTRIBUTE;
var newNode=Commons.newNode;












function getAttributeListener(eventTarget,type){
var node=eventTarget[LISTENERS][type];
while(node!=null){
if(node.kind===ATTRIBUTE){
return node.listener;}

node=node.next;}

return null;}










function setAttributeListener(eventTarget,type,listener){
if(typeof listener!=="function"&&typeof listener!=="object"){
listener=null;}


var prev=null;
var node=eventTarget[LISTENERS][type];
while(node!=null){
if(node.kind===ATTRIBUTE){

if(prev==null){
eventTarget[LISTENERS][type]=node.next;}else 

{
prev.next=node.next;}}else 


{
prev=node;}


node=node.next;}



if(listener!=null){
if(prev==null){
eventTarget[LISTENERS][type]=newNode(listener,ATTRIBUTE);}else 

{
prev.next=newNode(listener,ATTRIBUTE);}}}















exports.defineCustomEventTarget=function(EventTargetBase,types){
function EventTarget(){
EventTargetBase.call(this);}


var descripter={
constructor:{
value:EventTarget,
configurable:true,
writable:true}};



types.forEach(function(type){
descripter["on"+type]={
get:function(){return getAttributeListener(this,type);},
set:function(listener){setAttributeListener(this,type,listener);},
configurable:true,
enumerable:true};});



EventTarget.prototype=Object.create(EventTargetBase.prototype,descripter);

return EventTarget;};
});
__d('event-target-shim/lib/event-wrapper.js',function(global, require, module, exports) {  "use strict";











var createUniqueKey=require("event-target-shim/lib/commons.js").createUniqueKey;











var STOP_IMMEDIATE_PROPAGATION_FLAG=
createUniqueKey("stop_immediate_propagation_flag");







var CANCELED_FLAG=createUniqueKey("canceled_flag");







var ORIGINAL_EVENT=createUniqueKey("original_event");







var wrapperPrototypeDefinition=Object.freeze({
stopPropagation:Object.freeze({
value:function stopPropagation(){
var e=this[ORIGINAL_EVENT];
if(typeof e.stopPropagation==="function"){
e.stopPropagation();}},


writable:true,
configurable:true}),


stopImmediatePropagation:Object.freeze({
value:function stopImmediatePropagation(){
this[STOP_IMMEDIATE_PROPAGATION_FLAG]=true;

var e=this[ORIGINAL_EVENT];
if(typeof e.stopImmediatePropagation==="function"){
e.stopImmediatePropagation();}},


writable:true,
configurable:true}),


preventDefault:Object.freeze({
value:function preventDefault(){
if(this.cancelable===true){
this[CANCELED_FLAG]=true;}


var e=this[ORIGINAL_EVENT];
if(typeof e.preventDefault==="function"){
e.preventDefault();}},


writable:true,
configurable:true}),


defaultPrevented:Object.freeze({
get:function defaultPrevented(){return this[CANCELED_FLAG];},
enumerable:true,
configurable:true})});







exports.STOP_IMMEDIATE_PROPAGATION_FLAG=STOP_IMMEDIATE_PROPAGATION_FLAG;












exports.createEventWrapper=function createEventWrapper(event,eventTarget){
var timeStamp=
typeof event.timeStamp==="number"?event.timeStamp:Date.now();

var propertyDefinition={
type:{value:event.type,enumerable:true},
target:{value:eventTarget,enumerable:true},
currentTarget:{value:eventTarget,enumerable:true},
eventPhase:{value:2,enumerable:true},
bubbles:{value:Boolean(event.bubbles),enumerable:true},
cancelable:{value:Boolean(event.cancelable),enumerable:true},
timeStamp:{value:timeStamp,enumerable:true},
isTrusted:{value:false,enumerable:true}};

propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG]={value:false,writable:true};
propertyDefinition[CANCELED_FLAG]={value:false,writable:true};
propertyDefinition[ORIGINAL_EVENT]={value:event};


if(typeof event.detail!=="undefined"){
propertyDefinition.detail={value:event.detail,enumerable:true};}


return Object.create(
Object.create(event,wrapperPrototypeDefinition),
propertyDefinition);};
});
__d('WebSocketEvent',function(global, require, module, exports) {  'use strict';var 




















WebSocketEvent=
function WebSocketEvent(type,eventInitDict){babelHelpers.classCallCheck(this,WebSocketEvent);
this.type=type.toString();
babelHelpers.extends(this,eventInitDict);};



module.exports=WebSocketEvent;
});
__d('setupDevtools',function(global, require, module, exports) {  'use strict';












function setupDevtools(){
var messageListeners=[];
var closeListeners=[];
var ws=new window.WebSocket('ws://localhost:8097/devtools');

var FOR_BACKEND={
resolveRNStyle:require('flattenStyle'),
wall:{
listen:function(fn){
messageListeners.push(fn);},

onClose:function(fn){
closeListeners.push(fn);},

send:function(data){
ws.send(JSON.stringify(data));}}};



ws.onclose=function(){
setTimeout(setupDevtools,200);
closeListeners.forEach(function(fn){return fn();});};

ws.onerror=function(error){
setTimeout(setupDevtools,200);
closeListeners.forEach(function(fn){return fn();});};

ws.onopen=function(){
tryToConnect();};


function tryToConnect(){
ws.send('attach:agent');
var _interval=setInterval(function(){return ws.send('attach:agent');},500);
ws.onmessage=function(evt){
if(evt.data.indexOf('eval:')===0){
clearInterval(_interval);
initialize(evt.data.slice('eval:'.length));}};}




function initialize(text){
try{

eval(text);}
catch(e){
console.error('Failed to eval: '+e.message);
return;}

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:require('ReactCurrentOwner'),
InstanceHandles:require('ReactInstanceHandles'),
Mount:require('ReactNativeMount'),
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});

ws.onmessage=handleMessage;}


function handleMessage(evt){


var data;
try{
data=JSON.parse(evt.data);}
catch(e){
return console.error('failed to parse json: '+evt.data);}


if(data.$close||data.$error){
closeListeners.forEach(function(fn){return fn();});
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
tryToConnect();
return;}

if(data.$open){
return;}

messageListeners.forEach(function(fn){
try{
fn(data);}
catch(e){



console.log(data);
throw e;}});}}





module.exports=setupDevtools;
});
__d('flattenStyle',function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');



function getStyle(style){
if(typeof style==='number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style!==true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i<style.length;++i){
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle){
result[key]=computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports=flattenStyle;
});
__d('StyleSheetTypes',function(global, require, module, exports) {  'use strict';
});
__d('StyleSheetRegistry',function(global, require, module, exports) {  'use strict';












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=function(){function StyleSheetRegistry(){babelHelpers.classCallCheck(this,StyleSheetRegistry);}babelHelpers.createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:function registerStyle(
style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id]=style;
return id;}},{key:'getStyleByID',value:function getStyleByID(


id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `'+id+'`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;}();



module.exports=StyleSheetRegistry;
});
__d('ReactCurrentOwner',function(global, require, module, exports) {  'use strict';


















var ReactCurrentOwner={





current:null};



module.exports=ReactCurrentOwner;
});
__d('ReactInstanceHandles',function(global, require, module, exports) {  'use strict';













var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=10000;








function getReactRootIDString(index){
return SEPARATOR+index.toString(36);}










function isBoundary(id,index){
return id.charAt(index)===SEPARATOR||index===id.length;}









function isValidID(id){
return id===''||
id.charAt(0)===SEPARATOR&&id.charAt(id.length-1)!==SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID)===0&&
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID)&&isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about '+
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID===destinationID){
return ancestorID;}



var start=ancestorID.length+SEPARATOR_LENGTH;
var i;
for(i=start;i<destinationID.length;i++){
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength===0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i<=minLength;i++){
if(isBoundary(oneID,i)&&isBoundary(twoID,i)){
lastCommonMarkerIndex=i;}else 
if(oneID.charAt(i)!==twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}















function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start=start||'';
stop=stop||'';
invariant(
start!==stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp||isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do '+
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id=traverse(id,stop)){
var ret;
if((!skipFirst||id!==start)&&(!skipLast||id!==stop)){
ret=cb(id,traverseUp,arg);}

if(ret===false||id===stop){

break;}

invariant(
depth++<MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while '+
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop,id);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID+name;},










getReactRootIDFromNodeID:function(id){
if(id&&id.charAt(0)===SEPARATOR&&id.length>1){
var index=id.indexOf(SEPARATOR,1);
return index>-1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID!==leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID!==enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},


getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports=ReactInstanceHandles;
});
__d('ReactRootIndex',function(global, require, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex=_createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports=ReactRootIndex;
});
__d('ReactNativeMount',function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');
var UIManager=require('UIManager');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID+'['+instanceNumber+']';}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.isReactComponent={};
if(__DEV__){
TopLevelWrapper.displayName='TopLevelWrapper';}

TopLevelWrapper.prototype.render=function(){

return this.props;};










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._renderedComponent._topLevelWrapper=componentInstance;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},


findNodeHandle:require('findNodeHandle'),
nativeTagToRootNodeID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];},






renderComponent:function(
nextElement,
containerTag,
callback)
{
var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
null,
null,
nextElement);


var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextWrappedElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextWrappedElement);
ReactNativeMount._instancesByContainerID[topRootNodeID]=instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
UIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

UIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
UIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


getID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];}};



ReactNativeMount.renderComponent=ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports=ReactNativeMount;
});
__d('ReactElement',function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');
var canDefineProperty=require('canDefineProperty');



var REACT_ELEMENT_TYPE=
typeof Symbol==='function'&&Symbol.for&&Symbol.for('react.element')||
0xeac7;

var RESERVED_PROPS={
key:true,
ref:true,
__self:true,
__source:true};




















var ReactElement=function(type,key,ref,self,source,owner,props){
var element={

$$typeof:REACT_ELEMENT_TYPE,


type:type,
key:key,
ref:ref,
props:props,


_owner:owner};


if(__DEV__){




element._store={};





if(canDefineProperty){
Object.defineProperty(element._store,'validated',{
configurable:false,
enumerable:false,
writable:true,
value:false});


Object.defineProperty(element,'_self',{
configurable:false,
enumerable:false,
writable:false,
value:self});



Object.defineProperty(element,'_source',{
configurable:false,
enumerable:false,
writable:false,
value:source});}else 

{
element._store.validated=false;
element._self=self;
element._source=source;}

Object.freeze(element.props);
Object.freeze(element);}


return element;};


ReactElement.createElement=function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;
var self=null;
var source=null;

if(config!=null){
ref=config.ref===undefined?null:config.ref;
key=config.key===undefined?null:''+config.key;
self=config.__self===undefined?null:config.__self;
source=config.__source===undefined?null:config.__source;

for(propName in config){
if(config.hasOwnProperty(propName)&&
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName]=config[propName];}}}






var childrenLength=arguments.length-2;
if(childrenLength===1){
props.children=children;}else 
if(childrenLength>1){
var childArray=Array(childrenLength);
for(var i=0;i<childrenLength;i++){
childArray[i]=arguments[i+2];}

props.children=childArray;}



if(type&&type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps){
if(typeof props[propName]==='undefined'){
props[propName]=defaultProps[propName];}}}




return ReactElement(
type,
key,
ref,
self,
source,
ReactCurrentOwner.current,
props);};



ReactElement.createFactory=function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type=type;
return factory;};


ReactElement.cloneAndReplaceKey=function(oldElement,newKey){
var newElement=ReactElement(
oldElement.type,
newKey,
oldElement.ref,
oldElement._self,
oldElement._source,
oldElement._owner,
oldElement.props);


return newElement;};


ReactElement.cloneAndReplaceProps=function(oldElement,newProps){
var newElement=ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._self,
oldElement._source,
oldElement._owner,
newProps);


if(__DEV__){

newElement._store.validated=oldElement._store.validated;}


return newElement;};


ReactElement.cloneElement=function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;

var self=element._self;



var source=element._source;


var owner=element._owner;

if(config!=null){
if(config.ref!==undefined){

ref=config.ref;
owner=ReactCurrentOwner.current;}

if(config.key!==undefined){
key=''+config.key;}


for(propName in config){
if(config.hasOwnProperty(propName)&&
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName]=config[propName];}}}






var childrenLength=arguments.length-2;
if(childrenLength===1){
props.children=children;}else 
if(childrenLength>1){
var childArray=Array(childrenLength);
for(var i=0;i<childrenLength;i++){
childArray[i]=arguments[i+2];}

props.children=childArray;}


return ReactElement(
element.type,
key,
ref,
self,
source,
owner,
props);};








ReactElement.isValidElement=function(object){
return (
typeof object==='object'&&
object!==null&&
object.$$typeof===REACT_ELEMENT_TYPE);};



module.exports=ReactElement;
});
__d('Object.assign',function(global, require, module, exports) {  'use strict';














function assign(target,sources){
if(target==null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex<arguments.length;nextIndex++){
var nextSource=arguments[nextIndex];
if(nextSource==null){
continue;}


var from=Object(nextSource);






for(var key in from){
if(hasOwnProperty.call(from,key)){
to[key]=from[key];}}}




return to;}


module.exports=assign;
});
__d('canDefineProperty',function(global, require, module, exports) {  'use strict';












var canDefineProperty=false;
if(__DEV__){
try{
Object.defineProperty({},'x',{get:function(){}});
canDefineProperty=true;}
catch(x){}}




module.exports=canDefineProperty;
});
__d('ReactNativeTagHandles',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)){
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID&&tag,'Root node or tag is null when associating');
if(rootNodeID&&tag){
ReactNativeTagHandles.tagToRootNodeID[tag]=rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID]=tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r['+tag+']'+NATIVE_TOP_ROOT_ID_SEPARATOR;},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag%10===1;},


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index===-1){
return null;}

return nodeID.substr(0,index+NATIVE_TOP_ROOT_ID_SEPARATOR.length);},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports=ReactNativeTagHandles;
});
__d('ReactReconciler',function(global, require, module, exports) {  'use strict';












var ReactRef=require('ReactRef');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(internalInstance._currentElement&&
internalInstance._currentElement.ref!=null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}

return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;

if(nextElement===prevElement&&
context===internalInstance._context)
{










return;}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged&&
internalInstance._currentElement&&
internalInstance._currentElement.ref!=null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports=ReactReconciler;
});
__d('ReactRef',function(global, require, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref==='function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref==='function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs=function(instance,element){
if(element===null||element===false){
return;}

var ref=element.ref;
if(ref!=null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs=function(prevElement,nextElement){












var prevEmpty=prevElement===null||prevElement===false;
var nextEmpty=nextElement===null||nextElement===false;

return (

prevEmpty||nextEmpty||
nextElement._owner!==prevElement._owner||
nextElement.ref!==prevElement.ref);};



ReactRef.detachRefs=function(instance,element){
if(element===null||element===false){
return;}

var ref=element.ref;
if(ref!=null){
detachRef(ref,instance,element._owner);}};



module.exports=ReactRef;
});
__d('ReactOwner',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object&&
typeof object.attachRef==='function'&&
typeof object.detachRef==='function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might '+
'be adding a ref to a component that was not created inside a component\'s '+
'`render` method, or you have multiple copies of React loaded '+
'(details: https://fb.me/react-refs-must-have-owner).');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might '+
'be removing a ref to a component that was not created inside a component\'s '+
'`render` method, or you have multiple copies of React loaded '+
'(details: https://fb.me/react-refs-must-have-owner).');



if(owner.getPublicInstance().refs[ref]===component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports=ReactOwner;
});
__d('ReactUpdateQueue',function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
ReactUpdates.enqueueUpdate(internalInstance);}


function getInternalInstanceReadyForUpdate(publicInstance,callerName){
var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. '+
'This usually means you called %s() on an unmounted component. '+
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor.displayName);}


return null;}


if(__DEV__){
warning(
ReactCurrentOwner.current==null,
'%s(...): Cannot update during an existing state transition '+
'(such as within `render`). Render methods should be a pure function '+
'of props and state.',
callerName);}



return internalInstance;}






var ReactUpdateQueue={








isMounted:function(publicInstance){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner!==null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. '+
'render() should be a pure function of props and state. It should '+
'never access something that requires stale data from the previous '+
'render, such as refs. Move this logic to componentDidMount and '+
'componentDidUpdate instead.',
owner.getName()||'A component');

owner._warnedAboutRefsInRender=true;}}


var internalInstance=ReactInstanceMap.get(publicInstance);
if(internalInstance){



return !!internalInstance._renderedComponent;}else 
{
return false;}},











enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback==='function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, '+
'`setState`, `replaceState`, or `forceUpdate` with a callback that '+
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks=[callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback==='function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, '+
'`setState`, `replaceState`, or `forceUpdate` with a callback that '+
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks=[callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate=true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue=[completeState];
internalInstance._pendingReplaceState=true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue||(
internalInstance._pendingStateQueue=[]);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueSetPropsInternal(internalInstance,partialProps);},


enqueueSetPropsInternal:function(internalInstance,partialProps){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'setProps(...): You called `setProps` on a '+
'component with a parent. This is an anti-pattern since props will '+
'get reactively updated when rendered. Instead, change the owner\'s '+
'`render` method to pass the correct value as props to the component '+
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement||
topLevelWrapper._currentElement;
var element=wrapElement.props;
var props=assign({},element.props,partialProps);
topLevelWrapper._pendingElement=ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance,props);},


enqueueReplacePropsInternal:function(internalInstance,props){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'replaceProps(...): You called `replaceProps` on a '+
'component with a parent. This is an anti-pattern since props will '+
'get reactively updated when rendered. Instead, change the owner\'s '+
'`render` method to pass the correct value as props to the component '+
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement||
topLevelWrapper._currentElement;
var element=wrapElement.props;
topLevelWrapper._pendingElement=ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement=newElement;
enqueueUpdate(internalInstance);}};




module.exports=ReactUpdateQueue;
});
__d('ReactInstanceMap',function(global, require, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance=undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance!==undefined;},


set:function(key,value){
key._reactInternalInstance=value;}};




module.exports=ReactInstanceMap;
});
__d('ReactUpdates',function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction&&batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching '+
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength=dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength!==dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length=0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength=null;
this.callbackQueue=CallbackQueue.getPooled();
this.reconcileTransaction=
ReactUpdates.ReactReconcileTransaction.getPooled(false);}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength=null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue=null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction=null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});





PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d,e){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d,e);}









function mountOrderComparator(c1,c2){
return c1._mountOrder-c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len===dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to '+
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i<len;i++){



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks=null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j<callbacks.length;j++){
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length||asapEnqueued){
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued=false;
var queue=asapCallbackQueue;
asapCallbackQueue=CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates=ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();







if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where'+
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued=true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction=ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates==='function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates==='boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy=_batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports=ReactUpdates;
});
__d('CallbackQueue',function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks=null;
this._contexts=null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks=this._callbacks||[];
this._contexts=this._contexts||[];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length===contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks=null;
this._contexts=null;
for(var i=0;i<callbacks.length;i++){
callbacks[i].call(contexts[i]);}

callbacks.length=0;
contexts.length=0;}},








reset:function(){
this._callbacks=null;
this._contexts=null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports=CallbackQueue;
});
__d('PooledClass',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fourArgumentPooler=function(a1,a2,a3,a4){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4);
return instance;}else 
{
return new Klass(a1,a2,a3,a4);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

instance.destructor();
if(Klass.instancePool.length<Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool=[];
NewKlass.getPooled=pooler||DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize=DEFAULT_POOL_SIZE;}

NewKlass.release=standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fourArgumentPooler:fourArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports=PooledClass;
});
__d('Transaction',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers=this.getTransactionWrappers();
if(this.wrapperInitData){
this.wrapperInitData.length=0;}else 
{
this.wrapperInitData=[];}

this._isInTransaction=false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},



















perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there '+
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction=true;




errorThrown=true;
this.initializeAll(0);
ret=method.call(scope,a,b,c,d,e,f);
errorThrown=false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err){}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction=false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i<transactionWrappers.length;i++){
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i]=Transaction.OBSERVED_ERROR;
this.wrapperInitData[i]=wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i]===Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i+1);}
catch(err){}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i<transactionWrappers.length;i++){
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown=true;
if(initData!==Transaction.OBSERVED_ERROR&&wrapper.close){
wrapper.close.call(this,initData);}

errorThrown=false;}finally 
{
if(errorThrown){



try{
this.closeAll(i+1);}
catch(e){}}}}




this.wrapperInitData.length=0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports=Transaction;
});
__d('UIManager',function(global, require, module, exports) {  'use strict';












var UIManager=require('NativeModules').UIManager;

module.exports=UIManager;
});
__d('emptyObject',function(global, require, module, exports) {  'use strict';












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports=emptyObject;
});
__d('instantiateReactComponent',function(global, require, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});



function getDeclarationErrorAddendum(owner){
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `'+name+'`.';}}


return '';}









function isInternalComponentType(type){
return (
typeof type==='function'&&
typeof type.prototype!=='undefined'&&
typeof type.prototype.mountComponent==='function'&&
typeof type.prototype.receiveComponent==='function');}










function instantiateReactComponent(node){
var instance;

if(node===null||node===false){
instance=new ReactEmptyComponent(instantiateReactComponent);}else 
if(typeof node==='object'){
var element=node;
invariant(
element&&(typeof element.type==='function'||
typeof element.type==='string'),
'Element type is invalid: expected a string (for built-in components) '+
'or a class/function (for composite components) but got: %s.%s',
element.type==null?element.type:typeof element.type,
getDeclarationErrorAddendum(element._owner));



if(typeof element.type==='string'){
instance=ReactNativeComponent.createInternalComponent(element);}else 
if(isInternalComponentType(element.type)){



instance=new element.type(element);}else 
{
instance=new ReactCompositeComponentWrapper();}}else 

if(typeof node==='string'||typeof node==='number'){
instance=ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct==='function'&&
typeof instance.mountComponent==='function'&&
typeof instance.receiveComponent==='function'&&
typeof instance.unmountComponent==='function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex=0;
instance._mountImage=null;

if(__DEV__){
instance._isOwnerNecessary=false;
instance._warnedAboutRefsInRender=false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports=instantiateReactComponent;
});
__d('ReactCompositeComponent',function(global, require, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner||null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `'+name+'`.';}}


return '';}


function StatelessComponent(Component){}

StatelessComponent.prototype.render=function(){
var Component=ReactInstanceMap.get(this)._currentElement.type;
return Component(this.props,this.context,this.updater);};



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement=element;
this._rootNodeID=null;
this._instance=null;


this._pendingElement=null;
this._pendingStateQueue=null;
this._pendingReplaceState=false;
this._pendingForceUpdate=false;

this._renderedComponent=null;

this._context=null;
this._mountOrder=0;
this._topLevelWrapper=null;


this._pendingCallbacks=null;},











mountComponent:function(rootID,transaction,context){
this._context=context;
this._mountOrder=nextMountID++;
this._rootNodeID=rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(context);

var Component=this._currentElement.type;


var inst;
var renderedElement;





var canInstantiate='prototype' in Component;

if(canInstantiate){
if(__DEV__){
ReactCurrentOwner.current=this;
try{
inst=new Component(publicProps,publicContext,ReactUpdateQueue);}finally 
{
ReactCurrentOwner.current=null;}}else 

{
inst=new Component(publicProps,publicContext,ReactUpdateQueue);}}



if(!canInstantiate||inst===null||inst===false||ReactElement.isValidElement(inst)){
renderedElement=inst;
inst=new StatelessComponent(Component);}


if(__DEV__){


if(inst.render==null){
warning(
false,
'%s(...): No `render` method found on the returned component '+
'instance: you may have forgotten to define `render`, returned '+
'null/false from a stateless component, or tried to render an '+
'element whose type is a function that isn\'t a React component.',
Component.displayName||Component.name||'Component');}else 

{


warning(
Component.prototype&&Component.prototype.isReactComponent||
!canInstantiate||
!(inst instanceof Component),
'%s(...): React component classes must extend React.Component.',
Component.displayName||Component.name||'Component');}}






inst.props=publicProps;
inst.context=publicContext;
inst.refs=emptyObject;
inst.updater=ReactUpdateQueue;

this._instance=inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){



warning(
!inst.getInitialState||
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. '+
'This is only supported for classes created using React.createClass. '+
'Did you mean to define a state property instead?',
this.getName()||'a component');

warning(
!inst.getDefaultProps||
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. '+
'This is only supported for classes created using React.createClass. '+
'Use a static property to define defaultProps instead.',
this.getName()||'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static '+
'property to define propTypes instead.',
this.getName()||'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a '+
'static property to define contextTypes instead.',
this.getName()||'a component');

warning(
typeof inst.componentShouldUpdate!=='function',
'%s has a method called '+
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+
'The name is phrased as a question because the function is '+
'expected to return a value.',
this.getName()||'A component');

warning(
typeof inst.componentDidUnmount!=='function',
'%s has a method called '+
'componentDidUnmount(). But there is no such lifecycle method. '+
'Did you mean componentWillUnmount()?',
this.getName()||'A component');

warning(
typeof inst.componentWillRecieveProps!=='function',
'%s has a method called '+
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
this.getName()||'A component');}



var initialState=inst.state;
if(initialState===undefined){
inst.state=initialState=null;}

invariant(
typeof initialState==='object'&&!Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName()||'ReactCompositeComponent');


this._pendingStateQueue=null;
this._pendingReplaceState=false;
this._pendingForceUpdate=false;

if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state=this._processPendingState(inst.props,inst.context);}}




if(renderedElement===undefined){
renderedElement=this._renderValidatedComponent();}


this._renderedComponent=this._instantiateReactComponent(
renderedElement);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
inst.componentWillUnmount();}


ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent=null;
this._instance=null;




this._pendingStateQueue=null;
this._pendingReplaceState=false;
this._pendingForceUpdate=false;
this._pendingCallbacks=null;
this._pendingElement=null;



this._context=null;
this._rootNodeID=null;
this._topLevelWrapper=null;




ReactInstanceMap.remove(inst);},
















_maskContext:function(context){
var maskedContext=null;
var Component=this._currentElement.type;
var contextTypes=Component.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext={};
for(var contextName in contextTypes){
maskedContext[contextName]=context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=this._currentElement.type;
if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var Component=this._currentElement.type;
var inst=this._instance;
var childContext=inst.getChildContext&&inst.getChildContext();
if(childContext){
invariant(
typeof Component.childContextTypes==='object',
'%s.getChildContext(): childContextTypes must be defined in order to '+
'use getChildContext().',
this.getName()||'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
Component.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext){
invariant(
name in Component.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName()||'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=this._currentElement.type;
if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes){
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName]==='function',
'%s: %s type `%s` is invalid; it must be a function, usually '+
'from React.PropTypes.',
componentName||'React class',
ReactPropTypeLocationNames[location],
propName);

error=propTypes[propName](props,propName,componentName,location);}
catch(ex){
error=ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location===ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement=null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement!=null){
ReactReconciler.receiveComponent(
this,
this._pendingElement||this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue!==null||this._pendingForceUpdate){
this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=this._context===nextUnmaskedContext?
inst.context:
this._processContext(nextUnmaskedContext);
var nextProps;


if(prevParentElement===nextParentElement){


nextProps=nextParentElement.props;}else 
{
nextProps=this._processProps(nextParentElement.props);




if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate||
!inst.shouldComponentUpdate||
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate!=='undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a '+
'boolean value. Make sure to return true or false.',
this.getName()||'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate=false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement=nextParentElement;
this._context=nextUnmaskedContext;
inst.props=nextProps;
inst.state=nextState;
inst.context=nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState=false;
this._pendingStateQueue=null;

if(!queue){
return inst.state;}


if(replace&&queue.length===1){
return queue[0];}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i<queue.length;i++){
var partial=queue[i];
assign(
nextState,
typeof partial==='function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var hasComponentDidUpdate=Boolean(inst.componentDidUpdate);
var prevProps;
var prevState;
var prevContext;
if(hasComponentDidUpdate){
prevProps=inst.props;
prevState=inst.state;
prevContext=inst.context;}


if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement=nextElement;
this._context=unmaskedContext;
inst.props=nextProps;
inst.state=nextState;
inst.context=nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(hasComponentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent=this._instantiateReactComponent(
nextRenderedElement);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent==='undefined'&&
inst.render._isMockFunction){


renderedComponent=null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
ReactCurrentOwner.current=this;
try{
renderedComponent=
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactCurrentOwner.current=null;}

invariant(

renderedComponent===null||renderedComponent===false||
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have '+
'returned undefined, an array or some other invalid object.',
this.getName()||'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
invariant(inst!=null,'Stateless function components cannot have refs.');
var publicComponentInstance=component.getPublicInstance();
if(__DEV__){
var componentName=component&&component.getName?
component.getName():'a component';
warning(publicComponentInstance!=null,
'Stateless function components cannot be given refs '+
'(See ref "%s" in %s created by %s). '+
'Attempts to access this ref will fail.',
ref,
componentName,
this.getName());}


var refs=inst.refs===emptyObject?inst.refs={}:inst.refs;
refs[ref]=publicComponentInstance;},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance&&this._instance.constructor;
return (
type.displayName||constructor&&constructor.displayName||
type.name||constructor&&constructor.name||
null);},











getPublicInstance:function(){
var inst=this._instance;
if(inst instanceof StatelessComponent){
return null;}

return inst;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports=ReactCompositeComponent;
});
__d('ReactComponentEnvironment',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment=
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID=
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates=
environment.processChildrenUpdates;
injected=true;}}};





module.exports=ReactComponentEnvironment;
});
__d('ReactPropTypeLocations',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports=ReactPropTypeLocations;
});
__d('ReactPropTypeLocationNames',function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames={
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports=ReactPropTypeLocationNames;
});
__d('shouldUpdateReactComponent',function(global, require, module, exports) {  'use strict';
























function shouldUpdateReactComponent(prevElement,nextElement){
var prevEmpty=prevElement===null||prevElement===false;
var nextEmpty=nextElement===null||nextElement===false;
if(prevEmpty||nextEmpty){
return prevEmpty===nextEmpty;}


var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType==='string'||prevType==='number'){
return nextType==='string'||nextType==='number';}else 
{
return (
nextType==='object'&&
prevElement.type===nextElement.type&&
prevElement.key===nextElement.key);}


return false;}


module.exports=shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactEmptyComponentRegistry=require('ReactEmptyComponentRegistry');
var ReactReconciler=require('ReactReconciler');

var assign=require('Object.assign');

var placeholderElement;

var ReactEmptyComponentInjection={
injectEmptyComponent:function(component){
placeholderElement=ReactElement.createElement(component);}};



var ReactEmptyComponent=function(instantiate){
this._currentElement=null;
this._rootNodeID=null;
this._renderedComponent=instantiate(placeholderElement);};

assign(ReactEmptyComponent.prototype,{
construct:function(element){},

mountComponent:function(rootID,transaction,context){
ReactEmptyComponentRegistry.registerNullComponentID(rootID);
this._rootNodeID=rootID;
return ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
context);},


receiveComponent:function(){},

unmountComponent:function(rootID,transaction,context){
ReactReconciler.unmountComponent(this._renderedComponent);
ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
this._rootNodeID=null;
this._renderedComponent=null;}});



ReactEmptyComponent.injection=ReactEmptyComponentInjection;

module.exports=ReactEmptyComponent;
});
__d('ReactEmptyComponentRegistry',function(global, require, module, exports) {  'use strict';














var nullComponentIDsRegistry={};





function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}






function registerNullComponentID(id){
nullComponentIDsRegistry[id]=true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}


var ReactEmptyComponentRegistry={
isNullComponentID:isNullComponentID,
registerNullComponentID:registerNullComponentID,
deregisterNullComponentID:deregisterNullComponentID};


module.exports=ReactEmptyComponentRegistry;
});
__d('ReactNativeComponent',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass=componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass=componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);}};









function getComponentClassForElement(element){
if(typeof element.type==='function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass==null){
tagToComponentClass[tag]=componentClass=autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports=ReactNativeComponent;
});
__d('findNodeHandle',function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner!==null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). '+
'render() should be a pure function of props and state. It should '+
'never access something that requires stale data from the previous '+
'render, such as refs. Move this logic to componentDidMount and '+
'componentDidUpdate instead.',
owner.getName()||'A component');

owner._warnedAboutRefsInRender=true;}}


if(componentOrHandle==null){
return null;}

if(typeof componentOrHandle==='number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component==='object'&&
'_rootNodeID' in component||


component.render!=null&&
typeof component.render==='function',

'findNodeHandle(...): Argument is not a component '+
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted '+
'component.');}}}





module.exports=findNodeHandle;
});
__d('ReactNativeTextComponent',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var UIManager=require('UIManager');

var assign=require('Object.assign');
var invariant=require('invariant');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement=text;
this._stringText=''+text;
this._rootNodeID=null;},


mountComponent:function(rootID,transaction,context){
invariant(
context.isInAParentText,
'RawText "'+this._stringText+'" must be wrapped in an explicit '+
'<Text> component.');

this._rootNodeID=rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
UIManager.createView(
tag,
'RCTRawText',
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
{text:this._stringText});

return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText!==this._currentElement){
this._currentElement=nextText;
var nextStringText=''+nextText;
if(nextStringText!==this._stringText){
this._stringText=nextStringText;
UIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement=null;
this._stringText=null;
this._rootNodeID=null;}});




module.exports=ReactNativeTextComponent;
});
__d('RCTDebugComponentOwnership',function(global, require, module, exports) {  'use strict';
















var BatchedBridge=require('BatchedBridge');
var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


var RCTDebugComponentOwnership={








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};



BatchedBridge.registerCallableModule(
'RCTDebugComponentOwnership',
RCTDebugComponentOwnership);


module.exports=RCTDebugComponentOwnership;
});
__d('InspectorUtils',function(global, require, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID===findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren){
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports={findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};
});
__d('PerformanceLogger',function(global, require, module, exports) {  'use strict';











var BatchedBridge=require('BatchedBridge');

var performanceNow=require('performanceNow');

var timespans={};
var extras={};





var PerformanceLogger={
addTimespan:function(key,lengthInMs,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists ',
key);}


return;}


timespans[key]={
description:description,
totalTime:lengthInMs};},



startTimespan:function(key,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists ',
key);}


return;}


timespans[key]={
description:description,
startTime:performanceNow()};},



stopTimespan:function(key){
if(!timespans[key]||!timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started ',
key);}


return;}

if(timespans[key].endTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has already ended ',
key);}


return;}


timespans[key].endTime=performanceNow();
timespans[key].totalTime=
timespans[key].endTime-timespans[key].startTime;},


clear:function(){
timespans={};
extras={};},


clearExceptTimespans:function(keys){
timespans=Object.keys(timespans).reduce(function(previous,key){
if(keys.indexOf(key)!==-1){
previous[key]=timespans[key];}

return previous;},
{});
extras={};},


getTimespans:function(){
return timespans;},


hasTimespan:function(key){
return !!timespans[key];},


logTimespans:function(){
for(var key in timespans){
if(timespans[key].totalTime){
console.log(key+': '+timespans[key].totalTime+'ms');}}},




addTimespans:function(newTimespans,labels){
for(var i=0,l=newTimespans.length;i<l;i+=2){
var label=labels[i/2];
PerformanceLogger.addTimespan(
label,
newTimespans[i+1]-newTimespans[i],
label);}},




setExtra:function(key,value){
if(extras[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to set an extra that already exists ',
key);}


return;}

extras[key]=value;},


getExtras:function(){
return extras;}};



BatchedBridge.registerCallableModule(
'PerformanceLogger',
PerformanceLogger);


module.exports=PerformanceLogger;
});
__d('EventPluginHub',function(global, require, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');
var ReactErrorUtils=require('ReactErrorUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');
var warning=require('warning');




var listenerBank={};





var eventQueue=null;








var executeDispatchesAndRelease=function(event,simulated){
if(event){
EventPluginUtils.executeDispatchesInOrder(event,simulated);

if(!event.isPersistent()){
event.constructor.release(event);}}};



var executeDispatchesAndReleaseSimulated=function(e){
return executeDispatchesAndRelease(e,true);};

var executeDispatchesAndReleaseTopLevel=function(e){
return executeDispatchesAndRelease(e,false);};






var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle&&
InstanceHandle.traverseTwoPhase&&
InstanceHandle.traverseEnterLeave;
warning(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle=InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
typeof listener==='function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName]||(listenerBank[registrationName]={});
bankForRegistrationName[id]=listener;

var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule&&PluginModule.didPutListener){
PluginModule.didPutListener(id,registrationName,listener);}},








getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName&&bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule&&PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


var bankForRegistrationName=listenerBank[registrationName];

if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank){
if(!listenerBank[registrationName][id]){
continue;}


var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule&&PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0;i<plugins.length;i++){

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

if(extractedEvents){
events=accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue=accumulateInto(eventQueue,events);}},








processEventQueue:function(simulated){


var processingEventQueue=eventQueue;
eventQueue=null;
if(simulated){
forEachAccumulated(
processingEventQueue,
executeDispatchesAndReleaseSimulated);}else 

{
forEachAccumulated(
processingEventQueue,
executeDispatchesAndReleaseTopLevel);}


invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing '+
'an event queue. Support for this has not yet been implemented.');


ReactErrorUtils.rethrowCaughtError();},





__purge:function(){
listenerBank={};},


__getListenerBank:function(){
return listenerBank;}};




module.exports=EventPluginHub;
});
__d('EventPluginRegistry',function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins){
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex>-1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in '+
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` '+
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex]=PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents){
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same '+
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName]=dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames){
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same '+
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName]=PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName]=
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than '+
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder=Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins){
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName)||
namesToPlugins[pluginName]!==PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins '+
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName]=PluginModule;
isOrderingDirty=true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName]||
null;}

for(var phase in dispatchConfig.phasedRegistrationNames){
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder=null;
for(var pluginName in namesToPlugins){
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length=0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs){
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules){
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports=EventPluginRegistry;
});
__d('EventPluginUtils',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var ReactErrorUtils=require('ReactErrorUtils');

var invariant=require('invariant');
var warning=require('warning');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount=InjectedMount;
if(__DEV__){
warning(
InjectedMount&&InjectedMount.getNode&&InjectedMount.getID,
'EventPluginUtils.injection.injectMount(...): Injected Mount '+
'module is missing getNode or getID.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType===topLevelTypes.topMouseUp||
topLevelType===topLevelTypes.topTouchEnd||
topLevelType===topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType===topLevelTypes.topMouseMove||
topLevelType===topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType===topLevelTypes.topMouseDown||
topLevelType===topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches=function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

warning(
idsIsArr===listenersIsArr&&IDsLen===listenersLen,
'EventPluginUtils: Invalid `event`.');};}











function executeDispatch(event,simulated,listener,domID){
var type=event.type||'unknown-event';
event.currentTarget=injection.Mount.getNode(domID);
if(simulated){
ReactErrorUtils.invokeGuardedCallbackWithCatch(
type,
listener,
event,
domID);}else 

{
ReactErrorUtils.invokeGuardedCallback(type,listener,event,domID);}

event.currentTarget=null;}





function executeDispatchesInOrder(event,simulated){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i<dispatchListeners.length;i++){
if(event.isPropagationStopped()){
break;}


executeDispatch(event,simulated,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
executeDispatch(event,simulated,dispatchListeners,dispatchIDs);}

event._dispatchListeners=null;
event._dispatchIDs=null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i<dispatchListeners.length;i++){
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs=null;
event._dispatchListeners=null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners=null;
event._dispatchIDs=null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,

getNode:function(id){
return injection.Mount.getNode(id);},

getID:function(node){
return injection.Mount.getID(node);},


injection:injection};


module.exports=EventPluginUtils;
});
__d('EventConstants',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topAbort:null,
topBlur:null,
topCanPlay:null,
topCanPlayThrough:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topDurationChange:null,
topEmptied:null,
topEncrypted:null,
topEnded:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topLoadedData:null,
topLoadedMetadata:null,
topLoadStart:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topPause:null,
topPlay:null,
topPlaying:null,
topProgress:null,
topRateChange:null,
topReset:null,
topScroll:null,
topSeeked:null,
topSeeking:null,
topSelectionChange:null,
topStalled:null,
topSubmit:null,
topSuspend:null,
topTextInput:null,
topTimeUpdate:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topVolumeChange:null,
topWaiting:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports=EventConstants;
});
__d('ReactErrorUtils',function(global, require, module, exports) {  'use strict';













var caughtError=null;









function invokeGuardedCallback(name,func,a,b){
try{
return func(a,b);}
catch(x){
if(caughtError===null){
caughtError=x;}

return undefined;}}



var ReactErrorUtils={
invokeGuardedCallback:invokeGuardedCallback,





invokeGuardedCallbackWithCatch:invokeGuardedCallback,





rethrowCaughtError:function(){
if(caughtError){
var error=caughtError;
caughtError=null;
throw error;}}};




if(__DEV__){




if(typeof window!=='undefined'&&
typeof window.dispatchEvent==='function'&&
typeof document!=='undefined'&&
typeof document.createEvent==='function'){
var fakeNode=document.createElement('react');
ReactErrorUtils.invokeGuardedCallback=function(name,func,a,b){
var boundFunc=func.bind(null,a,b);
var evtType='react-'+name;
fakeNode.addEventListener(evtType,boundFunc,false);
var evt=document.createEvent('Event');
evt.initEvent(evtType,false,false);
fakeNode.dispatchEvent(evt);
fakeNode.removeEventListener(evtType,boundFunc,false);};}}




module.exports=ReactErrorUtils;
});
__d('accumulateInto',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next!=null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current==null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray&&nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports=accumulateInto;
});
__d('forEachAccumulated',function(global, require, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports=forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',function(global, require, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports=IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',function(global, require, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var SyntheticEvent=require('SyntheticEvent');
var UIManager=require('UIManager');

var merge=require('merge');
var warning=require('warning');

var customBubblingEventTypes=UIManager.customBubblingEventTypes;
var customDirectEventTypes=UIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes){
allTypesByEventName[bubblingTypeName]=customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes){
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName]=customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig||directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports=IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var warning=require('warning');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
warning(
domID,
'Dispatching id must not be null');}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners=
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs=accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event&&event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event&&event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event&&event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners=
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs=accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event&&event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports=EventPropagators;
});
__d('SyntheticEvent',function(global, require, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');





var EventInterface={
type:null,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp||Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
this.dispatchConfig=dispatchConfig;
this.dispatchMarker=dispatchMarker;
this.nativeEvent=nativeEvent;
this.target=nativeEventTarget;
this.currentTarget=nativeEventTarget;

var Interface=this.constructor.Interface;
for(var propName in Interface){
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName]=normalize(nativeEvent);}else 
{
this[propName]=nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented!=null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue===false;
if(defaultPrevented){
this.isDefaultPrevented=emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented=emptyFunction.thatReturnsFalse;}

this.isPropagationStopped=emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented=true;
var event=this.nativeEvent;
if(__DEV__){
warning(
event,
'This synthetic event is reused for performance reasons. If you\'re '+
'seeing this, you\'re calling `preventDefault` on a '+
'released/nullified synthetic event. This is a no-op. See '+
'https://fb.me/react-event-pooling for more information.');}


if(!event){
return;}


if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue=false;}

this.isDefaultPrevented=emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(__DEV__){
warning(
event,
'This synthetic event is reused for performance reasons. If you\'re '+
'seeing this, you\'re calling `stopPropagation` on a '+
'released/nullified synthetic event. This is a no-op. See '+
'https://fb.me/react-event-pooling for more information.');}


if(!event){
return;}


if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble=true;}

this.isPropagationStopped=emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent=emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface){
this[propName]=null;}

this.dispatchConfig=null;
this.dispatchMarker=null;
this.nativeEvent=null;}});




SyntheticEvent.Interface=EventInterface;







SyntheticEvent.augmentClass=function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype=prototype;
Class.prototype.constructor=Class;

Class.Interface=assign({},Super.Interface,Interface);
Class.augmentClass=Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.fourArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.fourArgumentPooler);

module.exports=SyntheticEvent;
});
__d('merge',function(global, require, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports=merge;
});
__d('mergeInto',function(global, require, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two!=null){
checkMergeObjectArg(two);
for(var key in two){
if(!two.hasOwnProperty(key)){
continue;}

one[key]=two[key];}}}




module.exports=mergeInto;
});
__d('mergeHelpers',function(global, require, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o!=='object'||o===null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg===undefined||arg===null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one)&&Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg)&&!Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg)||typeof arg==='function')&&!Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level<MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge '+
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy===undefined||strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to '+
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports=mergeHelpers;
});
__d('NodeHandle',function(global, require, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation=Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports=NodeHandle;
});
__d('ReactDefaultBatchingStrategy',function(global, require, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates=false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d,e){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates=true;


if(alreadyBatchingUpdates){
callback(a,b,c,d,e);}else 
{
transaction.perform(callback,null,a,b,c,d,e);}}};




module.exports=ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',function(global, require, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports=ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var ReactPerf=require('ReactPerf');
var UIManager=require('UIManager');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i<childrenUpdates.length;i++){
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag]||(byContainerTag[containerTag]={});
if(update.type===ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices||(updates.moveFromIndices=[])).push(update.fromIndex);
(updates.moveToIndices||(updates.moveToIndices=[])).push(update.toIndex);}else 
if(update.type===ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices||(updates.removeAtIndices=[])).push(update.fromIndex);}else 
if(update.type===ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices||(updates.addAtIndices=[])).push(update.toIndex);
(updates.addChildTags||(updates.addChildTags=[])).push(tag);}}





for(var updateParentTagString in byContainerTag){
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
UIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
UIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports=ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
SET_MARKUP:null,
TEXT_CONTENT:null});


module.exports=ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady=CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady=null;}};



babelHelpers.extends(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports=ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',function(global, require, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches===0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle=null;}}else 

if(!interactionHandle){
interactionHandle=InteractionManager.createInteractionHandle();}}};




module.exports=ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',function(global, require, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
return new Promise(function(resolve){
scheduleUpdate();
if(callback){
_queue.push(callback);}

_queue.push(resolve);});},






createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle=setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle=null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount!==0&&nextInteractionCount===0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount===0&&nextInteractionCount!==0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount===0){
var queue=_queue;
_queue=[];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports=InteractionManager;
});
__d('Set',function(global, require, module, exports) {  var 



















Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports=function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=function(){










function Set(iterable){babelHelpers.classCallCheck(this,Set);
if(this==null||
typeof this!=='object'&&typeof this!=='function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable!=null){
var it=toIterator(iterable);
var next;
while(!(next=it.next()).done){
this.add(next.value);}}}babelHelpers.createClass(Set,[{key:'add',value:function add(












value){
this._map.set(value,value);
this.size=this._map.size;
return this;}},{key:'clear',value:function clear()







{
initSet(this);}},{key:'delete',value:function _delete(











value){
var ret=this._map.delete(value);
this.size=this._map.size;
return ret;}},{key:'entries',value:function entries()







{
return this._map.entries();}},{key:'forEach',value:function forEach(









callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next=it.next()).done){
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:function has(











value){
return this._map.has(value);}},{key:'values',value:function values()







{
return this._map.values();}}]);return Set;}();




Set.prototype[toIterator.ITERATOR_SYMBOL]=Set.prototype.values;


Set.prototype.keys=Set.prototype.values;

function initSet(set){
set._map=new Map();
set.size=set._map.size;}


return Set;}(
Function('return this')());
});
__d('Map',function(global, require, module, exports) {  var 



















guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports=function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP='$size'+guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=function(){










function Map(iterable){babelHelpers.classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable!=null){
var it=toIterator(iterable);
var next;
while(!(next=it.next()).done){
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}babelHelpers.createClass(Map,[{key:'clear',value:function clear()








{
initMap(this);}},{key:'has',value:function has(









key){
var index=getIndex(this,key);
return !!(index!=null&&this._mapData[index]);}},{key:'set',value:function set(










key,value){
var index=getIndex(this,key);

if(index!=null&&this._mapData[index]){
this._mapData[index][1]=value;}else 
{
index=this._mapData.push([
key,
value])-
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP]+=1;}else 
{
this.size+=1;}}



return this;}},{key:'get',value:function get(









key){
var index=getIndex(this,key);
if(index==null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:function _delete(











key){
var index=getIndex(this,key);
if(index!=null&&this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index]=undefined;
if(__DEV__){
this[SECRET_SIZE_PROP]-=1;}else 
{
this.size-=1;}

return true;}else 
{
return false;}}},{key:'entries',value:function entries()










{
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:function keys()








{
return new MapIterator(this,KIND_KEY);}},{key:'values',value:function values()








{
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:function forEach(











callback,thisArg){
if(typeof callback!=='function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg||undefined);
var mapData=this._mapData;




for(var i=0;i<mapData.length;i++){
var entry=mapData[i];
if(entry!=null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;}();






Map.prototype[toIterator.ITERATOR_SYMBOL]=Map.prototype.entries;var 

MapIterator=function(){









function MapIterator(map,kind){babelHelpers.classCallCheck(this,MapIterator);
if(!(isObject(map)&&map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind)===-1){
throw new Error('Invalid iteration kind.');}


this._map=map;
this._nextIndex=0;
this._kind=kind;}babelHelpers.createClass(MapIterator,[{key:'next',value:function next()








{
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map==null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index<entries.length){
var record=entries[index];

index+=1;
this._nextIndex=index;

if(record){
if(kind===KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind===KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map=undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;}();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL]=function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX+key;
if(typeof key==='string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index==null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash]=index;}}else 

{
var prefixedKey=KEY_PREFIX+key;
if(typeof key==='string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey]=index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey]=index;}}}}










function initMap(map){






map._mapData=[];







map._objectIndex={};


map._stringIndex={};


map._otherIndex={};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP]=0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which '+
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size=0;}








function isObject(o){
return o!=null&&(typeof o==='object'||typeof o==='function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e){
return false;}}();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID=node.uniqueID;
break;
case 9:
uniqueID=node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX+uniqueID;}else 
{
return null;}}



var getHash=function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5&&
o.propertyIsEnumerable&&
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5&&
isNode(o)&&
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5&&o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter+=1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable=function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty]=hashCounter;}else 
if(isNode(o)){




o[hashProperty]=hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};}();




return Map;}(
Function('return this')());
});
__d('guid',function(global, require, module, exports) {  function 

























guid(){
return 'f'+(Math.random()*(1<<30)).toString(16).replace('.','');}


module.exports=guid;
});
__d('isNode',function(global, require, module, exports) {  function 















isNode(object){
return !!(object&&(
typeof Node==='function'?object instanceof Node:
typeof object==='object'&&
typeof object.nodeType==='number'&&
typeof object.nodeName==='string'));}



module.exports=isNode;
});
__d('toIterator',function(global, require, module, exports) {  var 






























KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol==='function'?
Symbol.iterator:
'@@iterator';

var toIterator=function(){
if(!(Array.prototype[ITERATOR_SYMBOL]&&
String.prototype[ITERATOR_SYMBOL])){

return function(){var 
ArrayIterator=function(){

function ArrayIterator(array,kind){babelHelpers.classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject=array;
this._kind=kind;
this._nextIndex=0;}babelHelpers.createClass(ArrayIterator,[{key:'next',value:function next()



{
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject==null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index>=len){
this._iteratedObject=undefined;
return createIterResultObject(undefined,true);}


this._nextIndex=index+1;

if(kind===KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind===KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind===KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;}();var 



StringIterator=function(){

function StringIterator(string){babelHelpers.classCallCheck(this,StringIterator);
if(typeof string!=='string'){
throw new TypeError('Object is not a string');}

this._iteratedString=string;
this._nextIndex=0;}babelHelpers.createClass(StringIterator,[{key:'next',value:function next()



{
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString==null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index>=len){
this._iteratedString=undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first<0xD800||first>0xDBFF||index+1===len){
ret=s[index];}else 
{
var second=s.charCodeAt(index+1);
if(second<0xDC00||second>0xDFFF){
ret=s[index];}else 
{
ret=s[index]+s[index+1];}}



this._nextIndex=index+ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;}();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object==='string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind||KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};}();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}}();








babelHelpers.extends(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports=toIterator;
});
__d('_shouldPolyfillES6Collection',function(global, require, module, exports) {  function 
























shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection==null){
return true;}






if(typeof global.Symbol!=='function'){
return true;}


var proto=Collection.prototype;




return Collection==null||
typeof Collection!=='function'||
typeof proto.clear!=='function'||
new Collection().size!==0||
typeof proto.keys!=='function'||
typeof proto.forEach!=='function';}


module.exports=shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var UIManager=require('UIManager');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to,blockNativeResponder){
if(to!==null){
UIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to),
blockNativeResponder);}else 

{
UIManager.clearJSResponder();}}};




module.exports=ReactNativeGlobalResponderHandler;
});
__d('ResponderEventPlugin',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID,blockNativeResponder){
var oldResponderID=responderID;
responderID=nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler!==null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID,
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType===EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles.getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom===responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent,
nativeEventTarget);

shouldSetEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID||wantsResponderID===responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent,
nativeEventTarget);

grantEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent)===true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent,
nativeEventTarget);

terminationRequestEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent)||
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent,
nativeEventTarget);

terminateEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted=accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID,blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent,
nativeEventTarget);

rejectEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted=accumulate(extracted,rejectEvent);}}else 

{
extracted=accumulate(extracted,grantEvent);
changeResponder(wantsResponderID,blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent){
return topLevelTargetID&&(



topLevelType===EventConstants.topLevelTypes.topScroll&&
!nativeEvent.responderIgnoreScroll||
trackedTouchCount>0&&
topLevelType===EventConstants.topLevelTypes.topSelectionChange||
isStartish(topLevelType)||
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches||touches.length===0){
return true;}

for(var i=0;i<touches.length;i++){
var activeTouch=touches[i];
var target=activeTouch.target;
if(target!==null&&target!==undefined&&target!==0){

var isAncestor=
ReactInstanceHandles.isAncestorIDOf(
responderID,
EventPluginUtils.getID(target));

if(isAncestor){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
if(isStartish(topLevelType)){
trackedTouchCount+=1;}else 
if(isEndish(topLevelType)){
trackedTouchCount-=1;
invariant(
trackedTouchCount>=0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent,nativeEventTarget);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent)?
setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget):
null;










var isResponderTouchStart=responderID&&isStartish(topLevelType);
var isResponderTouchMove=responderID&&isMoveish(topLevelType);
var isResponderTouchEnd=responderID&&isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(
incrementalTouch,
responderID,
nativeEvent,
nativeEventTarget);

gesture.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted=accumulate(extracted,gesture);}


var isResponderTerminate=
responderID&&
topLevelType===EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID&&
!isResponderTerminate&&
isEndish(topLevelType)&&
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent,nativeEventTarget);
finalEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted=accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler&&
numberActiveTouches!==previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches=numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler=GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler=GlobalInteractionHandler;}}};




module.exports=ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',function(global, require, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports=ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',function(global, require, module, exports) {  'use strict';












var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp||touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive=true;
touchTrack.startTimeStamp=timestampForTouch(touch);
touchTrack.startPageX=touch.pageX;
touchTrack.startPageY=touch.pageY;
touchTrack.currentPageX=touch.pageX;
touchTrack.currentPageY=touch.pageY;
touchTrack.currentTimeStamp=timestampForTouch(touch);
touchTrack.previousPageX=touch.pageX;
touchTrack.previousPageY=touch.pageY;
touchTrack.previousTimeStamp=timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier!=null,'Touch object is missing identifier');
if(identifier>MAX_TOUCH_BANK){
console.warn(
'Touch identifier '+identifier+' is greater than maximum '+
'supported '+MAX_TOUCH_BANK+' which causes performance issues '+
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(touchTrack){
reinitializeTouchTrack(touchTrack,touch);}else 
{
touchBank[touch.identifier]=initializeTouchData(touch);}

touchHistory.mostRecentTimeStamp=timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive=true;
touchTrack.previousPageX=touchTrack.currentPageX;
touchTrack.previousPageY=touchTrack.currentPageY;
touchTrack.previousTimeStamp=touchTrack.currentTimeStamp;
touchTrack.currentPageX=touch.pageX;
touchTrack.currentPageY=touch.pageY;
touchTrack.currentTimeStamp=timestampForTouch(touch);
touchHistory.mostRecentTimeStamp=timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX=touchTrack.currentPageX;
touchTrack.previousPageY=touchTrack.currentPageY;
touchTrack.previousTimeStamp=touchTrack.currentTimeStamp;
touchTrack.currentPageX=touch.pageX;
touchTrack.currentPageY=touch.pageY;
touchTrack.currentTimeStamp=timestampForTouch(touch);
touchTrack.touchActive=false;
touchHistory.mostRecentTimeStamp=timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches=nativeEvent.touches.length;
if(touchHistory.numberActiveTouches===1){
touchHistory.indexOfSingleActiveTouch=nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches=nativeEvent.touches.length;
if(touchHistory.numberActiveTouches===1){
for(var i=0;i<touchBank.length;i++){
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck!=null&&touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch=i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData!=null&&!!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports=ResponderTouchHistoryStore;
});
__d('accumulate',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next!=null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current==null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports=accumulate;
});
__d('keyOf',function(global, require, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj){
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports=keyOf;
});
__d('UniversalWorkerNodeHandle',function(global, require, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle!==undefined&&nodeHandle!==null&&nodeHandle!==0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports=UniversalWorkerNodeHandle;
});
__d('RCTEventEmitter',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');

BatchedBridge.registerCallableModule(
'RCTEventEmitter',
ReactNativeEventEmitter);



module.exports=ReactNativeEventEmitter;
});
__d('ReactNativeEventEmitter',function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i<indices.length;i++){
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i<indices.length;i++){
var index=indices[i];
rippedOut.push(touches[index]);
temp[index]=null;}

var fillAt=0;
for(var j=0;j<temp.length;j++){
var cur=temp[j];
if(cur!==null){
temp[fillAt++]=cur;}}


temp.length=fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam||EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent,
nativeEvent.target);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType===topLevelTypes.topTouchEnd||
eventTopLevelType===topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj<changedTouches.length;jj++){
var touch=changedTouches[jj];


touch.changedTouches=changedTouches;
touch.touches=touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target!==null&&target!==undefined){
if(target<ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID=NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports=ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue(false);}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

runEventQueueInBatch(events);}};



module.exports=ReactEventEmitterMixin;
});
__d('RCTLog',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');

var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
fatal:'error'};var 


RCTLog=function(){function RCTLog(){babelHelpers.classCallCheck(this,RCTLog);}babelHelpers.createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:function logIfNoNativeHook()

{
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "'+level+'" not one of '+Object.keys(levelsMap));

if(typeof global.nativeLoggingHook==='undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;}();



BatchedBridge.registerCallableModule(
'RCTLog',
RCTLog);


module.exports=RCTLog;
});
__d('View',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var UIManager=require('UIManager');
var ViewStylePropTypes=require('ViewStylePropTypes');

var requireNativeComponent=require('requireNativeComponent');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];


var AccessibilityComponentType=[
'none',
'button',
'radiobutton_checked',
'radiobutton_unchecked'];






















var View=React.createClass({displayName:'View',
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


statics:{
AccessibilityTraits:AccessibilityTraits,
AccessibilityComponentType:AccessibilityComponentType},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,






accessibilityComponentType:PropTypes.oneOf(AccessibilityComponentType),








accessibilityLiveRegion:PropTypes.oneOf([
'none',
'polite',
'assertive']),


















importantForAccessibility:PropTypes.oneOf([
'auto',
'yes',
'no',
'no-hide-descendants']),







accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,





testID:PropTypes.string,






onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,
onMoveShouldSetResponder:PropTypes.func,
onMoveShouldSetResponderCapture:PropTypes.func,










onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,














renderToHardwareTextureAndroid:PropTypes.bool,














shouldRasterizeIOS:PropTypes.bool,








collapsable:PropTypes.bool,






















needsOffscreenAlphaCompositing:PropTypes.bool},


render:function(){




return React.createElement(RCTView,this.props);}});



var RCTView=requireNativeComponent('RCTView',View,{
nativeOnly:{
nativeBackgroundAndroid:true}});



if(__DEV__){
var viewConfig=UIManager.viewConfigs&&UIManager.viewConfigs.RCTView||{};
for(var prop in viewConfig.nativeProps){
var viewAny=View;
if(!viewAny.propTypes[prop]&&!ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `'+prop+'`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport=View;}


module.exports=ViewToExport;
});
__d('NativeMethodsMixin',function(global, require, module, exports) {  'use strict';












var ReactNativeAttributePayload=require('ReactNativeAttributePayload');
var TextInputState=require('TextInputState');
var UIManager=require('UIManager');

var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');

















function warnForStyleProps(props,validAttributes){
for(var key in validAttributes.style){
if(!(validAttributes[key]||props[key]===undefined)){
console.error(
'You are setting the style `{ '+key+': ... }` as a prop. You '+
'should nest it in a style object. '+
'E.g. `{ style: { '+key+': ... } }`');}}}

















var NativeMethodsMixin={

















measure:function(callback){
UIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},











measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
UIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},









setNativeProps:function(nativeProps){
if(__DEV__){
warnForStyleProps(nativeProps,this.viewConfig.validAttributes);}


var updatePayload=ReactNativeAttributePayload.create(
nativeProps,
this.viewConfig.validAttributes);


UIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
updatePayload);},







focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},





blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles!==undefined){
var owner=component._owner||null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `'+name+'`, did '+
'you mean `style` (singular)?';
if(owner&&owner.constructor&&owner.constructor.displayName){
msg+='\n\nCheck the `'+owner.constructor.displayName+'` parent '+
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount&&
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount=function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps=function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback||context.isMounted&&!context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports=NativeMethodsMixin;
});
__d('ReactNativeAttributePayload',function(global, require, module, exports) {  'use strict';












var Platform=require('Platform');

var deepDiffer=require('deepDiffer');
var styleDiffer=require('styleDiffer');
var flattenStyle=require('flattenStyle');














function translateKey(propKey){
if(propKey==='transform'){




if(Platform.OS==='android'){
return 'decomposedMatrix';}else 
{
return 'transformMatrix';}}


return propKey;}


function defaultDiffer(prevProp,nextProp){
if(typeof nextProp!=='object'||nextProp===null){

return true;}else 
{

return deepDiffer(prevProp,nextProp);}}



function diffNestedProperty(
updatePayload,
prevProp,
nextProp,
validAttributes)
{





if(!styleDiffer(prevProp,nextProp)){
return updatePayload;}




var previousFlattenedStyle=flattenStyle(prevProp);
var nextFlattenedStyle=flattenStyle(nextProp);

if(!previousFlattenedStyle||!nextFlattenedStyle){
if(nextFlattenedStyle){
return addProperties(
updatePayload,
nextFlattenedStyle,
validAttributes);}


if(previousFlattenedStyle){
return clearProperties(
updatePayload,
previousFlattenedStyle,
validAttributes);}


return updatePayload;}



return diffProperties(
updatePayload,
previousFlattenedStyle,
nextFlattenedStyle,
validAttributes);}























function clearNestedProperty(
updatePayload,
prevProp,
validAttributes)
{

return diffNestedProperty(updatePayload,prevProp,{},validAttributes);}








function diffProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var attributeConfig;
var nextProp;
var prevProp;

for(var propKey in nextProps){
attributeConfig=validAttributes[propKey];
if(!attributeConfig){
continue;}


var altKey=translateKey(propKey);
if(!validAttributes[altKey]){

altKey=propKey;}


if(updatePayload&&updatePayload[altKey]!==undefined){


continue;}

prevProp=prevProps[propKey];
nextProp=nextProps[propKey];



if(typeof nextProp==='function'){
nextProp=true;


if(typeof prevProp==='function'){
prevProp=true;}}



if(prevProp===nextProp){
continue;}



if(typeof attributeConfig!=='object'){

if(defaultDiffer(prevProp,nextProp)){

(updatePayload||(updatePayload={}))[altKey]=nextProp;}}else 

if(typeof attributeConfig.diff==='function'||
typeof attributeConfig.process==='function'){

var shouldUpdate=prevProp===undefined||(
typeof attributeConfig.diff==='function'?
attributeConfig.diff(prevProp,nextProp):
defaultDiffer(prevProp,nextProp));

if(shouldUpdate){
var nextValue=typeof attributeConfig.process==='function'?
attributeConfig.process(nextProp):
nextProp;
(updatePayload||(updatePayload={}))[altKey]=nextValue;}}else 

{

updatePayload=diffNestedProperty(
updatePayload,
prevProp,
nextProp,
attributeConfig);}}







for(var propKey in prevProps){
if(nextProps[propKey]!==undefined){
continue;}

attributeConfig=validAttributes[propKey];
if(!attributeConfig){
continue;}


prevProp=prevProps[propKey];
if(prevProp===undefined){
continue;}


if(typeof attributeConfig!=='object'||
typeof attributeConfig.diff==='function'||
typeof attributeConfig.process==='function'){



(updatePayload||(updatePayload={}))[translateKey(propKey)]=null;}else 
{



updatePayload=clearNestedProperty(
updatePayload,
prevProp,
attributeConfig);}}



return updatePayload;}





function addProperties(
updatePayload,
props,
validAttributes)
{
return diffProperties(updatePayload,{},props,validAttributes);}






function clearProperties(
updatePayload,
prevProps,
validAttributes)
{
return diffProperties(updatePayload,prevProps,{},validAttributes);}


var ReactNativeAttributePayload={

create:function(
props,
validAttributes)
{
return addProperties(
null,
props,
validAttributes);},



diff:function(
prevProps,
nextProps,
validAttributes)
{
return diffProperties(
null,
prevProps,
nextProps,
validAttributes);}};





module.exports=ReactNativeAttributePayload;
});
__d('deepDiffer',function(global, require, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one===two){

return false;}

if(typeof one==='function'&&typeof two==='function'){

return false;}

if(typeof one!=='object'||one===null){

return one!==two;}

if(typeof two!=='object'||two===null){


return true;}

if(one.constructor!==two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length!==len){
return true;}

for(var ii=0;ii<len;ii++){
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one){
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two){


if(one[twoKey]===undefined&&two[twoKey]!==undefined){
return true;}}}



return false;};


module.exports=deepDiffer;
});
__d('styleDiffer',function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a!==typeof b){
return false;}

if(typeof a==='number'){
return a===b;}


if(Array.isArray(a)){
if(!Array.isArray(b)||a.length!==b.length){
return false;}

for(var i=0;i<a.length;++i){
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a){
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b){
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports=styleDiffer;
});
__d('TextInputState',function(global, require, module, exports) {  'use strict';
















var Platform=require('Platform');
var UIManager=require('UIManager');

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID!==textFieldID&&textFieldID!==null){
this._currentlyFocusedID=textFieldID;
if(Platform.OS==='ios'){
UIManager.focus(textFieldID);}else 
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
textFieldID,
UIManager.AndroidTextInput.Commands.focusTextInput,
null);}}},










blurTextInput:function(textFieldID){
if(this._currentlyFocusedID===textFieldID&&textFieldID!==null){
this._currentlyFocusedID=null;
if(Platform.OS==='ios'){
UIManager.blur(textFieldID);}else 
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
textFieldID,
UIManager.AndroidTextInput.Commands.blurTextInput,
null);}}}};






module.exports=TextInputState;
});
__d('ReactPropTypes',function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
var getIteratorFn=require('getIteratorFn');
















































var ANONYMOUS='<<anonymous>>';

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:createElementTypeChecker(),
instanceOf:createInstanceTypeChecker,
node:createNodeChecker(),
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(
isRequired,
props,
propName,
componentName,
location,
propFullName)
{
componentName=componentName||ANONYMOUS;
propFullName=propFullName||propName;
if(props[propName]==null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required '+locationName+' `'+propFullName+'` was not specified in '+('`'+
componentName+'`.'));}


return null;}else 
{
return validate(props,propName,componentName,location,propFullName);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired=checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType!==expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
preciseType+'` supplied to `'+componentName+'`, expected ')+('`'+
expectedType+'`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
propType+'` supplied to `'+componentName+'`, expected an array.'));}


for(var i=0;i<propValue.length;i++){
var error=typeChecker(
propValue,
i,
componentName,
location,
propFullName+'['+i+']');

if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` supplied to '+('`'+
componentName+'`, expected a single ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location,propFullName){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name||ANONYMOUS;
var actualClassName=getClassName(props[propName]);
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
actualClassName+'` supplied to `'+componentName+'`, expected ')+('instance of `'+
expectedClassName+'`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
if(!Array.isArray(expectedValues)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOf, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
for(var i=0;i<expectedValues.length;i++){
if(propValue===expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of value `'+propValue+'` '+('supplied to `'+
componentName+'`, expected one of '+valuesString+'.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType!=='object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
propType+'` supplied to `'+componentName+'`, expected an object.'));}


for(var key in propValue){
if(propValue.hasOwnProperty(key)){
var error=typeChecker(
propValue,
key,
componentName,
location,
propFullName+'.'+key);

if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
if(!Array.isArray(arrayOfTypeCheckers)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
for(var i=0;i<arrayOfTypeCheckers.length;i++){
var checker=arrayOfTypeCheckers[i];
if(
checker(props,propName,componentName,location,propFullName)==null)
{
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` supplied to '+('`'+
componentName+'`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` supplied to '+('`'+
componentName+'`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType!=='object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type `'+propType+'` '+('supplied to `'+
componentName+'`, expected `object`.'));}


for(var key in shapeTypes){
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(
propValue,
key,
componentName,
location,
propFullName+'.'+key);

if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue===null||ReactElement.isValidElement(propValue)){
return true;}


var iteratorFn=getIteratorFn(propValue);
if(iteratorFn){
var iterator=iteratorFn.call(propValue);
var step;
if(iteratorFn!==propValue.entries){
while(!(step=iterator.next()).done){
if(!isNode(step.value)){
return false;}}}else 


{

while(!(step=iterator.next()).done){
var entry=step.value;
if(entry){
if(!isNode(entry[1])){
return false;}}}}}else 




{
return false;}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType==='object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}



function getClassName(propValue){
if(!propValue.constructor||!propValue.constructor.name){
return '<<anonymous>>';}

return propValue.constructor.name;}


module.exports=ReactPropTypes;
});
__d('getIteratorFn',function(global, require, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol==='function'&&Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable&&(
ITERATOR_SYMBOL&&maybeIterable[ITERATOR_SYMBOL]||
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn==='function'){
return iteratorFn;}}



module.exports=getIteratorFn;
});
__d('ReactNativeStyleAttributes',function(global, require, module, exports) {  'use strict';













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var processColor=require('processColor');
var processTransform=require('processTransform');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=babelHelpers.extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transform={process:processTransform};
ReactNativeStyleAttributes.transformMatrix={diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset={diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix='decomposedMatrix';

var colorAttributes={process:processColor};
ReactNativeStyleAttributes.backgroundColor=colorAttributes;
ReactNativeStyleAttributes.borderBottomColor=colorAttributes;
ReactNativeStyleAttributes.borderColor=colorAttributes;
ReactNativeStyleAttributes.borderLeftColor=colorAttributes;
ReactNativeStyleAttributes.borderRightColor=colorAttributes;
ReactNativeStyleAttributes.borderTopColor=colorAttributes;
ReactNativeStyleAttributes.color=colorAttributes;
ReactNativeStyleAttributes.shadowColor=colorAttributes;
ReactNativeStyleAttributes.textDecorationColor=colorAttributes;
ReactNativeStyleAttributes.tintColor=colorAttributes;

module.exports=ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',function(global, require, module, exports) {  'use strict';












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=babelHelpers.extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports=ImageStylePropTypes;
});
__d('ImageResizeMode',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports=ImageResizeMode;
});
__d('LayoutPropTypes',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');













var LayoutPropTypes={
width:ReactPropTypes.number,
maxWidth:ReactPropTypes.number,
minWidth:ReactPropTypes.number,
height:ReactPropTypes.number,
maxHeight:ReactPropTypes.number,
minHeight:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports=LayoutPropTypes;
});
__d('TransformPropTypes',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var ArrayOfNumberPropType=ReactPropTypes.arrayOf(ReactPropTypes.number);

var TransformMatrixPropType=function(
props,
propName,
componentName)
{
if(props.transform&&props.transformMatrix){
return new Error(
'transformMatrix and transform styles cannot be used on the same '+
'component');}


return ArrayOfNumberPropType(props,propName,componentName);};


var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({perspective:ReactPropTypes.number}),
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({rotateX:ReactPropTypes.string}),
ReactPropTypes.shape({rotateY:ReactPropTypes.string}),
ReactPropTypes.shape({rotateZ:ReactPropTypes.string}),
ReactPropTypes.shape({scale:ReactPropTypes.number}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number}),
ReactPropTypes.shape({skewX:ReactPropTypes.string}),
ReactPropTypes.shape({skewY:ReactPropTypes.string})])),


transformMatrix:TransformMatrixPropType,


scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
rotation:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports=TransformPropTypes;
});
__d('TextStylePropTypes',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=babelHelpers.extends(Object.create(ViewStylePropTypes),{
color:ReactPropTypes.string,
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontStyle:ReactPropTypes.oneOf(['normal','italic']),





fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),




letterSpacing:ReactPropTypes.number,
lineHeight:ReactPropTypes.number,



textAlign:ReactPropTypes.oneOf(
['auto','left','right','center','justify']),




textDecorationLine:ReactPropTypes.oneOf(
['none','underline','line-through','underline line-through']),




textDecorationStyle:ReactPropTypes.oneOf(
['solid','double','dotted','dashed']),




textDecorationColor:ReactPropTypes.string,



writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl'])});




var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii<unsupportedProps.length;ii++){
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports=TextStylePropTypes;
});
__d('ViewStylePropTypes',function(global, require, module, exports) {  'use strict';












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=babelHelpers.extends({},
LayoutPropTypes,
TransformPropTypes,{
backfaceVisibility:ReactPropTypes.oneOf(['visible','hidden']),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
borderStyle:ReactPropTypes.oneOf(['solid','dotted','dashed']),
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number,







elevation:ReactPropTypes.number});


module.exports=ViewStylePropTypes;
});
__d('matricesDiffer',function(global, require, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one===two){
return false;}

return !one||!two||
one[12]!==two[12]||
one[13]!==two[13]||
one[14]!==two[14]||
one[5]!==two[5]||
one[10]!==two[10]||
one[1]!==two[1]||
one[2]!==two[2]||
one[3]!==two[3]||
one[4]!==two[4]||
one[6]!==two[6]||
one[7]!==two[7]||
one[8]!==two[8]||
one[9]!==two[9]||
one[11]!==two[11]||
one[15]!==two[15];};


module.exports=matricesDiffer;
});
__d('processColor',function(global, require, module, exports) {  'use strict';











var tinycolor=require('tinycolor');
var Platform=require('Platform');


function processColor(color){
if(!color||typeof color==='number'){
return color;}else 
if(color instanceof Array){
return color.map(processColor);}else 
{
var color=tinycolor(color);
if(color.isValid()){
var rgb=color.toRgb();


var colorInt=Math.round(rgb.a*255)*(1<<24)+rgb.r*(1<<16)+rgb.g*(1<<8)+rgb.b;
if(Platform.OS==='android'){




colorInt=colorInt|0x0;}

return colorInt;}

return 0;}}



module.exports=processColor;
});
__d('tinycolor',function(global, require, module, exports) {  'use strict';









var trimLeft=/^[\s,#]+/,
trimRight=/\s+$/,
tinyCounter=0,
mathRound=Math.round,
mathMin=Math.min,
mathMax=Math.max;

function tinycolor(color,opts){

if(!(this instanceof tinycolor)){
return new tinycolor(color,opts);}


color=color?color:'';
opts=opts||{};

var rgb=inputToRGB(color);
this._r=rgb.r,
this._g=rgb.g,
this._b=rgb.b,
this._a=rgb.a,

this._ok=rgb.ok;}


tinycolor.prototype={
toRgb:function(){
return {r:mathRound(this._r),g:mathRound(this._g),b:mathRound(this._b),a:this._a};},

isValid:function(){
return this._ok;}};



















function inputToRGB(color){
var rgb={r:0,g:0,b:0};
var a=1;
var ok=false;
var format=false;

if(typeof color=="string"){
color=stringInputToObject(color);}


if(typeof color=="object"){
if(color.hasOwnProperty("r")&&color.hasOwnProperty("g")&&color.hasOwnProperty("b")){
rgb=rgbToRgb(color.r,color.g,color.b);
ok=true;}else 

if(color.hasOwnProperty("h")&&color.hasOwnProperty("s")&&color.hasOwnProperty("v")){
color.s=convertToPercentage(color.s);
color.v=convertToPercentage(color.v);
rgb=hsvToRgb(color.h,color.s,color.v);
ok=true;}else 

if(color.hasOwnProperty("h")&&color.hasOwnProperty("s")&&color.hasOwnProperty("l")){
color.s=convertToPercentage(color.s);
color.l=convertToPercentage(color.l);
rgb=hslToRgb(color.h,color.s,color.l);
ok=true;}


if(color.hasOwnProperty("a")){
a=color.a;}}



a=boundAlpha(a);

return {
ok:ok,
r:mathMin(255,mathMax(rgb.r,0)),
g:mathMin(255,mathMax(rgb.g,0)),
b:mathMin(255,mathMax(rgb.b,0)),
a:a};}















function rgbToRgb(r,g,b){
return {
r:bound01(r,255)*255,
g:bound01(g,255)*255,
b:bound01(b,255)*255};}







function hslToRgb(h,s,l){
var r,g,b;

h=bound01(h,360);
s=bound01(s,100);
l=bound01(l,100);

function hue2rgb(p,q,t){
if(t<0)t+=1;
if(t>1)t-=1;
if(t<1/6)return p+(q-p)*6*t;
if(t<1/2)return q;
if(t<2/3)return p+(q-p)*(2/3-t)*6;
return p;}


if(s===0){
r=g=b=l;}else 

{
var q=l<0.5?l*(1+s):l+s-l*s;
var p=2*l-q;
r=hue2rgb(p,q,h+1/3);
g=hue2rgb(p,q,h);
b=hue2rgb(p,q,h-1/3);}


return {r:r*255,g:g*255,b:b*255};}






function hsvToRgb(h,s,v){
h=bound01(h,360)*6;
s=bound01(s,100);
v=bound01(v,100);

var i=math.floor(h),
f=h-i,
p=v*(1-s),
q=v*(1-f*s),
t=v*(1-(1-f)*s),
mod=i%6,
r=[v,q,p,p,t,v][mod],
g=[t,v,v,q,p,p][mod],
b=[p,p,t,v,v,q][mod];

return {r:r*255,g:g*255,b:b*255};}





var names=tinycolor.names={
aliceblue:"f0f8ff",
antiquewhite:"faebd7",
aqua:"0ff",
aquamarine:"7fffd4",
azure:"f0ffff",
beige:"f5f5dc",
bisque:"ffe4c4",
black:"000",
blanchedalmond:"ffebcd",
blue:"00f",
blueviolet:"8a2be2",
brown:"a52a2a",
burlywood:"deb887",
burntsienna:"ea7e5d",
cadetblue:"5f9ea0",
chartreuse:"7fff00",
chocolate:"d2691e",
coral:"ff7f50",
cornflowerblue:"6495ed",
cornsilk:"fff8dc",
crimson:"dc143c",
cyan:"0ff",
darkblue:"00008b",
darkcyan:"008b8b",
darkgoldenrod:"b8860b",
darkgray:"a9a9a9",
darkgreen:"006400",
darkgrey:"a9a9a9",
darkkhaki:"bdb76b",
darkmagenta:"8b008b",
darkolivegreen:"556b2f",
darkorange:"ff8c00",
darkorchid:"9932cc",
darkred:"8b0000",
darksalmon:"e9967a",
darkseagreen:"8fbc8f",
darkslateblue:"483d8b",
darkslategray:"2f4f4f",
darkslategrey:"2f4f4f",
darkturquoise:"00ced1",
darkviolet:"9400d3",
deeppink:"ff1493",
deepskyblue:"00bfff",
dimgray:"696969",
dimgrey:"696969",
dodgerblue:"1e90ff",
firebrick:"b22222",
floralwhite:"fffaf0",
forestgreen:"228b22",
fuchsia:"f0f",
gainsboro:"dcdcdc",
ghostwhite:"f8f8ff",
gold:"ffd700",
goldenrod:"daa520",
gray:"808080",
green:"008000",
greenyellow:"adff2f",
grey:"808080",
honeydew:"f0fff0",
hotpink:"ff69b4",
indianred:"cd5c5c",
indigo:"4b0082",
ivory:"fffff0",
khaki:"f0e68c",
lavender:"e6e6fa",
lavenderblush:"fff0f5",
lawngreen:"7cfc00",
lemonchiffon:"fffacd",
lightblue:"add8e6",
lightcoral:"f08080",
lightcyan:"e0ffff",
lightgoldenrodyellow:"fafad2",
lightgray:"d3d3d3",
lightgreen:"90ee90",
lightgrey:"d3d3d3",
lightpink:"ffb6c1",
lightsalmon:"ffa07a",
lightseagreen:"20b2aa",
lightskyblue:"87cefa",
lightslategray:"789",
lightslategrey:"789",
lightsteelblue:"b0c4de",
lightyellow:"ffffe0",
lime:"0f0",
limegreen:"32cd32",
linen:"faf0e6",
magenta:"f0f",
maroon:"800000",
mediumaquamarine:"66cdaa",
mediumblue:"0000cd",
mediumorchid:"ba55d3",
mediumpurple:"9370db",
mediumseagreen:"3cb371",
mediumslateblue:"7b68ee",
mediumspringgreen:"00fa9a",
mediumturquoise:"48d1cc",
mediumvioletred:"c71585",
midnightblue:"191970",
mintcream:"f5fffa",
mistyrose:"ffe4e1",
moccasin:"ffe4b5",
navajowhite:"ffdead",
navy:"000080",
oldlace:"fdf5e6",
olive:"808000",
olivedrab:"6b8e23",
orange:"ffa500",
orangered:"ff4500",
orchid:"da70d6",
palegoldenrod:"eee8aa",
palegreen:"98fb98",
paleturquoise:"afeeee",
palevioletred:"db7093",
papayawhip:"ffefd5",
peachpuff:"ffdab9",
peru:"cd853f",
pink:"ffc0cb",
plum:"dda0dd",
powderblue:"b0e0e6",
purple:"800080",
rebeccapurple:"663399",
red:"f00",
rosybrown:"bc8f8f",
royalblue:"4169e1",
saddlebrown:"8b4513",
salmon:"fa8072",
sandybrown:"f4a460",
seagreen:"2e8b57",
seashell:"fff5ee",
sienna:"a0522d",
silver:"c0c0c0",
skyblue:"87ceeb",
slateblue:"6a5acd",
slategray:"708090",
slategrey:"708090",
snow:"fffafa",
springgreen:"00ff7f",
steelblue:"4682b4",
tan:"d2b48c",
teal:"008080",
thistle:"d8bfd8",
tomato:"ff6347",
turquoise:"40e0d0",
violet:"ee82ee",
wheat:"f5deb3",
white:"fff",
whitesmoke:"f5f5f5",
yellow:"ff0",
yellowgreen:"9acd32"};



function boundAlpha(a){
a=parseFloat(a);

if(isNaN(a)||a<0||a>1){
a=1;}


return a;}



function bound01(n,max){
if(isOnePointZero(n)){n="100%";}

var processPercent=isPercentage(n);
n=mathMin(max,mathMax(0,parseFloat(n)));


if(processPercent){
n=parseInt(n*max,10)/100;}



if(Math.abs(n-max)<0.000001){
return 1;}



return n%max/parseFloat(max);}



function parseIntFromHex(val){
return parseInt(val,16);}




function isOnePointZero(n){
return typeof n=="string"&&n.indexOf('.')!=-1&&parseFloat(n)===1;}



function isPercentage(n){
return typeof n==="string"&&n.indexOf('%')!=-1;}



function convertToPercentage(n){
if(n<=1){
n=n*100+"%";}


return n;}



function convertHexToDecimal(h){
return parseIntFromHex(h)/255;}


var matchers=function(){

var CSS_INTEGER="[-\\+]?\\d+%?";


var CSS_NUMBER="[-\\+]?\\d*\\.\\d+%?";


var CSS_UNIT="(?:"+CSS_NUMBER+")|(?:"+CSS_INTEGER+")";




var PERMISSIVE_MATCH3="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?";
var PERMISSIVE_MATCH4="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?";

return {
rgb:new RegExp("rgb"+PERMISSIVE_MATCH3),
rgba:new RegExp("rgba"+PERMISSIVE_MATCH4),
hsl:new RegExp("hsl"+PERMISSIVE_MATCH3),
hsla:new RegExp("hsla"+PERMISSIVE_MATCH4),
hsv:new RegExp("hsv"+PERMISSIVE_MATCH3),
hsva:new RegExp("hsva"+PERMISSIVE_MATCH4),
hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
hex4:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};}();






function stringInputToObject(color){
color=color.replace(trimLeft,'').replace(trimRight,'').toLowerCase();
var named=false;
if(names[color]){
color=names[color];
named=true;}else 

if(color=='transparent'){
return {r:0,g:0,b:0,a:0,format:"name"};}






var match;
if(match=matchers.rgb.exec(color)){
return {r:match[1],g:match[2],b:match[3]};}

if(match=matchers.rgba.exec(color)){
return {r:match[1],g:match[2],b:match[3],a:match[4]};}

if(match=matchers.hsl.exec(color)){
return {h:match[1],s:match[2],l:match[3]};}

if(match=matchers.hsla.exec(color)){
return {h:match[1],s:match[2],l:match[3],a:match[4]};}

if(match=matchers.hsv.exec(color)){
return {h:match[1],s:match[2],v:match[3]};}

if(match=matchers.hsva.exec(color)){
return {h:match[1],s:match[2],v:match[3],a:match[4]};}

if(match=matchers.hex8.exec(color)){
return {
r:parseIntFromHex(match[1]),
g:parseIntFromHex(match[2]),
b:parseIntFromHex(match[3]),
a:convertHexToDecimal(match[4]),
format:named?"name":"hex"};}


if(match=matchers.hex6.exec(color)){
return {
r:parseIntFromHex(match[1]),
g:parseIntFromHex(match[2]),
b:parseIntFromHex(match[3]),
format:named?"name":"hex"};}


if(match=matchers.hex4.exec(color)){
return {
r:parseIntFromHex(match[1]+''+match[1]),
g:parseIntFromHex(match[2]+''+match[2]),
b:parseIntFromHex(match[3]+''+match[3]),
a:convertHexToDecimal(match[4]+''+match[4]),
format:named?"name":"hex"};}


if(match=matchers.hex3.exec(color)){
return {
r:parseIntFromHex(match[1]+''+match[1]),
g:parseIntFromHex(match[2]+''+match[2]),
b:parseIntFromHex(match[3]+''+match[3]),
format:named?"name":"hex"};}



return false;}


module.exports=tinycolor;
});
__d('processTransform',function(global, require, module, exports) {  'use strict';












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var invariant=require('invariant');
var stringifySafe=require('stringifySafe');









function processTransform(transform){
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'perspective':
_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);
break;
case 'rotateX':
_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);
break;
case 'rotateY':
_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);
break;
case 'rotate':
case 'rotateZ':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2]||0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
case 'skewX':
_multiplyTransform(result,MatrixMath.reuseSkewXCommand,[_convertToRadians(value)]);
break;
case 'skewY':
_multiplyTransform(result,MatrixMath.reuseSkewYCommand,[_convertToRadians(value)]);
break;
default:
throw new Error('Invalid transform name: '+key);}});







if(Platform.OS==='android'){
return MatrixMath.decomposeMatrix(result);}

return result;}





function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad')>-1?floatValue:floatValue*Math.PI/180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an Animated.Value to a normal component. '+
'You need to wrap that component in an Animated. For example, '+
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key)!==-1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length===9||value.length===16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). '+
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotateX':
case 'rotateY':
case 'rotateZ':
case 'rotate':
case 'skewX':
case 'skewY':
invariant(
typeof value==='string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg')>-1||value.indexOf('rad')>-1,
'Rotate transform must be expressed in degrees (deg) or radians '+
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value==='number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports=processTransform;
});
__d('MatrixMath',function(global, require, module, exports) {  'use strict';








var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createOrthographic:function(left,right,bottom,top,near,far){
var a=2/(right-left);
var b=2/(top-bottom);
var c=-2/(far-near);

var tx=-(right+left)/(right-left);
var ty=-(top+bottom)/(top-bottom);
var tz=-(far+near)/(far-near);

return [
a,0,0,0,
0,b,0,0,
0,0,c,0,
tx,ty,tz,1];},



createFrustum:function(left,right,bottom,top,near,far){
var r_width=1/(right-left);
var r_height=1/(top-bottom);
var r_depth=1/(near-far);
var x=2*(near*r_width);
var y=2*(near*r_height);
var A=(right+left)*r_width;
var B=(top+bottom)*r_height;
var C=(far+near)*r_depth;
var D=2*(far*near*r_depth);
return [
x,0,0,0,
0,y,0,0,
A,B,C,-1,
0,0,D,0];},



createPerspective:function(fovInRadians,aspect,near,far){
var h=1/Math.tan(fovInRadians);
var r_depth=1/(near-far);
var C=(far+near)*r_depth;
var D=2*(far*near*r_depth);
return [
h/aspect,0,0,0,
0,h,0,0,
0,0,C,-1,
0,0,D,0];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12]=x;
matrixCommand[13]=y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12]=x;
matrixCommand[13]=y;
matrixCommand[14]=z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0]=factor;
matrixCommand[5]=factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0]=x;
matrixCommand[5]=y;
matrixCommand[10]=z;},


reusePerspectiveCommand:function(matrixCommand,p){
matrixCommand[11]=-1/p;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0]=factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5]=factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10]=factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5]=Math.cos(radians);
matrixCommand[6]=Math.sin(radians);
matrixCommand[9]=-Math.sin(radians);
matrixCommand[10]=Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0]=Math.cos(amount);
matrixCommand[2]=-Math.sin(amount);
matrixCommand[8]=Math.sin(amount);
matrixCommand[10]=Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0]=Math.cos(radians);
matrixCommand[1]=Math.sin(radians);
matrixCommand[4]=-Math.sin(radians);
matrixCommand[5]=Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


reuseSkewXCommand:function(matrixCommand,radians){
matrixCommand[4]=Math.sin(radians);
matrixCommand[5]=Math.cos(radians);},


reuseSkewYCommand:function(matrixCommand,radians){
matrixCommand[0]=Math.cos(radians);
matrixCommand[1]=Math.sin(radians);},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0]=b0*a00+b1*a10+b2*a20+b3*a30;
out[1]=b0*a01+b1*a11+b2*a21+b3*a31;
out[2]=b0*a02+b1*a12+b2*a22+b3*a32;
out[3]=b0*a03+b1*a13+b2*a23+b3*a33;

b0=b[4];b1=b[5];b2=b[6];b3=b[7];
out[4]=b0*a00+b1*a10+b2*a20+b3*a30;
out[5]=b0*a01+b1*a11+b2*a21+b3*a31;
out[6]=b0*a02+b1*a12+b2*a22+b3*a32;
out[7]=b0*a03+b1*a13+b2*a23+b3*a33;

b0=b[8];b1=b[9];b2=b[10];b3=b[11];
out[8]=b0*a00+b1*a10+b2*a20+b3*a30;
out[9]=b0*a01+b1*a11+b2*a21+b3*a31;
out[10]=b0*a02+b1*a12+b2*a22+b3*a32;
out[11]=b0*a03+b1*a13+b2*a23+b3*a33;

b0=b[12];b1=b[13];b2=b[14];b3=b[15];
out[12]=b0*a00+b1*a10+b2*a20+b3*a30;
out[13]=b0*a01+b1*a11+b2*a21+b3*a31;
out[14]=b0*a02+b1*a12+b2*a22+b3*a32;
out[15]=b0*a03+b1*a13+b2*a23+b3*a33;},


determinant:function(matrix){var _matrix=babelHelpers.slicedToArray(





matrix,16);var m00=_matrix[0];var m01=_matrix[1];var m02=_matrix[2];var m03=_matrix[3];var m10=_matrix[4];var m11=_matrix[5];var m12=_matrix[6];var m13=_matrix[7];var m20=_matrix[8];var m21=_matrix[9];var m22=_matrix[10];var m23=_matrix[11];var m30=_matrix[12];var m31=_matrix[13];var m32=_matrix[14];var m33=_matrix[15];
return (
m03*m12*m21*m30-m02*m13*m21*m30-
m03*m11*m22*m30+m01*m13*m22*m30+
m02*m11*m23*m30-m01*m12*m23*m30-
m03*m12*m20*m31+m02*m13*m20*m31+
m03*m10*m22*m31-m00*m13*m22*m31-
m02*m10*m23*m31+m00*m12*m23*m31+
m03*m11*m20*m32-m01*m13*m20*m32-
m03*m10*m21*m32+m00*m13*m21*m32+
m01*m10*m23*m32-m00*m11*m23*m32-
m02*m11*m20*m33+m01*m12*m20*m33+
m02*m10*m21*m33-m00*m12*m21*m33-
m01*m10*m22*m33+m00*m11*m22*m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var _matrix2=babelHelpers.slicedToArray(






matrix,16);var m00=_matrix2[0];var m01=_matrix2[1];var m02=_matrix2[2];var m03=_matrix2[3];var m10=_matrix2[4];var m11=_matrix2[5];var m12=_matrix2[6];var m13=_matrix2[7];var m20=_matrix2[8];var m21=_matrix2[9];var m22=_matrix2[10];var m23=_matrix2[11];var m30=_matrix2[12];var m31=_matrix2[13];var m32=_matrix2[14];var m33=_matrix2[15];
return [
(m12*m23*m31-m13*m22*m31+m13*m21*m32-m11*m23*m32-m12*m21*m33+m11*m22*m33)/det,
(m03*m22*m31-m02*m23*m31-m03*m21*m32+m01*m23*m32+m02*m21*m33-m01*m22*m33)/det,
(m02*m13*m31-m03*m12*m31+m03*m11*m32-m01*m13*m32-m02*m11*m33+m01*m12*m33)/det,
(m03*m12*m21-m02*m13*m21-m03*m11*m22+m01*m13*m22+m02*m11*m23-m01*m12*m23)/det,
(m13*m22*m30-m12*m23*m30-m13*m20*m32+m10*m23*m32+m12*m20*m33-m10*m22*m33)/det,
(m02*m23*m30-m03*m22*m30+m03*m20*m32-m00*m23*m32-m02*m20*m33+m00*m22*m33)/det,
(m03*m12*m30-m02*m13*m30-m03*m10*m32+m00*m13*m32+m02*m10*m33-m00*m12*m33)/det,
(m02*m13*m20-m03*m12*m20+m03*m10*m22-m00*m13*m22-m02*m10*m23+m00*m12*m23)/det,
(m11*m23*m30-m13*m21*m30+m13*m20*m31-m10*m23*m31-m11*m20*m33+m10*m21*m33)/det,
(m03*m21*m30-m01*m23*m30-m03*m20*m31+m00*m23*m31+m01*m20*m33-m00*m21*m33)/det,
(m01*m13*m30-m03*m11*m30+m03*m10*m31-m00*m13*m31-m01*m10*m33+m00*m11*m33)/det,
(m03*m11*m20-m01*m13*m20-m03*m10*m21+m00*m13*m21+m01*m10*m23-m00*m11*m23)/det,
(m12*m21*m30-m11*m22*m30-m12*m20*m31+m10*m22*m31+m11*m20*m32-m10*m21*m32)/det,
(m01*m22*m30-m02*m21*m30+m02*m20*m31-m00*m22*m31-m01*m20*m32+m00*m21*m32)/det,
(m02*m11*m30-m01*m12*m30-m02*m10*m31+m00*m12*m31+m01*m10*m32-m00*m11*m32)/det,
(m01*m12*m20-m02*m11*m20+m02*m10*m21-m00*m12*m21-m01*m10*m22+m00*m11*m22)/det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var _v=babelHelpers.slicedToArray(
v,4);var vx=_v[0];var vy=_v[1];var vz=_v[2];var vw=_v[3];
return [
vx*m[0]+vy*m[4]+vz*m[8]+vw*m[12],
vx*m[1]+vy*m[5]+vz*m[9]+vw*m[13],
vx*m[2]+vy*m[6]+vz*m[10]+vw*m[14],
vx*m[3]+vy*m[7]+vz*m[11]+vw*m[15]];},






v3Length:function(a){
return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1/(v3Length||MatrixMath.v3Length(vector));
return [
vector[0]*im,
vector[1]*im,
vector[2]*im];},







v3Dot:function(a,b){
return a[0]*b[0]+
a[1]*b[1]+
a[2]*b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale*a[0]+bScale*b[0],
aScale*a[1]+bScale*b[1],
aScale*a[2]+bScale*b[2]];},







v3Cross:function(a,b){
return [
a[1]*b[2]-a[2]*b[1],
a[2]*b[0]-a[0]*b[2],
a[0]*b[1]-a[1]*b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var _q=babelHelpers.slicedToArray(
q,4);var qx=_q[0];var qy=_q[1];var qz=_q[2];var qw=_q[3];
var qw2=qw*qw;
var qx2=qx*qx;
var qy2=qy*qy;
var qz2=qz*qz;
var test=qx*qy+qz*qw;
var unit=qw2+qx2+qy2+qz2;
var conv=180/Math.PI;

if(test>0.49999*unit){
return [0,2*Math.atan2(qx,qw)*conv,90];}

if(test<-0.49999*unit){
return [0,-2*Math.atan2(qx,qw)*conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2*qx*qw-2*qy*qz,1-2*qx2-2*qz2)*conv),

MatrixMath.roundTo3Places(
Math.atan2(2*qy*qw-2*qx*qz,1-2*qy2-2*qz2)*conv),

MatrixMath.roundTo3Places(
Math.asin(2*qx*qy+2*qz*qw)*conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0]+'e'+(arr[1]?+arr[1]-3:3))*0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length===16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i<4;i++){
matrix.push([]);
for(var j=0;j<4;j++){
var value=transformMatrix[i*4+j]/transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j===3?0:value);}}


perspectiveMatrix[15]=1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3]!==0||matrix[1][3]!==0||matrix[2][3]!==0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0]=perspective[1]=perspective[2]=0;
perspective[3]=1;}



for(var i=0;i<3;i++){
translation[i]=matrix[3][i];}




var row=[];
for(i=0;i<3;i++){
row[i]=[
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0]=MatrixMath.v3Length(row[0]);
row[0]=MatrixMath.v3Normalize(row[0],scale[0]);


skew[0]=MatrixMath.v3Dot(row[0],row[1]);
row[1]=MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0]=MatrixMath.v3Dot(row[0],row[1]);
row[1]=MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1]=MatrixMath.v3Length(row[1]);
row[1]=MatrixMath.v3Normalize(row[1],scale[1]);
skew[0]/=scale[1];


skew[1]=MatrixMath.v3Dot(row[0],row[2]);
row[2]=MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2]=MatrixMath.v3Dot(row[1],row[2]);
row[2]=MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2]=MatrixMath.v3Length(row[2]);
row[2]=MatrixMath.v3Normalize(row[2],scale[2]);
skew[1]/=scale[2];
skew[2]/=scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3)<0){
for(i=0;i<3;i++){
scale[i]*=-1;
row[i][0]*=-1;
row[i][1]*=-1;
row[i][2]*=-1;}}




quaternion[0]=
0.5*Math.sqrt(Math.max(1+row[0][0]-row[1][1]-row[2][2],0));
quaternion[1]=
0.5*Math.sqrt(Math.max(1-row[0][0]+row[1][1]-row[2][2],0));
quaternion[2]=
0.5*Math.sqrt(Math.max(1-row[0][0]-row[1][1]+row[2][2],0));
quaternion[3]=
0.5*Math.sqrt(Math.max(1+row[0][0]+row[1][1]+row[2][2],0));

if(row[2][1]>row[1][2]){
quaternion[0]=-quaternion[0];}

if(row[0][2]>row[2][0]){
quaternion[1]=-quaternion[1];}

if(row[1][0]>row[0][1]){
quaternion[2]=-quaternion[2];}



var rotationDegrees;
if(
quaternion[0]<0.001&&quaternion[0]>=0&&
quaternion[1]<0.001&&quaternion[1]>=0)
{

rotationDegrees=[0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0])*180/Math.PI)];}else 

{
rotationDegrees=MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
rotateX:rotationDegrees[0],
rotateY:rotationDegrees[1],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports=MatrixMath;
});
__d('sizesDiffer',function(global, require, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one=one||dummySize;
two=two||dummySize;
return one!==two&&(
one.width!==two.width||
one.height!==two.height);};



module.exports=sizesDiffer;
});
__d('ReactNativeViewAttributes',function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView={
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityComponentType:true,
accessibilityLiveRegion:true,
accessibilityTraits:true,
importantForAccessibility:true,
testID:true,
renderToHardwareTextureAndroid:true,
shouldRasterizeIOS:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true,
collapsable:true,
needsOffscreenAlphaCompositing:true,
style:ReactNativeStyleAttributes};


ReactNativeViewAttributes.RCTView=babelHelpers.extends({},
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports=ReactNativeViewAttributes;
});
__d('StyleSheetPropType',function(global, require, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps={};
newProps[propName]=flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports=StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `'+propName+'` was not specified in '+('`'+
componentName+'`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location&&ReactPropTypeLocationNames[location]||'(unknown)';
if(propType!=='object'){
invariant(
false,
'Invalid '+locationName+' `'+propName+'` of type `'+propType+'` '+('supplied to `'+
componentName+'`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys){
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.'+propName+' key `'+key+'` supplied to `'+componentName+'`.'+'\nBad object: '+
JSON.stringify(props[propName],null,'  ')+'\nValid keys: '+
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message+'\nBad object: '+
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired=checkType.bind(null,true);
return chainedCheckType;}


module.exports=createStrictShapeTypeChecker;
});
__d('requireNativeComponent',function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var UIManager=require('UIManager');
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var processColor=require('processColor');
var resolveAssetSource=require('resolveAssetSource');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


















function requireNativeComponent(
viewName,
componentInterface,
extraConfig)
{
var viewConfig=UIManager[viewName];
if(!viewConfig||!viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=babelHelpers.extends({},
UIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName=viewName;
viewConfig.validAttributes={};
viewConfig.propTypes=componentInterface&&componentInterface.propTypes;
for(var key in nativeProps){
var useAttribute=false;
var attribute={};

var differ=TypeToDifferMap[nativeProps[key]];
if(differ){
attribute.diff=differ;
useAttribute=true;}


var processor=TypeToProcessorMap[nativeProps[key]];
if(processor){
attribute.process=processor;
useAttribute=true;}


viewConfig.validAttributes[key]=useAttribute?attribute:true;}







viewConfig.validAttributes.style=ReactNativeStyleAttributes;

if(__DEV__){
componentInterface&&verifyPropTypes(
componentInterface,
viewConfig,
extraConfig&&extraConfig.nativeOnly);}


return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




var TypeToProcessorMap={

CGColor:processColor,
CGColorArray:processColor,
UIColor:processColor,
UIColorArray:processColor,
CGImage:resolveAssetSource,
UIImage:resolveAssetSource,
RCTImageSource:resolveAssetSource,

Color:processColor};


module.exports=requireNativeComponent;
});
__d('verifyPropTypes',function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');







function verifyPropTypes(
componentInterface,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=componentInterface.name||
componentInterface.displayName||
'unknown';
if(!componentInterface.propTypes){
throw new Error(
'`'+componentName+'` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps){
if(!componentInterface.propTypes[prop]&&
!ReactNativeStyleAttributes[prop]&&(
!nativePropsToIgnore||!nativePropsToIgnore[prop])){
var message;
if(componentInterface.propTypes.hasOwnProperty(prop)){
message='`'+componentName+'` has incorrectly defined propType for native prop `'+
viewConfig.uiViewClassName+'.'+prop+'` of native type `'+nativeProps[prop];}else 
{
message='`'+componentName+'` has no propType for native prop `'+
viewConfig.uiViewClassName+'.'+prop+'` of native type `'+
nativeProps[prop]+'`';}
;
throw new Error(message);}}}




module.exports=verifyPropTypes;
});
__d('UnimplementedView',function(global, require, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');

var UnimplementedView=React.createClass({displayName:'UnimplementedView',
setNativeProps:function(){},




render:function(){

var View=require('View');
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports=UnimplementedView;
});
__d('StyleSheet',function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');
var flattenStyle=require('flattenStyle');var 













































StyleSheet=function(){function StyleSheet(){babelHelpers.classCallCheck(this,StyleSheet);}babelHelpers.createClass(StyleSheet,null,[{key:'create',value:function create(


obj){
var result={};
for(var key in obj){
StyleSheetValidation.validateStyle(key,obj);
result[key]=StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;}();




StyleSheet.flatten=flattenStyle;

module.exports=StyleSheet;
});
__d('StyleSheetValidation',function(global, require, module, exports) {  'use strict';












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=function(){function StyleSheetValidation(){babelHelpers.classCallCheck(this,StyleSheetValidation);}babelHelpers.createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:function validateStyleProp(
prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop]===undefined){
var message1='"'+prop+'" is not a valid style property.';
var message2='\nValid style props: '+
JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:function validateStyle(



name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]){
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet '+name);}}},{key:'addValidStylePropTypes',value:function addValidStylePropTypes(



stylePropTypes){
for(var key in stylePropTypes){
allStylePropTypes[key]=stylePropTypes[key];}}}]);return StyleSheetValidation;}();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1+'\n'+(caller||'<<unknown>>')+': '+
JSON.stringify(style,null,'  ')+(message2||''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports=StyleSheetValidation;
});
__d('createReactNativeComponentClass',function(global, require, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');












var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement=element;

this._rootNodeID=null;
this._renderedChildren=null;};

Constructor.displayName=viewConfig.uiViewClassName;
Constructor.viewConfig=viewConfig;
Constructor.propTypes=viewConfig.propTypes;
Constructor.prototype=new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor=Constructor;

return Constructor;};


module.exports=createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeAttributePayload=require('ReactNativeAttributePayload');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var UIManager=require('UIManager');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteListener=ReactNativeEventEmitter.deleteListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;














var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig=viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i<size;i++){
arr[i]=i;}

cachedIndexArray._cache[size]=arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache={};





ReactNativeBaseComponent.Mixin={
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement=element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID=null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i<mountImages.length;i++){
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage&&mountImage.rootNodeID&&mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i]=mountImage.tag;}

UIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement=nextElement;

if(__DEV__){
deepFreezeAndThrowOnMutationInDev(this._currentElement.props);}


var updatePayload=ReactNativeAttributePayload.diff(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
UIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps){


if(registrationNames[key]&&initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps){
if(registrationNames[key]&&nextProps[key]!==prevProps[key]){
if(nextProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}else 
{
deleteListener(this._rootNodeID,key);}}}},










mountComponent:function(rootID,transaction,context){
this._rootNodeID=rootID;

var tag=ReactNativeTagHandles.allocateTag();

if(__DEV__){
deepFreezeAndThrowOnMutationInDev(this._currentElement.props);}


var updatePayload=ReactNativeAttributePayload.create(
this._currentElement.props,
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
UIManager.createView(
tag,
this.viewConfig.uiViewClassName,
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








babelHelpers.extends(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports=ReactNativeBaseComponent;
});
__d('ReactMultiChild',function(global, require, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');

var flattenChildren=require('flattenChildren');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueInsertMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup)-1,
content:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
content:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
content:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueSetMarkup(parentID,markup){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.SET_MARKUP,
markupIndex:null,
content:markup,
fromIndex:null,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
content:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length=0;
markupQueue.length=0;}








var ReactMultiChild={








Mixin:{

_reconcilerInstantiateChildren:function(nestedChildren,transaction,context){
if(__DEV__){
if(this._currentElement){
try{
ReactCurrentOwner.current=this._currentElement._owner;
return ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);}finally 

{
ReactCurrentOwner.current=null;}}}



return ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);},



_reconcilerUpdateChildren:function(prevChildren,nextNestedChildrenElements,transaction,context){
var nextChildren;
if(__DEV__){
if(this._currentElement){
try{
ReactCurrentOwner.current=this._currentElement._owner;
nextChildren=flattenChildren(nextNestedChildrenElements);}finally 
{
ReactCurrentOwner.current=null;}

return ReactChildReconciler.updateChildren(
prevChildren,nextChildren,transaction,context);}}



nextChildren=flattenChildren(nextNestedChildrenElements);
return ReactChildReconciler.updateChildren(
prevChildren,nextChildren,transaction,context);},











mountChildren:function(nestedChildren,transaction,context){
var children=this._reconcilerInstantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren=children;
var mountImages=[];
var index=0;
for(var name in children){
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID+name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex=index++;
mountImages.push(mountImage);}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren){
if(prevChildren.hasOwnProperty(name)){
this._unmountChild(prevChildren[name]);}}



this.setTextContent(nextContent);
errorThrown=false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},











updateMarkup:function(nextMarkup){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);
for(var name in prevChildren){
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}


this.setMarkup(nextMarkup);
errorThrown=false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildrenElements,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildrenElements,transaction,context);
errorThrown=false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},














_updateChildren:function(nextNestedChildrenElements,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=this._reconcilerUpdateChildren(
prevChildren,nextNestedChildrenElements,transaction,context);

this._renderedChildren=nextChildren;
if(!nextChildren&&!prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren){
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren&&prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild===nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex=Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex=nextIndex;}else 
{
if(prevChild){

lastIndex=Math.max(prevChild._mountIndex,lastIndex);
this._unmountChild(prevChild);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren){
if(prevChildren.hasOwnProperty(name)&&
!(nextChildren&&nextChildren.hasOwnProperty(name))){
this._unmountChild(prevChildren[name]);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren=null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex<lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueInsertMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},








setMarkup:function(markup){
enqueueSetMarkup(this._rootNodeID,markup);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID+name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex=index;
this.createChild(child,mountImage);},










_unmountChild:function(child){
this.removeChild(child);
child._mountIndex=null;}}};






module.exports=ReactMultiChild;
});
__d('ReactChildReconciler',function(global, require, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

function instantiateChild(childInstances,child,name){

var keyUnique=childInstances[name]===undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, '+
'`%s`. Child keys must be unique; when two children share a key, only '+
'the first child will be used.',
name);}


if(child!=null&&keyUnique){
childInstances[name]=instantiateReactComponent(child,null);}}








var ReactChildReconciler={








instantiateChildren:function(nestedChildNodes,transaction,context){
if(nestedChildNodes==null){
return null;}

var childInstances={};
traverseAllChildren(nestedChildNodes,instantiateChild,childInstances);
return childInstances;},












updateChildren:function(
prevChildren,
nextChildren,
transaction,
context){





if(!nextChildren&&!prevChildren){
return null;}

var name;
for(name in nextChildren){
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren&&prevChildren[name];
var prevElement=prevChild&&prevChild._currentElement;
var nextElement=nextChildren[name];
if(prevChild!=null&&
shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name]=prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name]=nextChildInstance;}}



for(name in prevChildren){
if(prevChildren.hasOwnProperty(name)&&
!(nextChildren&&nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren){
if(renderedChildren.hasOwnProperty(name)){
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}}};






module.exports=ReactChildReconciler;
});
__d('traverseAllChildren',function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component&&component.key!=null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return (''+text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$'+escapeUserProvidedKey(key);}










function traverseAllChildrenImpl(
children,
nameSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type==='undefined'||type==='boolean'){

children=null;}


if(children===null||
type==='string'||
type==='number'||
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar===''?SEPARATOR+getComponentKey(children,0):nameSoFar);

return 1;}


var child;
var nextName;
var subtreeCount=0;
var nextNamePrefix=nameSoFar===''?SEPARATOR:nameSoFar+SUBSEPARATOR;

if(Array.isArray(children)){
for(var i=0;i<children.length;i++){
child=children[i];
nextName=nextNamePrefix+getComponentKey(child,i);
subtreeCount+=traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn!==children.entries){
var ii=0;
while(!(step=iterator.next()).done){
child=step.value;
nextName=nextNamePrefix+getComponentKey(child,ii++);
subtreeCount+=traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an '+
'experimental feature that might be removed. Convert it to a '+
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps=true;}


while(!(step=iterator.next()).done){
var entry=step.value;
if(entry){
child=entry[1];
nextName=
nextNamePrefix+
wrapUserProvidedKey(entry[0])+SUBSEPARATOR+
getComponentKey(child,0);

subtreeCount+=traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}else 




if(type==='object'){
var addendum='';
if(__DEV__){
addendum=
' If you meant to render a collection of children, use an array '+
'instead or wrap the object using createFragment(object) from the '+
'React add-ons.';
if(children._isReactElement){
addendum=
' It looks like you\'re using an element created by a different '+
'version of React. Make sure to use only one copy of React.';}

if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
addendum+=' Check the render method of `'+name+'`.';}}}



var childrenString=String(children);
invariant(
false,
'Objects are not valid as a React child (found: %s).%s',
childrenString==='[object Object]'?
'object with keys {'+Object.keys(children).join(', ')+'}':
childrenString,
addendum);}}




return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children==null){
return 0;}


return traverseAllChildrenImpl(children,'',callback,traverseContext);}


module.exports=traverseAllChildren;
});
__d('flattenChildren',function(global, require, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=result[name]===undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, '+
'`%s`. Child keys must be unique; when two children share a key, only '+
'the first child will be used.',
name);}


if(keyUnique&&child!=null){
result[name]=child;}}








function flattenChildren(children){
if(children==null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports=flattenChildren;
});
__d('deepFreezeAndThrowOnMutationInDev',function(global, require, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object!=='object'||
object===null||
Object.isFrozen(object)||
Object.isSealed(object)){
return;}


for(var key in object){
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `'+key+'` with the value `'+
JSON.stringify(value)+'` on an object that is meant to be immutable '+
'and has been frozen.');}



function identity(value){
return value;}


module.exports=deepFreezeAndThrowOnMutationInDev;
});
__d('insetsDiffer',function(global, require, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one=one||dummyInsets;
two=two||dummyInsets;
return one!==two&&(
one.top!==two.top||
one.left!==two.left||
one.right!==two.right||
one.bottom!==two.bottom);};



module.exports=insetsDiffer;
});
__d('pointsDiffer',function(global, require, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one=one||dummyPoint;
two=two||dummyPoint;
return one!==two&&(
one.x!==two.x||
one.y!==two.y);};



module.exports=pointsDiffer;
});
__d('resolveAssetSource',function(global, require, module, exports) {  'use strict';






















var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL,_offlinePath;

function getDevServerURL(){
if(_serverURL===undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL&&scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL=match[0];}else 
{

_serverURL=null;}}



return _serverURL;}


function getOfflinePath(){
if(_offlinePath===undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL&&scriptURL.match(/^file:\/\/(\/.*\/)/);
if(match){
_offlinePath=match[1];}else 
{
_offlinePath='';}}



return _offlinePath;}





function getPathInArchive(asset){
if(Platform.OS==='android'){
var assetDir=getBasePath(asset);


return (assetDir+'/'+asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getOfflinePath()+getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl+getScaledAssetPath(asset)+'?platform='+Platform.OS+
'&hash='+asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0]==='/'){
path=path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale===1?'':'@'+scale+'x';
var assetDir=getBasePath(asset);
return assetDir+'/'+asset.name+scaleSuffix+'.'+asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i<scales.length;i++){
if(scales[i]>=deviceScale){
return scales[i];}}






return scales[scales.length-1]||1;}


function resolveAssetSource(source){
if(typeof source==='object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
return {
__packager_asset:true,
width:asset.width,
height:asset.height,
uri:devServerURL?getPathOnDevserver(devServerURL,asset):getPathInArchive(asset),
scale:pickScale(asset.scales,PixelRatio.get())};}



module.exports=resolveAssetSource;
module.exports.pickScale=pickScale;
});
__d('AssetRegistry',function(global, require, module, exports) {  'use strict';




















var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId-1];}


module.exports={registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');var 
































PixelRatio=function(){function PixelRatio(){babelHelpers.classCallCheck(this,PixelRatio);}babelHelpers.createClass(PixelRatio,null,[{key:'get',value:function get()


















{
return Dimensions.get('window').scale;}},{key:'getFontScale',value:function getFontScale()













{
return Dimensions.get('window').fontScale||PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:function getPixelSizeForLayoutSize(







layoutSize){
return Math.round(layoutSize*PixelRatio.get());}},{key:'startDetecting',value:function startDetecting()



{}}]);return PixelRatio;}();


module.exports=PixelRatio;
});
__d('Dimensions',function(global, require, module, exports) {  'use strict';












var UIManager=require('UIManager');

var invariant=require('invariant');

var dimensions=UIManager.Dimensions;




if(dimensions&&dimensions.windowPhysicalPixels){

dimensions=JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window={
width:windowPhysicalPixels.width/windowPhysicalPixels.scale,
height:windowPhysicalPixels.height/windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=function(){function Dimensions(){babelHelpers.classCallCheck(this,Dimensions);}babelHelpers.createClass(Dimensions,null,[{key:'set',value:function set(





dims){
babelHelpers.extends(dimensions,dims);
return true;}},{key:'get',value:function get(















dim){
invariant(dimensions[dim],'No dimension set for key '+dim);
return dimensions[dim];}}]);return Dimensions;}();



module.exports=Dimensions;
});
__d('ReactChildren',function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactElement=require('ReactElement');

var emptyFunction=require('emptyFunction');
var traverseAllChildren=require('traverseAllChildren');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var fourArgumentPooler=PooledClass.fourArgumentPooler;


var userProvidedKeyEscapeRegex=/\/(?!\/)/g;
function escapeUserProvidedKey(text){
return (''+text).replace(userProvidedKeyEscapeRegex,'//');}











function ForEachBookKeeping(forEachFunction,forEachContext){
this.func=forEachFunction;
this.context=forEachContext;
this.count=0;}

ForEachBookKeeping.prototype.destructor=function(){
this.func=null;
this.context=null;
this.count=0;};

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(bookKeeping,child,name){var 
func=bookKeeping.func;var context=bookKeeping.context;
func.call(context,child,bookKeeping.count++);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children==null){
return children;}

var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}












function MapBookKeeping(mapResult,keyPrefix,mapFunction,mapContext){
this.result=mapResult;
this.keyPrefix=keyPrefix;
this.func=mapFunction;
this.context=mapContext;
this.count=0;}

MapBookKeeping.prototype.destructor=function(){
this.result=null;
this.keyPrefix=null;
this.func=null;
this.context=null;
this.count=0;};

PooledClass.addPoolingTo(MapBookKeeping,fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping,child,childKey){var 
result=bookKeeping.result;var keyPrefix=bookKeeping.keyPrefix;var func=bookKeeping.func;var context=bookKeeping.context;

var mappedChild=func.call(context,child,bookKeeping.count++);
if(Array.isArray(mappedChild)){
mapIntoWithKeyPrefixInternal(
mappedChild,
result,
childKey,
emptyFunction.thatReturnsArgument);}else 

if(mappedChild!=null){
if(ReactElement.isValidElement(mappedChild)){
mappedChild=ReactElement.cloneAndReplaceKey(
mappedChild,


keyPrefix+(

mappedChild!==child?
escapeUserProvidedKey(mappedChild.key||'')+'/':
'')+

childKey);}


result.push(mappedChild);}}



function mapIntoWithKeyPrefixInternal(children,array,prefix,func,context){
var escapedPrefix='';
if(prefix!=null){
escapedPrefix=escapeUserProvidedKey(prefix)+'/';}

var traverseContext=MapBookKeeping.getPooled(
array,
escapedPrefix,
func,
context);

traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);}













function mapChildren(children,func,context){
if(children==null){
return children;}

var result=[];
mapIntoWithKeyPrefixInternal(children,result,null,func,context);
return result;}




function forEachSingleChildDummy(traverseContext,child,name){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}







function toArray(children){
var result=[];
mapIntoWithKeyPrefixInternal(
children,
result,
null,
emptyFunction.thatReturnsArgument);

return result;}



var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
mapIntoWithKeyPrefixInternal:mapIntoWithKeyPrefixInternal,
count:countChildren,
toArray:toArray};


module.exports=ReactChildren;
});
__d('ReactClass',function(global, require, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactElement=require('ReactElement');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];

var warnedSetProps=false;
function warnSetProps(){
if(!warnedSetProps){
warnedSetProps=true;
warning(
false,
'setProps(...) and replaceProps(...) are deprecated. '+
'Instead, call render again at the top level.');}}


























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName=displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i<mixins.length;i++){
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes=assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes=assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps=createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps=getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes=assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);},

autobind:function(){}};


function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef){
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName]==='function',
'%s: %s type `%s` is invalid; it must be a function, usually from '+
'React.PropTypes.',
Constructor.displayName||'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy===SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override '+
'`%s` from your class specification. Ensure that your method names '+
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy===SpecPolicy.DEFINE_MANY||
specPolicy===SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define '+
'`%s` on your component more than once. This conflict may be due '+
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec!=='function',
'ReactClass: You\'re attempting to '+
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to '+
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec){
if(!spec.hasOwnProperty(name)){
continue;}


if(name===MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var isFunction=typeof property==='function';
var shouldAutoBind=
isFunction&&
!isReactClassMethod&&
!isAlreadyDefined&&
spec.autobind!==false;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap={};}

proto.__reactAutoBindMap[name]=property;
proto[name]=property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod&&(
specPolicy===SpecPolicy.DEFINE_MANY_MERGED||
specPolicy===SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s '+
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy===SpecPolicy.DEFINE_MANY_MERGED){
proto[name]=createMergedResultFunction(proto[name],property);}else 
if(specPolicy===SpecPolicy.DEFINE_MANY){
proto[name]=createChainedFunction(proto[name],property);}}else 

{
proto[name]=property;
if(__DEV__){


if(typeof property==='function'&&spec.displayName){
proto[name].displayName=spec.displayName+'_'+name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics){
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=name in RESERVED_SPEC_KEYS;
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved '+
'property, `%s`, that shouldn\'t be on the "statics" key. Define it '+
'as an instance property instead; it will still be accessible on the '+
'constructor.',
name);


var isInherited=name in Constructor;
invariant(
!isInherited,
'ReactClass: You are attempting to define '+
'`%s` on your component more than once. This conflict may be '+
'due to a mixin.',
name);

Constructor[name]=property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one&&two&&typeof one==='object'&&typeof two==='object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two){
if(two.hasOwnProperty(key)){
invariant(
one[key]===undefined,
'mergeIntoWithNoDuplicateKeys(): '+
'Tried to merge two objects with the same key: `%s`. This conflict '+
'may be due to a mixin; in particular, this may be caused by two '+
'getInitialState() or getDefaultProps() methods returning objects '+
'with clashing keys.',
key);

one[key]=two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a==null){
return b;}else 
if(b==null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext=component;
boundMethod.__reactBoundMethod=method;
boundMethod.__reactBoundArguments=null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind=function(newThis){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}



if(newThis!==component&&newThis!==null){
warning(
false,
'bind(): React component methods may only be bound to the '+
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. '+
'React does this for you automatically in a high-performance '+
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext=component;
reboundMethod.__reactBoundMethod=method;
reboundMethod.__reactBoundArguments=args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap){
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey]=bindAutoBindMethod(
component,
method);}}}









var ReactClassMixin={





replaceState:function(newState,callback){
this.updater.enqueueReplaceState(this,newState);
if(callback){
this.updater.enqueueCallback(this,callback);}},









isMounted:function(){
return this.updater.isMounted(this);},











setProps:function(partialProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueSetProps(this,partialProps);
if(callback){
this.updater.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueReplaceProps(this,newProps);
if(callback){
this.updater.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context,updater){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or '+
'JSX instead. See: https://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props=props;
this.context=context;
this.refs=emptyObject;
this.updater=updater||ReactNoopUpdateQueue;

this.state=null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState==='undefined'&&
this.getInitialState._isMockFunction){


initialState=null;}}


invariant(
typeof initialState==='object'&&!Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName||'ReactCompositeComponent');


this.state=initialState;};

Constructor.prototype=new ReactClassComponent();
Constructor.prototype.constructor=Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps=Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved={};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved={};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called '+
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+
'The name is phrased as a question because the function is '+
'expected to return a value.',
spec.displayName||'A component');

warning(
!Constructor.prototype.componentWillRecieveProps,
'%s has a method called '+
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
spec.displayName||'A component');}




for(var methodName in ReactClassInterface){
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName]=null;}}



return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports=ReactClass;
});
__d('ReactComponent',function(global, require, module, exports) {  'use strict';












var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var canDefineProperty=require('canDefineProperty');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context,updater){
this.props=props;
this.context=context;
this.refs=emptyObject;


this.updater=updater||ReactNoopUpdateQueue;}


ReactComponent.prototype.isReactComponent={};


























ReactComponent.prototype.setState=function(partialState,callback){
invariant(
typeof partialState==='object'||
typeof partialState==='function'||
partialState==null,
'setState(...): takes an object of state variables to update or a '+
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState!=null,
'setState(...): You passed an undefined or null state object; '+
'instead, use forceUpdate().');}


this.updater.enqueueSetState(this,partialState);
if(callback){
this.updater.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate=function(callback){
this.updater.enqueueForceUpdate(this);
if(callback){
this.updater.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:[
'getDOMNode',
'Use ReactDOM.findDOMNode(component) instead.'],

isMounted:[
'isMounted',
'Instead, make sure to clean up subscriptions and pending requests in '+
'componentWillUnmount to prevent memory leaks.'],

replaceProps:[
'replaceProps',
'Instead, call render again at the top level.'],

replaceState:[
'replaceState',
'Refactor your code to use setState instead (see '+
'https://github.com/facebook/react/issues/3236).'],

setProps:[
'setProps',
'Instead, call render again at the top level.']};


var defineDeprecationWarning=function(methodName,info){
if(canDefineProperty){
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes. %s',
info[0],
info[1]);

return undefined;}});}};




for(var fnName in deprecatedAPIs){
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports=ReactComponent;
});
__d('ReactNoopUpdateQueue',function(global, require, module, exports) {  'use strict';












var warning=require('warning');

function warnTDZ(publicInstance,callerName){
if(__DEV__){
warning(
false,
'%s(...): Can only update a mounted or mounting component. '+
'This usually means you called %s() on an unmounted component. '+
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor&&publicInstance.constructor.displayName||'');}}







var ReactNoopUpdateQueue={








isMounted:function(publicInstance){
return false;},










enqueueCallback:function(publicInstance,callback){},














enqueueForceUpdate:function(publicInstance){
warnTDZ(publicInstance,'forceUpdate');},













enqueueReplaceState:function(publicInstance,completeState){
warnTDZ(publicInstance,'replaceState');},












enqueueSetState:function(publicInstance,partialState){
warnTDZ(publicInstance,'setState');},









enqueueSetProps:function(publicInstance,partialProps){
warnTDZ(publicInstance,'setProps');},









enqueueReplaceProps:function(publicInstance,props){
warnTDZ(publicInstance,'replaceProps');}};




module.exports=ReactNoopUpdateQueue;
});
__d('ReactElementValidator',function(global, require, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');

var canDefineProperty=require('canDefineProperty');
var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `'+name+'`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};











function validateExplicitKey(element,parentType){
if(!element._store||element._store.validated||element.key!=null){
return;}

element._store.validated=true;

var addenda=getAddendaForKeyUse('uniqueKey',element,parentType);
if(addenda===null){

return;}

warning(
false,
'Each child in an array or iterator should have a unique "key" prop.'+
'%s%s%s',
addenda.parentOrOwner||'',
addenda.childOwner||'',
addenda.url||'');}













function getAddendaForKeyUse(messageType,element,parentType){
var addendum=getDeclarationErrorAddendum();
if(!addendum){
var parentName=typeof parentType==='string'?
parentType:parentType.displayName||parentType.name;
if(parentName){
addendum=' Check the top-level render call using <'+parentName+'>.';}}



var memoizer=ownerHasKeyUseWarning[messageType]||(
ownerHasKeyUseWarning[messageType]={});

if(memoizer[addendum]){
return null;}

memoizer[addendum]=true;

var addenda={
parentOrOwner:addendum,
url:' See https://fb.me/react-warning-keys for more information.',
childOwner:null};





if(element&&
element._owner&&
element._owner!==ReactCurrentOwner.current){

addenda.childOwner=' It was passed a child from '+
element._owner.getName()+'.';}


return addenda;}











function validateChildKeys(node,parentType){
if(typeof node!=='object'){
return;}

if(Array.isArray(node)){
for(var i=0;i<node.length;i++){
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

if(node._store){
node._store.validated=true;}}else 

if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn!==node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step=iterator.next()).done){
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}}}
















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes){
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName]==='function',
'%s: %s type `%s` is invalid; it must be a function, usually from '+
'React.PropTypes.',
componentName||'React class',
ReactPropTypeLocationNames[location],
propName);

error=propTypes[propName](props,propName,componentName,location);}
catch(ex){
error=ex;}

warning(
!error||error instanceof Error,
'%s: type specification of %s `%s` is invalid; the type checker '+
'function must return `null` or an `Error` but returned a %s. '+
'You may have forgotten to pass an argument to the type checker '+
'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and '+
'shape all require an argument).',
componentName||'React class',
ReactPropTypeLocationNames[location],
propName,
typeof error);

if(error instanceof Error&&!(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message]=true;

var addendum=getDeclarationErrorAddendum();
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}











function validatePropTypes(element){
var componentClass=element.type;
if(typeof componentClass!=='function'){
return;}

var name=componentClass.displayName||componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps==='function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass '+
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

createElement:function(type,props,children){
var validType=typeof type==='string'||typeof type==='function';


warning(
validType,
'React.createElement: type should not be null, undefined, boolean, or '+
'number. It should be a string (for DOM elements) or a ReactClass '+
'(for composite components).%s',
getDeclarationErrorAddendum());


var element=ReactElement.createElement.apply(this,arguments);



if(element==null){
return element;}







if(validType){
for(var i=2;i<arguments.length;i++){
validateChildKeys(arguments[i],type);}}



validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type=type;

if(__DEV__){
if(canDefineProperty){
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly '+
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}}







return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i<arguments.length;i++){
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports=ReactElementValidator;
});
__d('onlyChild',function(global, require, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports=onlyChild;
});
__d('ReactNativeART',function(global, require, module, exports) {  'use strict';











var Color=require('art/core/color.js');
var Path=require('ARTSerializablePath');
var Transform=require('art/core/transform.js');

var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var merge=require('merge');



function arrayDiffer(a,b){
if(a==null){
return true;}

if(a.length!==b.length){
return true;}

for(var i=0;i<a.length;i++){
if(a[i]!==b[i]){
return true;}}


return false;}


function fontAndLinesDiffer(a,b){
if(a===b){
return false;}

if(a.font!==b.font){
if(a.font===null){
return true;}

if(b.font===null){
return true;}


if(
a.font.fontFamily!==b.font.fontFamily||
a.font.fontSize!==b.font.fontSize||
a.font.fontWeight!==b.font.fontWeight||
a.font.fontStyle!==b.font.fontStyle)
{
return true;}}


return arrayDiffer(a.lines,b.lines);}




var SurfaceViewAttributes=merge(ReactNativeViewAttributes.UIView,{});





var NodeAttributes={
transform:{diff:arrayDiffer},
opacity:true};


var GroupAttributes=merge(NodeAttributes,{
clipping:{diff:arrayDiffer}});


var RenderableAttributes=merge(NodeAttributes,{
fill:{diff:arrayDiffer},
stroke:{diff:arrayDiffer},
strokeWidth:true,
strokeCap:true,
strokeJoin:true,
strokeDash:{diff:arrayDiffer}});


var ShapeAttributes=merge(RenderableAttributes,{
d:{diff:arrayDiffer}});


var TextAttributes=merge(RenderableAttributes,{
alignment:true,
frame:{diff:fontAndLinesDiffer},
path:{diff:arrayDiffer}});




var NativeSurfaceView=createReactNativeComponentClass({
validAttributes:SurfaceViewAttributes,
uiViewClassName:'ARTSurfaceView'});


var NativeGroup=createReactNativeComponentClass({
validAttributes:GroupAttributes,
uiViewClassName:'ARTGroup'});


var NativeShape=createReactNativeComponentClass({
validAttributes:ShapeAttributes,
uiViewClassName:'ARTShape'});


var NativeText=createReactNativeComponentClass({
validAttributes:TextAttributes,
uiViewClassName:'ARTText'});




function childrenAsString(children){
if(!children){
return '';}

if(typeof children==='string'){
return children;}

if(children.length){
return children.join('\n');}

return '';}




var Surface=React.createClass({displayName:'Surface',

render:function(){
var props=this.props;
var w=extractNumber(props.width,0);
var h=extractNumber(props.height,0);
return (
React.createElement(NativeSurfaceView,{style:[props.style,{width:w,height:h}]},
this.props.children));}});











function extractNumber(value,defaultValue){
if(value==null){
return defaultValue;}

return +value;}


var pooledTransform=new Transform();

function extractTransform(props){
var scaleX=props.scaleX!=null?props.scaleX:
props.scale!=null?props.scale:1;
var scaleY=props.scaleY!=null?props.scaleY:
props.scale!=null?props.scale:1;

pooledTransform.
transformTo(1,0,0,1,0,0).
move(props.x||0,props.y||0).
rotate(props.rotation||0,props.originX,props.originY).
scale(scaleX,scaleY,props.originX,props.originY);

if(props.transform!=null){
pooledTransform.transform(props.transform);}


return [
pooledTransform.xx,pooledTransform.yx,
pooledTransform.xy,pooledTransform.yy,
pooledTransform.x,pooledTransform.y];}



function extractOpacity(props){

if(props.visible===false){
return 0;}

if(props.opacity==null){
return 1;}

return +props.opacity;}







var Group=React.createClass({displayName:'Group',

render:function(){
var props=this.props;
return (
React.createElement(NativeGroup,{
opacity:extractOpacity(props),
transform:extractTransform(props)},
this.props.children));}});






var ClippingRectangle=React.createClass({displayName:'ClippingRectangle',

render:function(){
var props=this.props;
var x=extractNumber(props.x,0);
var y=extractNumber(props.y,0);
var w=extractNumber(props.width,0);
var h=extractNumber(props.height,0);
var clipping=new Path().
moveTo(x,y).
line(w,0).
line(0,h).
line(w,0).
close().
toJSON();

var propsExcludingXAndY=merge(props);
delete propsExcludingXAndY.x;
delete propsExcludingXAndY.y;
return (
React.createElement(NativeGroup,{
clipping:clipping,
opacity:extractOpacity(props),
transform:extractTransform(propsExcludingXAndY)},
this.props.children));}});








var SOLID_COLOR=0;
var LINEAR_GRADIENT=1;
var RADIAL_GRADIENT=2;
var PATTERN=3;

function insertColorIntoArray(color,targetArray,atIndex){
var c=new Color(color);
targetArray[atIndex+0]=c.red/255;
targetArray[atIndex+1]=c.green/255;
targetArray[atIndex+2]=c.blue/255;
targetArray[atIndex+3]=c.alpha;}


function insertColorsIntoArray(stops,targetArray,atIndex){
var i=0;
if('length' in stops){
while(i<stops.length){
insertColorIntoArray(stops[i],targetArray,atIndex+i*4);
i++;}}else 

{
for(var offset in stops){
insertColorIntoArray(stops[offset],targetArray,atIndex+i*4);
i++;}}


return atIndex+i*4;}


function insertOffsetsIntoArray(stops,targetArray,atIndex,multi,reverse){
var offsetNumber;
var i=0;
if('length' in stops){
while(i<stops.length){
offsetNumber=i/(stops.length-1)*multi;
targetArray[atIndex+i]=reverse?1-offsetNumber:offsetNumber;
i++;}}else 

{
for(var offsetString in stops){
offsetNumber=+offsetString*multi;
targetArray[atIndex+i]=reverse?1-offsetNumber:offsetNumber;
i++;}}


return atIndex+i;}


function insertColorStopsIntoArray(stops,targetArray,atIndex){
var lastIndex=insertColorsIntoArray(stops,targetArray,atIndex);
insertOffsetsIntoArray(stops,targetArray,lastIndex,1,false);}


function insertDoubleColorStopsIntoArray(stops,targetArray,atIndex){
var lastIndex=insertColorsIntoArray(stops,targetArray,atIndex);
lastIndex=insertColorsIntoArray(stops,targetArray,lastIndex);
lastIndex=insertOffsetsIntoArray(stops,targetArray,lastIndex,0.5,false);
insertOffsetsIntoArray(stops,targetArray,lastIndex,0.5,true);}


function applyBoundingBoxToBrushData(brushData,props){
var type=brushData[0];
var width=+props.width;
var height=+props.height;
if(type===LINEAR_GRADIENT){
brushData[1]*=width;
brushData[2]*=height;
brushData[3]*=width;
brushData[4]*=height;}else 
if(type===RADIAL_GRADIENT){
brushData[1]*=width;
brushData[2]*=height;
brushData[3]*=width;
brushData[4]*=height;
brushData[5]*=width;
brushData[6]*=height;}else 
if(type===PATTERN){}}




function extractBrush(colorOrBrush,props){
if(colorOrBrush==null){
return null;}

if(colorOrBrush._brush){
if(colorOrBrush._bb){





applyBoundingBoxToBrushData(colorOrBrush._brush,props);
colorOrBrush._bb=false;}

return colorOrBrush._brush;}

var c=new Color(colorOrBrush);
return [SOLID_COLOR,c.red/255,c.green/255,c.blue/255,c.alpha];}


function extractColor(color){
if(color==null){
return null;}

var c=new Color(color);
return [c.red/255,c.green/255,c.blue/255,c.alpha];}


function extractStrokeCap(strokeCap){
switch(strokeCap){
case 'butt':return 0;
case 'square':return 2;
default:return 1;}}



function extractStrokeJoin(strokeJoin){
switch(strokeJoin){
case 'miter':return 0;
case 'bevel':return 2;
default:return 1;}}








var Shape=React.createClass({displayName:'Shape',

render:function(){
var props=this.props;
var path=props.d||childrenAsString(props.children);
var d=new Path(path).toJSON();
return (
React.createElement(NativeShape,{
fill:extractBrush(props.fill,props),
opacity:extractOpacity(props),
stroke:extractColor(props.stroke),
strokeCap:extractStrokeCap(props.strokeCap),
strokeDash:props.strokeDash||null,
strokeJoin:extractStrokeJoin(props.strokeJoin),
strokeWidth:extractNumber(props.strokeWidth,1),
transform:extractTransform(props),

d:d}));}});








var cachedFontObjectsFromString={};

var fontFamilyPrefix=/^[\s"']*/;
var fontFamilySuffix=/[\s"']*$/;

function extractSingleFontFamily(fontFamilyString){



return fontFamilyString.split(',')[0].
replace(fontFamilyPrefix,'').
replace(fontFamilySuffix,'');}


function parseFontString(font){
if(cachedFontObjectsFromString.hasOwnProperty(font)){
return cachedFontObjectsFromString[font];}

var regexp=/^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
var match=regexp.exec(font);
if(!match){
return null;}

var fontFamily=extractSingleFontFamily(match[3]);
var fontSize=+match[2]||12;
var isBold=/bold/.exec(match[1]);
var isItalic=/italic/.exec(match[1]);
cachedFontObjectsFromString[font]={
fontFamily:fontFamily,
fontSize:fontSize,
fontWeight:isBold?'bold':'normal',
fontStyle:isItalic?'italic':'normal'};

return cachedFontObjectsFromString[font];}


function extractFont(font){
if(font==null){
return null;}

if(typeof font==='string'){
return parseFontString(font);}

var fontFamily=extractSingleFontFamily(font.fontFamily);
var fontSize=+font.fontSize||12;
return {

fontFamily:fontFamily,
fontSize:fontSize,
fontWeight:font.fontWeight,
fontStyle:font.fontStyle};}



var newLine=/\n/g;
function extractFontAndLines(font,text){
return {font:extractFont(font),lines:text.split(newLine)};}


function extractAlignment(alignment){
switch(alignment){
case 'right':
return 1;
case 'center':
return 2;
default:
return 0;}}



var Text=React.createClass({displayName:'Text',

render:function(){
var props=this.props;
var textPath=props.path?new Path(props.path).toJSON():null;
var textFrame=extractFontAndLines(
props.font,
childrenAsString(props.children));

return (
React.createElement(NativeText,{
fill:extractBrush(props.fill,props),
opacity:extractOpacity(props),
stroke:extractColor(props.stroke),
strokeCap:extractStrokeCap(props.strokeCap),
strokeDash:props.strokeDash||null,
strokeJoin:extractStrokeJoin(props.strokeJoin),
strokeWidth:extractNumber(props.strokeWidth,1),
transform:extractTransform(props),

alignment:extractAlignment(props.alignment),
frame:textFrame,
path:textPath}));}});








function LinearGradient(stops,x1,y1,x2,y2){
var type=LINEAR_GRADIENT;

if(arguments.length<5){
var angle=(x1==null?270:x1)*Math.PI/180;

var x=Math.cos(angle);
var y=-Math.sin(angle);
var l=(Math.abs(x)+Math.abs(y))/2;

x*=l;y*=l;

x1=0.5-x;
x2=0.5+x;
y1=0.5-y;
y2=0.5+y;
this._bb=true;}else 
{
this._bb=false;}


var brushData=[type,+x1,+y1,+x2,+y2];
insertColorStopsIntoArray(stops,brushData,5);
this._brush=brushData;}


function RadialGradient(stops,fx,fy,rx,ry,cx,cy){
if(ry==null){
ry=rx;}

if(cx==null){
cx=fx;}

if(cy==null){
cy=fy;}

if(fx==null){


fx=fy=rx=ry=cx=cy=0.5;
this._bb=true;}else 
{
this._bb=false;}





var brushData=[RADIAL_GRADIENT,+fx,+fy,+rx*2,+ry*2,+cx,+cy];
insertDoubleColorStopsIntoArray(stops,brushData,7);
this._brush=brushData;}


function Pattern(url,width,height,left,top){
this._brush=[PATTERN,url,+left||0,+top||0,+width,+height];}





function CSSBackgroundPattern(){
return new Color('rgba(0,0,0,0)');}


var ReactART={
LinearGradient:LinearGradient,
RadialGradient:RadialGradient,
Pattern:Pattern,
Transform:Transform,
Path:Path,
Surface:Surface,
Group:Group,
ClippingRectangle:ClippingRectangle,
Shape:Shape,
Text:Text,
CSSBackgroundPattern:CSSBackgroundPattern};


module.exports=ReactART;
});
__d('art/core/color.js',function(global, require, module, exports) {  var colors={
maroon:'#800000',red:'#ff0000',orange:'#ffA500',yellow:'#ffff00',olive:'#808000',
purple:'#800080',fuchsia:"#ff00ff",white:'#ffffff',lime:'#00ff00',green:'#008000',
navy:'#000080',blue:'#0000ff',aqua:'#00ffff',teal:'#008080',
black:'#000000',silver:'#c0c0c0',gray:'#808080'};


var map=function(array,fn){
var results=[];
for(var i=0,l=array.length;i<l;i++){
results[i]=fn(array[i],i);}
return results;};


var Color=function(color,type){

if(color.isColor){

this.red=color.red;
this.green=color.green;
this.blue=color.blue;
this.alpha=color.alpha;}else 

{

var namedColor=colors[color];
if(namedColor){
color=namedColor;
type='hex';}


switch(typeof color){
case 'string':if(!type)type=(type=color.match(/^rgb|^hsb|^hsl/))?type[0]:'hex';break;
case 'object':type=type||'rgb';color=color.toString();break;
case 'number':type='hex';color=color.toString(16);break;}


color=Color['parse'+type.toUpperCase()](color);
this.red=color[0];
this.green=color[1];
this.blue=color[2];
this.alpha=color[3];}


this.isColor=true;};



var limit=function(number,min,max){
return Math.min(max,Math.max(min,number));};


var listMatch=/([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch=/^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB=function(color){
return map(color.match(listMatch).slice(1),function(bit,i){
if(bit)bit=parseFloat(bit)*(bit[bit.length-1]=='%'?2.55:1);
return i<3?Math.round((bit%=256)<0?bit+256:bit):limit(bit===''?1:Number(bit),0,1);});};



Color.parseHEX=function(color){
if(color.length==1)color=color+color+color;
return map(color.match(hexMatch).slice(1),function(bit,i){
if(i==3)return bit?parseInt(bit,16)/255:1;
return parseInt(bit.length==1?bit+bit:bit,16);});};



Color.parseHSB=function(color){
var hsb=map(color.match(listMatch).slice(1),function(bit,i){
if(bit)bit=parseFloat(bit);
if(i===0)return Math.round((bit%=360)<0?bit+360:bit);else 
if(i<3)return limit(Math.round(bit),0,100);else 
return limit(bit===''?1:Number(bit),0,1);});


var a=hsb[3];
var br=Math.round(hsb[2]/100*255);
if(hsb[1]==0)return [br,br,br,a];

var hue=hsb[0];
var f=hue%60;
var p=Math.round(hsb[2]*(100-hsb[1])/10000*255);
var q=Math.round(hsb[2]*(6000-hsb[1]*f)/600000*255);
var t=Math.round(hsb[2]*(6000-hsb[1]*(60-f))/600000*255);

switch(Math.floor(hue/60)){
case 0:return [br,t,p,a];
case 1:return [q,br,p,a];
case 2:return [p,br,t,a];
case 3:return [p,q,br,a];
case 4:return [t,p,br,a];
default:return [br,p,q,a];}};



Color.parseHSL=function(color){
var hsb=map(color.match(listMatch).slice(1),function(bit,i){
if(bit)bit=parseFloat(bit);
if(i===0)return Math.round((bit%=360)<0?bit+360:bit);else 
if(i<3)return limit(Math.round(bit),0,100);else 
return limit(bit===''?1:Number(bit),0,1);});


var h=hsb[0]/60;
var s=hsb[1]/100;
var l=hsb[2]/100;
var a=hsb[3];

var c=(1-Math.abs(2*l-1))*s;
var x=c*(1-Math.abs(h%2-1));
var m=l-c/2;

var p=Math.round((c+m)*255);
var q=Math.round((x+m)*255);
var t=Math.round(m*255);

switch(Math.floor(h)){
case 0:return [p,q,t,a];
case 1:return [q,p,t,a];
case 2:return [t,p,q,a];
case 3:return [t,q,p,a];
case 4:return [q,t,p,a];
default:return [p,t,q,a];}};



var toString=function(type,array){
if(array[3]!=1)type+='a';else 
array.pop();
return type+'('+array.join(', ')+')';};


Color.prototype={

toHSB:function(array){
var red=this.red,green=this.green,blue=this.blue,alpha=this.alpha;

var max=Math.max(red,green,blue),min=Math.min(red,green,blue),delta=max-min;
var hue=0,saturation=delta!=0?delta/max:0,brightness=max/255;
if(saturation){
var rr=(max-red)/delta,gr=(max-green)/delta,br=(max-blue)/delta;
hue=red==max?br-gr:green==max?2+rr-br:4+gr-rr;
if((hue/=6)<0)hue++;}


var hsb=[Math.round(hue*360),Math.round(saturation*100),Math.round(brightness*100),alpha];

return array?hsb:toString('hsb',hsb);},


toHSL:function(array){
var red=this.red,green=this.green,blue=this.blue,alpha=this.alpha;

var max=Math.max(red,green,blue),min=Math.min(red,green,blue),delta=max-min;
var hue=0,saturation=delta!=0?delta/(255-Math.abs(max+min-255)):0,lightness=(max+min)/512;
if(saturation){
var rr=(max-red)/delta,gr=(max-green)/delta,br=(max-blue)/delta;
hue=red==max?br-gr:green==max?2+rr-br:4+gr-rr;
if((hue/=6)<0)hue++;}


var hsl=[Math.round(hue*360),Math.round(saturation*100),Math.round(lightness*100),alpha];

return array?hsl:toString('hsl',hsl);},


toHEX:function(array){

var a=this.alpha;
var alpha=(a=Math.round(a*255).toString(16)).length==1?a+a:a;

var hex=map([this.red,this.green,this.blue],function(bit){
bit=bit.toString(16);
return bit.length==1?'0'+bit:bit;});


return array?hex.concat(alpha):'#'+hex.join('')+(alpha=='ff'?'':alpha);},


toRGB:function(array){
var rgb=[this.red,this.green,this.blue,this.alpha];
return array?rgb:toString('rgb',rgb);}};




Color.prototype.toString=Color.prototype.toRGB;

Color.hex=function(hex){
return new Color(hex,'hex');};


if(this.hex==null)this.hex=Color.hex;

Color.hsb=function(h,s,b,a){
return new Color([h||0,s||0,b||0,a==null?1:a],'hsb');};


if(this.hsb==null)this.hsb=Color.hsb;

Color.hsl=function(h,s,l,a){
return new Color([h||0,s||0,l||0,a==null?1:a],'hsl');};


if(this.hsl==null)this.hsl=Color.hsl;

Color.rgb=function(r,g,b,a){
return new Color([r||0,g||0,b||0,a==null?1:a],'rgb');};


if(this.rgb==null)this.rgb=Color.rgb;

Color.detach=function(color){
color=new Color(color);
return [Color.rgb(color.red,color.green,color.blue).toString(),color.alpha];};


module.exports=Color;
});
__d('ARTSerializablePath',function(global, require, module, exports) {  'use strict';













var Class=require('art/core/class.js');
var Path=require('art/core/path.js');

var MOVE_TO=0;
var CLOSE=1;
var LINE_TO=2;
var CURVE_TO=3;
var ARC=4;

var SerializablePath=Class(Path,{

initialize:function(path){
this.reset();
if(path instanceof SerializablePath){
this.path=path.path.slice(0);}else 
if(path){
if(path.applyToPath){
path.applyToPath(this);}else 
{
this.push(path);}}},




onReset:function(){
this.path=[];},


onMove:function(sx,sy,x,y){
this.path.push(MOVE_TO,x,y);},


onLine:function(sx,sy,x,y){
this.path.push(LINE_TO,x,y);},


onBezierCurve:function(sx,sy,p1x,p1y,p2x,p2y,x,y){
this.path.push(CURVE_TO,p1x,p1y,p2x,p2y,x,y);},


_arcToBezier:Path.prototype.onArc,

onArc:function(sx,sy,ex,ey,cx,cy,rx,ry,sa,ea,ccw,rotation){
if(rx!==ry||rotation){
return this._arcToBezier(
sx,sy,ex,ey,cx,cy,rx,ry,sa,ea,ccw,rotation);}


this.path.push(ARC,cx,cy,rx,sa,ea,ccw?0:1);},


onClose:function(){
this.path.push(CLOSE);},


toJSON:function(){
return this.path;}});




module.exports=SerializablePath;
});
__d('art/core/class.js',function(global, require, module, exports) {  module.exports=function(mixins){
var proto={};
for(var i=0,l=arguments.length;i<l;i++){
var mixin=arguments[i];
if(typeof mixin=='function')mixin=mixin.prototype;
for(var key in mixin){proto[key]=mixin[key];}}

if(!proto.initialize)proto.initialize=function(){};
proto.constructor=function(a,b,c,d,e,f,g,h){
return new proto.initialize(a,b,c,d,e,f,g,h);};

proto.constructor.prototype=proto.initialize.prototype=proto;
return proto.constructor;};
});
__d('art/core/path.js',function(global, require, module, exports) {  var Class=require('art/core/class.js');

module.exports=Class({

initialize:function(path){
this.reset().push(path);},




push:function(){
var p=Array.prototype.join.call(arguments,' ').
match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
if(!p)return this;

var last,cmd=p[0],i=1;
while(cmd){
switch(cmd){
case 'm':this.move(p[i++],p[i++]);break;
case 'l':this.line(p[i++],p[i++]);break;
case 'c':this.curve(p[i++],p[i++],p[i++],p[i++],p[i++],p[i++]);break;
case 's':this.curve(p[i++],p[i++],null,null,p[i++],p[i++]);break;
case 'q':this.curve(p[i++],p[i++],p[i++],p[i++]);break;
case 't':this.curve(p[i++],p[i++]);break;
case 'a':this.arc(p[i+5],p[i+6],p[i],p[i+1],p[i+3],! +p[i+4],p[i+2]);i+=7;break;
case 'h':this.line(p[i++],0);break;
case 'v':this.line(0,p[i++]);break;

case 'M':this.moveTo(p[i++],p[i++]);break;
case 'L':this.lineTo(p[i++],p[i++]);break;
case 'C':this.curveTo(p[i++],p[i++],p[i++],p[i++],p[i++],p[i++]);break;
case 'S':this.curveTo(p[i++],p[i++],null,null,p[i++],p[i++]);break;
case 'Q':this.curveTo(p[i++],p[i++],p[i++],p[i++]);break;
case 'T':this.curveTo(p[i++],p[i++]);break;
case 'A':this.arcTo(p[i+5],p[i+6],p[i],p[i+1],p[i+3],! +p[i+4],p[i+2]);i+=7;break;
case 'H':this.lineTo(p[i++],this.penY);break;
case 'V':this.lineTo(this.penX,p[i++]);break;

case 'Z':case 'z':this.close();break;
default:cmd=last;i--;continue;}


last=cmd;
if(last=='m')last='l';else 
if(last=='M')last='L';
cmd=p[i++];}

return this;},




reset:function(){
this.penX=this.penY=0;
this.penDownX=this.penDownY=null;
this._pivotX=this._pivotY=0;
this.onReset();
return this;},


move:function(x,y){
this.onMove(this.penX,this.penY,this._pivotX=this.penX+=+x,this._pivotY=this.penY+=+y);
return this;},

moveTo:function(x,y){
this.onMove(this.penX,this.penY,this._pivotX=this.penX=+x,this._pivotY=this.penY=+y);
return this;},


line:function(x,y){
return this.lineTo(this.penX+ +x,this.penY+ +y);},

lineTo:function(x,y){
if(this.penDownX==null){this.penDownX=this.penX;this.penDownY=this.penY;}
this.onLine(this.penX,this.penY,this._pivotX=this.penX=+x,this._pivotY=this.penY=+y);
return this;},


curve:function(c1x,c1y,c2x,c2y,ex,ey){
var x=this.penX,y=this.penY;
return this.curveTo(
x+ +c1x,y+ +c1y,
c2x==null?null:x+ +c2x,
c2y==null?null:y+ +c2y,
ex==null?null:x+ +ex,
ey==null?null:y+ +ey);},


curveTo:function(c1x,c1y,c2x,c2y,ex,ey){
var x=this.penX,y=this.penY;
if(c2x==null){
c2x=+c1x;c2y=+c1y;
c1x=x*2-(this._pivotX||0);c1y=y*2-(this._pivotY||0);}

if(ex==null){
this._pivotX=+c1x;this._pivotY=+c1y;
ex=+c2x;ey=+c2y;
c2x=(ex+ +c1x*2)/3;c2y=(ey+ +c1y*2)/3;
c1x=(x+ +c1x*2)/3;c1y=(y+ +c1y*2)/3;}else 
{
this._pivotX=+c2x;this._pivotY=+c2y;}

if(this.penDownX==null){this.penDownX=x;this.penDownY=y;}
this.onBezierCurve(x,y,+c1x,+c1y,+c2x,+c2y,this.penX=+ex,this.penY=+ey);
return this;},


arc:function(x,y,rx,ry,outer,counterClockwise,rotation){
return this.arcTo(this.penX+ +x,this.penY+ +y,rx,ry,outer,counterClockwise,rotation);},

arcTo:function(x,y,rx,ry,outer,counterClockwise,rotation){
ry=Math.abs(+ry||+rx||+y-this.penY);
rx=Math.abs(+rx||+x-this.penX);

if(!rx||!ry||x==this.penX&&y==this.penY)return this.lineTo(x,y);

var tX=this.penX,tY=this.penY,clockwise=! +counterClockwise,large=!! +outer;

var rad=rotation?rotation*Math.PI/180:0,cos=Math.cos(rad),sin=Math.sin(rad);
x-=tX;y-=tY;


var cx=cos*x/2+sin*y/2,
cy=-sin*x/2+cos*y/2,
rxry=rx*rx*ry*ry,
rycx=ry*ry*cx*cx,
rxcy=rx*rx*cy*cy,
a=rxry-rxcy-rycx;

if(a<0){
a=Math.sqrt(1-a/rxry);
rx*=a;ry*=a;
cx=x/2;cy=y/2;}else 
{
a=Math.sqrt(a/(rxcy+rycx));
if(large==clockwise)a=-a;
var cxd=-a*cy*rx/ry,
cyd=a*cx*ry/rx;
cx=cos*cxd-sin*cyd+x/2;
cy=sin*cxd+cos*cyd+y/2;}



var xx=cos/rx,yx=sin/rx,
xy=-sin/ry,yy=cos/ry;


var sa=Math.atan2(xy*-cx+yy*-cy,xx*-cx+yx*-cy),
ea=Math.atan2(xy*(x-cx)+yy*(y-cy),xx*(x-cx)+yx*(y-cy));

cx+=tX;cy+=tY;
x+=tX;y+=tY;


if(this.penDownX==null){this.penDownX=this.penX;this.penDownY=this.penY;}
this.onArc(
tX,tY,this._pivotX=this.penX=x,this._pivotY=this.penY=y,
cx,cy,rx,ry,sa,ea,!clockwise,rotation);

return this;},


counterArc:function(x,y,rx,ry,outer){
return this.arc(x,y,rx,ry,outer,true);},

counterArcTo:function(x,y,rx,ry,outer){
return this.arcTo(x,y,rx,ry,outer,true);},


close:function(){
if(this.penDownX!=null){
this.onClose(this.penX,this.penY,this.penX=this.penDownX,this.penY=this.penDownY);
this.penDownX=null;}

return this;},




onReset:function(){},


onMove:function(sx,sy,ex,ey){},


onLine:function(sx,sy,ex,ey){
this.onBezierCurve(sx,sy,sx,sy,ex,ey,ex,ey);},


onBezierCurve:function(sx,sy,c1x,c1y,c2x,c2y,ex,ey){
var gx=ex-sx,gy=ey-sy,
g=gx*gx+gy*gy,
v1,v2,cx,cy,u;

cx=c1x-sx;cy=c1y-sy;
u=cx*gx+cy*gy;

if(u>g){
cx-=gx;
cy-=gy;}else 
if(u>0&&g!=0){
cx-=u/g*gx;
cy-=u/g*gy;}


v1=cx*cx+cy*cy;

cx=c2x-sx;cy=c2y-sy;
u=cx*gx+cy*gy;

if(u>g){
cx-=gx;
cy-=gy;}else 
if(u>0&&g!=0){
cx-=u/g*gx;
cy-=u/g*gy;}


v2=cx*cx+cy*cy;

if(v1<0.01&&v2<0.01){
this.onLine(sx,sy,ex,ey);
return;}



if(isNaN(v1)||isNaN(v2)){
throw new Error('Bad input');}



var s1x=(c1x+c2x)*0.5,s1y=(c1y+c2y)*0.5,
l1x=(c1x+sx)*0.5,l1y=(c1y+sy)*0.5,
l2x=(l1x+s1x)*0.5,l2y=(l1y+s1y)*0.5,
r2x=(ex+c2x)*0.5,r2y=(ey+c2y)*0.5,
r1x=(r2x+s1x)*0.5,r1y=(r2y+s1y)*0.5,
l2r1x=(l2x+r1x)*0.5,l2r1y=(l2y+r1y)*0.5;


this.onBezierCurve(sx,sy,l1x,l1y,l2x,l2y,l2r1x,l2r1y);
this.onBezierCurve(l2r1x,l2r1y,r1x,r1y,r2x,r2y,ex,ey);},


onArc:function(sx,sy,ex,ey,cx,cy,rx,ry,sa,ea,ccw,rotation){

var rad=rotation?rotation*Math.PI/180:0,cos=Math.cos(rad),sin=Math.sin(rad),
xx=cos*rx,yx=-sin*ry,
xy=sin*rx,yy=cos*ry;


var arc=ea-sa;
if(arc<0&&!ccw)arc+=Math.PI*2;else 
if(arc>0&&ccw)arc-=Math.PI*2;

var n=Math.ceil(Math.abs(arc/(Math.PI/2))),
step=arc/n,
k=4/3*Math.tan(step/4);

var x=Math.cos(sa),y=Math.sin(sa);

for(var i=0;i<n;i++){
var cp1x=x-k*y,cp1y=y+k*x;

sa+=step;
x=Math.cos(sa);y=Math.sin(sa);

var cp2x=x+k*y,cp2y=y-k*x;

this.onBezierCurve(
sx,sy,
cx+xx*cp1x+yx*cp1y,cy+xy*cp1x+yy*cp1y,
cx+xx*cp2x+yx*cp2y,cy+xy*cp2x+yy*cp2y,
sx=cx+xx*x+yx*y,sy=cy+xy*x+yy*y);}},




onClose:function(sx,sy,ex,ey){
this.onLine(sx,sy,ex,ey);}});
});
__d('art/core/transform.js',function(global, require, module, exports) {  var Class=require('art/core/class.js');

function Transform(xx,yx,xy,yy,x,y){
if(xx&&typeof xx=='object'){
yx=xx.yx;yy=xx.yy;y=xx.y;
xy=xx.xy;x=xx.x;xx=xx.xx;}

this.xx=xx==null?1:xx;
this.yx=yx||0;
this.xy=xy||0;
this.yy=yy==null?1:yy;
this.x=(x==null?this.x:x)||0;
this.y=(y==null?this.y:y)||0;
this._transform();
return this;}
;

module.exports=Class({

initialize:Transform,

_transform:function(){},

xx:1,yx:0,x:0,
xy:0,yy:1,y:0,

transform:function(xx,yx,xy,yy,x,y){
var m=this;
if(xx&&typeof xx=='object'){
yx=xx.yx;yy=xx.yy;y=xx.y;
xy=xx.xy;x=xx.x;xx=xx.xx;}

if(!x)x=0;
if(!y)y=0;
return this.transformTo(
m.xx*xx+m.xy*yx,
m.yx*xx+m.yy*yx,
m.xx*xy+m.xy*yy,
m.yx*xy+m.yy*yy,
m.xx*x+m.xy*y+m.x,
m.yx*x+m.yy*y+m.y);},



transformTo:Transform,

translate:function(x,y){
return this.transform(1,0,0,1,x,y);},


move:function(x,y){
this.x+=x||0;
this.y+=y||0;
this._transform();
return this;},


scale:function(x,y){
if(y==null)y=x;
return this.transform(x,0,0,y,0,0);},


rotate:function(deg,x,y){
if(x==null||y==null){
x=(this.left||0)+(this.width||0)/2;
y=(this.top||0)+(this.height||0)/2;}


var rad=deg*Math.PI/180,sin=Math.sin(rad),cos=Math.cos(rad);

this.transform(1,0,0,1,x,y);
var m=this;

return this.transformTo(
cos*m.xx-sin*m.yx,
sin*m.xx+cos*m.yx,
cos*m.xy-sin*m.yy,
sin*m.xy+cos*m.yy,
m.x,
m.y).
transform(1,0,0,1,-x,-y);},


moveTo:function(x,y){
var m=this;
return this.transformTo(m.xx,m.yx,m.xy,m.yy,x,y);},


rotateTo:function(deg,x,y){
var m=this;
var flip=m.yx/m.xx>m.yy/m.xy?-1:1;
if(m.xx<0?m.xy>=0:m.xy<0)flip=-flip;
return this.rotate(deg-Math.atan2(flip*m.yx,flip*m.xx)*180/Math.PI,x,y);},


scaleTo:function(x,y){

var m=this;

var h=Math.sqrt(m.xx*m.xx+m.yx*m.yx);
m.xx/=h;m.yx/=h;

h=Math.sqrt(m.yy*m.yy+m.xy*m.xy);
m.yy/=h;m.xy/=h;

return this.scale(x,y);},


resizeTo:function(width,height){
var w=this.width,h=this.height;
if(!w||!h)return this;
return this.scaleTo(width/w,height/h);},
















inversePoint:function(x,y){
var a=this.xx,b=this.yx,
c=this.xy,d=this.yy,
e=this.x,f=this.y;
var det=b*c-a*d;
if(det==0)return null;
return {
x:(d*(e-x)+c*(y-f))/det,
y:(a*(f-y)+b*(x-e))/det};},



point:function(x,y){
var m=this;
return {
x:m.xx*x+m.xy*y+m.x,
y:m.yx*x+m.yy*y+m.y};}});
});
__d('DatePickerIOS',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummyDatePickerIOS=React.createClass({displayName:'DummyDatePickerIOS',
render:function(){
return (
React.createElement(View,{style:[styles.dummyDatePickerIOS,this.props.style]},
React.createElement(Text,{style:styles.datePickerText},'DatePickerIOS is not supported on this platform!')));}});





var styles=StyleSheet.create({
dummyDatePickerIOS:{
height:100,
width:300,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center',
margin:10},

datePickerText:{
color:'#333333',
margin:20}});



module.exports=DummyDatePickerIOS;
});
__d('Text',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true,
allowFontScaling:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text',
propTypes:{





numberOfLines:React.PropTypes.number,





onLayout:React.PropTypes.func,



onPress:React.PropTypes.func,





suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,



allowFontScaling:React.PropTypes.bool},

getDefaultProps:function(){
return {
accessible:true,
allowFontScaling:true};},


getInitialState:function(){
return merge(Touchable.Mixin.touchableGetInitialState(),{
isHighlighted:false});},


mixins:[NativeMethodsMixin],
viewConfig:viewConfig,
getChildContext:function(){
return {isInAParentText:true};},

childContextTypes:{
isInAParentText:React.PropTypes.bool},

contextTypes:{
isInAParentText:React.PropTypes.bool},




_handlers:null,




touchableHandleActivePressIn:null,
touchableHandleActivePressOut:null,
touchableHandlePress:null,
touchableGetPressRectOffset:null,
render:function(){var _this=this;
var newProps=this.props;
if(this.props.onStartShouldSetResponder||this.props.onPress){
if(!this._handlers){
this._handlers={
onStartShouldSetResponder:function(){
var shouldSetFromProps=_this.props.onStartShouldSetResponder&&
_this.props.onStartShouldSetResponder();
var setResponder=shouldSetFromProps||!!_this.props.onPress;
if(setResponder&&!_this.touchableHandleActivePressIn){


for(var key in Touchable.Mixin){
if(typeof Touchable.Mixin[key]==='function'){
_this[key]=Touchable.Mixin[key].bind(_this);}}


_this.touchableHandleActivePressIn=function(){
if(_this.props.suppressHighlighting||!_this.props.onPress){
return;}

_this.setState({
isHighlighted:true});};



_this.touchableHandleActivePressOut=function(){
if(_this.props.suppressHighlighting||!_this.props.onPress){
return;}

_this.setState({
isHighlighted:false});};



_this.touchableHandlePress=function(){
_this.props.onPress&&_this.props.onPress();};


_this.touchableGetPressRectOffset=function(){
return PRESS_RECT_OFFSET;};}


return setResponder;},

onResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant&&
this.props.onResponderGrant.apply(this,arguments);}.
bind(this),
onResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove&&
this.props.onResponderMove.apply(this,arguments);}.
bind(this),
onResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease&&
this.props.onResponderRelease.apply(this,arguments);}.
bind(this),
onResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate&&
this.props.onResponderTerminate.apply(this,arguments);}.
bind(this),
onResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination&&this.props.onResponderTerminationRequest){
allowTermination=this.props.onResponderTerminationRequest.apply(this,arguments);}

return allowTermination;}.
bind(this)};}


newProps=babelHelpers.extends({},
this.props,
this._handlers,{
isHighlighted:this.state.isHighlighted});}


if(this.context.isInAParentText){
return React.createElement(RCTVirtualText,newProps);}else 
{
return React.createElement(RCTText,newProps);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS==='android'){
RCTVirtualText=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports=Text;
});
__d('Touchable',function(global, require, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD-HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={



componentWillUnmount:function(){
this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);
this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);
this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);},









touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout=null;

this.state.touchable.touchState=States.NOT_RESPONDER;
this.state.touchable.responderID=dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS!==undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS=isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS!==0){
this.touchableDelayTimeout=setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS!==undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS=isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout=setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS+delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState===States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():{
left:PRESS_EXPAND_PX,
right:PRESS_EXPAND_PX,
top:PRESS_EXPAND_PX,
bottom:PRESS_EXPAND_PX};


var pressExpandLeft=pressRectOffset.left;
var pressExpandTop=pressRectOffset.top;
var pressExpandRight=pressRectOffset.right;
var pressExpandBottom=pressRectOffset.bottom;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch&&touch.pageX;
var pageY=touch&&touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance>LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX>positionOnActivate.left-pressExpandLeft&&
pageY>positionOnActivate.top-pressExpandTop&&
pageX<
positionOnActivate.left+
dimensionsOnActivate.width+
pressExpandRight&&
pageY<
positionOnActivate.top+
dimensionsOnActivate.height+
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);
var curState=this.state.touchable.touchState;
if(curState===States.RESPONDER_INACTIVE_PRESS_IN){

this._cancelLongPressDelayTimeout();}}else 

{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate&&
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate&&
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate=Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate=BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout=null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout=null;
var curState=this.state.touchable.touchState;
if(curState!==States.RESPONDER_ACTIVE_PRESS_IN&&
curState!==States.RESPONDER_ACTIVE_LONG_PRESS_IN){
console.error('Attempted to transition from state `'+curState+'` to `'+
States.RESPONDER_ACTIVE_LONG_PRESS_IN+'`, which is not supported. This is '+
'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');}else 
{
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);}},











_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
var nextState=Transitions[curState]&&Transitions[curState][signal];
if(!nextState){
throw new Error(
'Unrecognized signal `'+signal+'` or state `'+curState+
'` for Touchable responder `'+this.state.touchable.responderID+'`');}


if(nextState===States.ERROR){
throw new Error(
'Touchable cannot transition from `'+curState+'` to `'+signal+
'` for responder `'+this.state.touchable.responderID+'`');}


if(curState!==nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState=nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout=null;},


_isHighlight:function(state){
return state===States.RESPONDER_ACTIVE_PRESS_IN||
state===States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch&&touch.pageX;
var pageY=touch&&touch.pageY;
this.pressInLocation={pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX-bX;
var deltaY=aY-bY;
return Math.sqrt(deltaX*deltaX+deltaY*deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal===Signals.RESPONDER_TERMINATED||
signal===Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState]&&IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState]&&signal===Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress&&this.touchableHandleLongPress(e);}


if(newIsHighlight&&!curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn&&this.touchableHandleActivePressIn(e);}else 
if(!newIsHighlight&&curIsHighlight&&this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS&&this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout=this.setTimeout(function(){
this.touchableHandleActivePressOut(e);},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut(e);}}



if(IsPressingIn[curState]&&signal===Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState]&&(
!hasLongPressHandler||
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState]||pressIsLongButStillCallOnPress;
if(shouldInvokePress&&this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout=null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports=Touchable;
});
__d('BoundingDimensions',function(global, require, module, exports) {  'use strict';





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width=width;
this.height=height;}


BoundingDimensions.prototype.destructor=function(){
this.width=null;
this.height=null;};






BoundingDimensions.getPooledFromElement=function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports=BoundingDimensions;
});
__d('Position',function(global, require, module, exports) {  'use strict';





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left=left;
this.top=top;}


Position.prototype.destructor=function(){
this.left=null;
this.top=null;};


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports=Position;
});
__d('TouchEventUtils',function(global, require, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches&&touches.length>0;
var hasChangedTouches=changedTouches&&changedTouches.length>0;

return !hasTouches&&hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports=TouchEventUtils;
});
__d('queryLayoutByID',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var UIManager=require('UIManager');
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

UIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports=queryLayoutByID;
});
__d('DrawerLayoutAndroid',function(global, require, module, exports) {  'use strict';











var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactPropTypes=require('ReactPropTypes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var UIManager=require('UIManager');
var View=require('View');

var DrawerConsts=UIManager.AndroidDrawerLayout.Constants;

var dismissKeyboard=require('dismissKeyboard');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');

var RK_DRAWER_REF='drawerlayout';
var INNERVIEW_REF='innerView';

var DrawerLayoutValidAttributes={
drawerWidth:true,
drawerPosition:true};


var DRAWER_STATES=[
'Idle',
'Dragging',
'Settling'];

































var DrawerLayoutAndroid=React.createClass({displayName:'DrawerLayoutAndroid',
statics:{
positions:DrawerConsts.DrawerPosition},


propTypes:babelHelpers.extends({},
View.propTypes,{





keyboardDismissMode:ReactPropTypes.oneOf([
'none',
'on-drag']),




drawerPosition:ReactPropTypes.oneOf([
DrawerConsts.DrawerPosition.Left,
DrawerConsts.DrawerPosition.Right]),





drawerWidth:ReactPropTypes.number,



onDrawerSlide:ReactPropTypes.func,







onDrawerStateChanged:ReactPropTypes.func,



onDrawerOpen:ReactPropTypes.func,



onDrawerClose:ReactPropTypes.func,



renderNavigationView:ReactPropTypes.func.isRequired}),


mixins:[NativeMethodsMixin],

getInnerViewNode:function(){
return this.refs[INNERVIEW_REF].getInnerViewNode();},


render:function(){
var drawerViewWrapper=
React.createElement(View,{style:[styles.drawerSubview,{width:this.props.drawerWidth}],collapsable:false},
this.props.renderNavigationView());

var childrenWrapper=
React.createElement(View,{ref:INNERVIEW_REF,style:styles.mainSubview,collapsable:false},
this.props.children);

return (
React.createElement(AndroidDrawerLayout,babelHelpers.extends({},
this.props,{
ref:RK_DRAWER_REF,
drawerWidth:this.props.drawerWidth,
drawerPosition:this.props.drawerPosition,
style:styles.base,
onDrawerSlide:this._onDrawerSlide,
onDrawerOpen:this._onDrawerOpen,
onDrawerClose:this._onDrawerClose,
onDrawerStateChanged:this._onDrawerStateChanged}),
childrenWrapper,
drawerViewWrapper));},




_onDrawerSlide:function(event){
if(this.props.onDrawerSlide){
this.props.onDrawerSlide(event);}

if(this.props.keyboardDismissMode==='on-drag'){
dismissKeyboard();}},



_onDrawerOpen:function(){
if(this.props.onDrawerOpen){
this.props.onDrawerOpen();}},



_onDrawerClose:function(){
if(this.props.onDrawerClose){
this.props.onDrawerClose();}},



_onDrawerStateChanged:function(event){
if(this.props.onDrawerStateChanged){
this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);}},



openDrawer:function(){
UIManager.dispatchViewManagerCommand(
this._getDrawerLayoutHandle(),
UIManager.AndroidDrawerLayout.Commands.openDrawer,
null);},



closeDrawer:function(){
UIManager.dispatchViewManagerCommand(
this._getDrawerLayoutHandle(),
UIManager.AndroidDrawerLayout.Commands.closeDrawer,
null);},



_getDrawerLayoutHandle:function(){
return React.findNodeHandle(this.refs[RK_DRAWER_REF]);}});



var styles=StyleSheet.create({
base:{
flex:1},

mainSubview:{
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

drawerSubview:{
position:'absolute',
top:0,
bottom:0}});




var AndroidDrawerLayout=requireNativeComponent('AndroidDrawerLayout',DrawerLayoutAndroid);

module.exports=DrawerLayoutAndroid;
});
__d('dismissKeyboard',function(global, require, module, exports) {  'use strict';








var TextInputState=require('TextInputState');

function dismissKeyboard(){
TextInputState.blurTextInput(TextInputState.currentlyFocusedField());}


module.exports=dismissKeyboard;
});
__d('Image',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
























var ImageViewAttributes=merge(ReactNativeViewAttributes.UIView,{
src:true,
loadingIndicatorSrc:true,
resizeMode:true,
progressiveRenderingEnabled:true,
fadeDuration:true,
shouldNotifyLoadEvents:true});


var Image=React.createClass({displayName:'Image',
propTypes:babelHelpers.extends({},
View.propTypes,{
style:StyleSheetPropType(ImageStylePropTypes),





source:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]).
isRequired,





loadingIndicatorSource:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]),

progressiveRenderingEnabled:PropTypes.bool,
fadeDuration:PropTypes.number,



onLoadStart:PropTypes.func,



onLoad:PropTypes.func,



onLoadEnd:PropTypes.func,



testID:PropTypes.string}),


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],






viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RKView},


_updateViewConfig:function(props){
if(props.children){
this.viewConfig={
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RKView};}else 

{
this.viewConfig={
uiViewClassName:'RCTImageView',
validAttributes:ImageViewAttributes};}},




componentWillMount:function(){
this._updateViewConfig(this.props);},


componentWillReceiveProps:function(nextProps){
this._updateViewConfig(nextProps);},


contextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var source=resolveAssetSource(this.props.source);
var loadingIndicatorSource=resolveAssetSource(this.props.loadingIndicatorSource);




if(source&&source.uri===''){
console.warn('source.uri should not be an empty string');}


if(source&&source.uri){var 
width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]);var _props=
this.props;var onLoadStart=_props.onLoadStart;var onLoad=_props.onLoad;var onLoadEnd=_props.onLoadEnd;

var nativeProps=merge(this.props,{
style:style,
shouldNotifyLoadEvents:!!(onLoadStart||onLoad||onLoadEnd),
src:source.uri,
loadingIndicatorSrc:loadingIndicatorSource?loadingIndicatorSource.uri:null});


if(nativeProps.children){

var imageProps=merge(nativeProps,{
style:styles.absoluteImage,
children:undefined});

return (
React.createElement(View,{style:nativeProps.style},
React.createElement(RKImage,imageProps),
this.props.children));}else 


{
if(this.context.isInAParentText){
return React.createElement(RCTTextInlineImage,nativeProps);}else 
{
return React.createElement(RKImage,nativeProps);}}}



return null;}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'},

absoluteImage:{
left:0,
right:0,
top:0,
bottom:0,
position:'absolute'}});



var cfg={
nativeOnly:{
src:true,
loadingIndicatorSrc:true,
defaultImageSrc:true,
imageTag:true,
progressHandlerRegistered:true,
shouldNotifyLoadEvents:true}};


var RKImage=requireNativeComponent('RCTImageView',Image,cfg);
var RCTTextInlineImage=requireNativeComponent('RCTTextInlineImage',Image,cfg);

module.exports=Image;
});
__d('ListView',function(global, require, module, exports) {  'use strict';



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView',
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:babelHelpers.extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,








renderSeparator:PropTypes.func,











renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,






renderScrollComponent:React.PropTypes.func.isRequired,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentLength:this.scrollProperties.contentLength,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF]&&
this.refs[SCROLLVIEW_REF].getScrollResponder&&
this.refs[SCROLLVIEW_REF].getScrollResponder();},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
renderScrollComponent:function(props){return React.createElement(ScrollView,props);},
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



getInnerViewNode:function(){
return this.refs[SCROLLVIEW_REF].getInnerViewNode();},


componentWillMount:function(){

this.scrollProperties={
visibleLength:null,
contentLength:null,
offset:0};

this._childFrames=[];
this._visibleRows={};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource!==nextProps.dataSource){
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount+props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0,
curRenderedRowsCount:rowsToRender};});}},





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader&&this.props.renderHeader();
var footer=this.props.renderFooter&&this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length===0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount>=this.state.prevRenderedRowsCount&&
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_'+sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx<rowIDs.length;rowIdx++){
var rowID=rowIDs[rowIdx];
var comboID=sectionID+'_'+rowID;
var shouldUpdateRow=rowCount>=this.state.prevRenderedRowsCount&&
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_'+comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator&&(
rowIdx!==rowIDs.length-1||sectionIdx===allRowIDs.length-1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID===sectionID&&(
this.state.highlightedRow.rowID===rowID||
this.state.highlightedRow.rowID===rowIDs[rowIdx+1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount===this.state.curRenderedRowsCount){
break;}}


if(rowCount>=this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=babelHelpers.objectWithoutProperties(_props,['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle=DEFAULT_SCROLL_CALLBACK_THROTTLE;}

if(props.removeClippedSubviews===undefined){
props.removeClippedSubviews=true;}

babelHelpers.extends(props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices,



onKeyboardWillShow:undefined,
onKeyboardWillHide:undefined,
onKeyboardDidShow:undefined,
onKeyboardDidHide:undefined});




return React.cloneElement(renderScrollComponent(props),{
ref:SCROLLVIEW_REF,
onContentSizeChange:this._onContentSizeChange,
onLayout:this._onLayout},
header,bodyComponents,footer);},






_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent||!scrollComponent.getInnerViewNode){
return;}




RCTScrollViewManager&&RCTScrollViewManager.calculateChildFrames&&
RCTScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent),
this._updateChildFrames);},



_onContentSizeChange:function(width,height){
this.scrollProperties.contentLength=!this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_onLayout:function(event){var _event$nativeEvent$la=
event.nativeEvent.layout;var width=_event$nativeEvent$la.width;var height=_event$nativeEvent$la.height;
this.scrollProperties.visibleLength=!this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_setScrollVisibleLength:function(left,top,width,height){
this.scrollProperties.visibleLength=!this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);},


_maybeCallOnEndReached:function(event){
if(this.props.onEndReached&&
this.scrollProperties.contentLength!==this._sentEndForContentLength&&
this._getDistanceFromEnd(this.scrollProperties)<this.props.onEndReachedThreshold&&
this.state.curRenderedRowsCount===this.props.dataSource.getRowCount()){
this._sentEndForContentLength=this.scrollProperties.contentLength;
this.props.onEndReached(event);
return true;}

return false;},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentLength===null||
this.scrollProperties.visibleLength===null||
this.state.curRenderedRowsCount===this.props.dataSource.getRowCount()){
this._maybeCallOnEndReached();
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd<this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this3=this;
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount+props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender};},

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});},




_getDistanceFromEnd:function(scrollProperties){
var maxLength=Math.max(
scrollProperties.contentLength,
scrollProperties.visibleLength);

return maxLength-scrollProperties.visibleLength-scrollProperties.offset;},


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index]=merge(newFrame);});}


var isVertical=!this.props.horizontal;
var dataSource=this.props.dataSource;
var visibleMin=this.scrollProperties.offset;
var visibleMax=visibleMin+this.scrollProperties.visibleLength;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader&&this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length===0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection={};}

for(var rowIdx=0;rowIdx<rowIDs.length;rowIdx++){
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var min=isVertical?frame.y:frame.x;
var max=min+(isVertical?frame.height:frame.width);
if(min>visibleMax||max<visibleMin){
if(rowVisible){
visibilityChanged=true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID]={};}

changedRows[sectionID][rowID]=false;}}else 

if(!rowVisible){
visibilityChanged=true;
visibleSection[rowID]=true;
if(!changedRows[sectionID]){
changedRows[sectionID]={};}

changedRows[sectionID][rowID]=true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID]=visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged&&this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
var isVertical=!this.props.horizontal;
this.scrollProperties.visibleLength=e.nativeEvent.layoutMeasurement[
isVertical?'height':'width'];

this.scrollProperties.contentLength=e.nativeEvent.contentSize[
isVertical?'height':'width'];

this.scrollProperties.offset=e.nativeEvent.contentOffset[
isVertical?'y':'x'];

this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
if(!this._maybeCallOnEndReached(e)){
this._renderMoreRowsIfNeeded();}


if(this.props.onEndReached&&
this._getDistanceFromEnd(this.scrollProperties)>this.props.onEndReachedThreshold){

this._sentEndForContentLength=null;}


this.props.onScroll&&this.props.onScroll(e);}});



module.exports=ListView;
});
__d('ListViewDataSource',function(global, require, module, exports) {  'use strict';





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=function(){


























function ListViewDataSource(params){babelHelpers.classCallCheck(this,ListViewDataSource);
invariant(
params&&typeof params.rowHasChanged==='function',
'Must provide a rowHasChanged function.');

this._rowHasChanged=params.rowHasChanged;
this._getRowData=params.getRowData||defaultGetRowData;
this._sectionHeaderHasChanged=params.sectionHeaderHasChanged;
this._getSectionHeaderData=
params.getSectionHeaderData||defaultGetSectionHeaderData;

this._dataBlob=null;
this._dirtyRows=[];
this._dirtySections=[];
this._cachedRowCount=0;



this.rowIdentities=[];
this.sectionIdentities=[];}babelHelpers.createClass(ListViewDataSource,[{key:'cloneWithRows',value:function cloneWithRows(



















dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged=function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:function cloneWithRowsAndSections(














dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged==='function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob=dataBlob;
if(sectionIdentities){
newSource.sectionIdentities=sectionIdentities;}else 
{
newSource.sectionIdentities=Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities=rowIdentities;}else 
{
newSource.rowIdentities=[];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount=countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:function getRowCount()


{
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:function rowShouldUpdate(





sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate!==undefined,
'missing dirtyBit for section, row: '+sectionIndex+', '+rowIndex);
return needsUpdate;}},{key:'getRowData',value:function getRowData(





sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID!==undefined&&rowID!==undefined,
'rendering invalid section, row: '+sectionIndex+', '+rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:function getRowIDForFlatIndex(






index){
var accessIndex=index;
for(var ii=0;ii<this.sectionIdentities.length;ii++){
if(accessIndex>=this.rowIdentities[ii].length){
accessIndex-=this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:function getSectionIDForFlatIndex(






index){
var accessIndex=index;
for(var ii=0;ii<this.sectionIdentities.length;ii++){
if(accessIndex>=this.rowIdentities[ii].length){
accessIndex-=this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:function getSectionLengths()





{
var results=[];
for(var ii=0;ii<this.sectionIdentities.length;ii++){
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:function sectionHeaderShouldUpdate(





sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate!==undefined,
'missing dirtyBit for section: '+sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:function getSectionHeaderData(





sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID!==undefined,
'renderSection called on invalid section: '+sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:function _calculateDirtyArrays(






















prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii<prevRowIDs.length;ii++){
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: '+sectionID);

prevRowsHash[sectionID]=keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections=[];
this._dirtyRows=[];

var dirty;
for(var sIndex=0;sIndex<this.sectionIdentities.length;sIndex++){
var sectionID=this.sectionIdentities[sIndex];

dirty=!prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty&&sectionHeaderHasChanged){
dirty=sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex]=[];
for(var rIndex=0;rIndex<this.rowIdentities[sIndex].length;rIndex++){
var rowID=this.rowIdentities[sIndex][rIndex];

dirty=
!prevSectionsHash[sectionID]||
!prevRowsHash[sectionID][rowID]||
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;}();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
var rowIDs=allRowIDs[sectionIdx];
totalRows+=rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii<arr.length;ii++){
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: '+key);
result[key]=true;}

return result;}



module.exports=ListViewDataSource;
});
__d('isEmpty',function(global, require, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length===0;}else 
if(typeof obj==='object'){
for(var i in obj){
return false;}

return true;}else 
{
return !obj;}}



module.exports=isEmpty;
});
__d('ScrollView',function(global, require, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var deepDiffer=require('deepDiffer');
var dismissKeyboard=require('dismissKeyboard');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';
















var ScrollView=React.createClass({displayName:'ScrollView',
propTypes:babelHelpers.extends({},
View.propTypes,{






automaticallyAdjustContentInsets:PropTypes.bool,





contentInset:EdgeInsetsPropType,





contentOffset:PointPropType,







bounces:PropTypes.bool,






bouncesZoom:PropTypes.bool,






alwaysBounceHorizontal:PropTypes.bool,






alwaysBounceVertical:PropTypes.bool,







centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),







decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,





directionalLockEnabled:PropTypes.bool,





canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,




maximumZoomScale:PropTypes.number,




minimumZoomScale:PropTypes.number,




onScroll:PropTypes.func,




onScrollAnimationEnd:PropTypes.func,





onContentSizeChange:PropTypes.func,






pagingEnabled:PropTypes.bool,





scrollEnabled:PropTypes.bool,









scrollEventThrottle:PropTypes.number,






scrollIndicatorInsets:EdgeInsetsPropType,





scrollsToTop:PropTypes.bool,



showsHorizontalScrollIndicator:PropTypes.bool,



showsVerticalScrollIndicator:PropTypes.bool,








stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),
style:StyleSheetPropType(ViewStylePropTypes),







snapToInterval:PropTypes.number,








snapToAlignment:PropTypes.oneOf([
'start',
'center',
'end']),







removeClippedSubviews:PropTypes.bool,




zoomScale:PropTypes.number,













onRefreshStart:PropTypes.func}),



mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},


endRefreshing:function(){
RCTScrollViewManager.endRefreshing(
React.findNodeHandle(this));},









getScrollResponder:function(){
return this;},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollTo(destX||0,destY||0);},


scrollWithoutAnimationTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollWithouthAnimationTo(
destX||0,
destY||0);},



handleScroll:function(e){
if(__DEV__){
if(this.props.onScroll&&!this.props.scrollEventThrottle){
console.log(
'You specified `onScroll` on a <ScrollView> but not '+
'`scrollEventThrottle`. You will only receive one event. '+
'Using `16` you get all the events but be aware that it may '+
'cause frame drops, use a bigger number if you don\'t need as '+
'much precision.');}}



if(Platform.OS==='android'){
if(this.props.keyboardDismissMode==='on-drag'){
dismissKeyboard();}}


this.scrollResponderHandleScroll(e);},


_handleContentOnLayout:function(e){var _e$nativeEvent$layout=
e.nativeEvent.layout;var width=_e$nativeEvent$layout.width;var height=_e$nativeEvent$layout.height;
this.props.onContentSizeChange&&this.props.onContentSizeChange(width,height);},


render:function(){
var contentContainerStyle=[
this.props.horizontal&&styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__&&this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style&&style[prop]!==undefined;});
invariant(
childLayoutProps.length===0,
'ScrollView child layout ('+JSON.stringify(childLayoutProps)+
') must by applied through the contentContainerStyle prop.');}



var contentSizeChangeProps={};
if(this.props.onContentSizeChange){
contentSizeChangeProps={
onLayout:this._handleContentOnLayout};}



var contentContainer=
React.createElement(View,babelHelpers.extends({},
contentSizeChangeProps,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews,
collapsable:false}),
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal!==undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical!==undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=babelHelpers.extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.handleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var onRefreshStart=this.props.onRefreshStart;


props.onRefreshStart=onRefreshStart?
function(){onRefreshStart&&onRefreshStart(this.endRefreshing);}.bind(this):
null;

var ScrollViewClass;
if(Platform.OS==='ios'){
ScrollViewClass=RCTScrollView;}else 
if(Platform.OS==='android'){
if(this.props.horizontal){
ScrollViewClass=AndroidHorizontalScrollView;}else 
{
ScrollViewClass=AndroidScrollView;}}


invariant(
ScrollViewClass!==undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,babelHelpers.extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=babelHelpers.extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
snapToInterval:true,
snapToAlignment:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS==='android'){
var AndroidScrollView=requireNativeComponent('RCTScrollView',ScrollView);
var AndroidHorizontalScrollView=requireNativeComponent(
'AndroidHorizontalScrollView',
ScrollView);}else 

if(Platform.OS==='ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports=ScrollView;
});
__d('EdgeInsetsPropType',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports=EdgeInsetsPropType;
});
__d('PointPropType',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports=PointPropType;
});
__d('ScrollResponder',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');var _require=

require('NativeModules');var UIManager=_require.UIManager;var ScrollViewManager=_require.ScrollViewManager;

var invariant=require('invariant');
var warning=require('warning');

















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps&&
currentlyFocusedTextInput!=null&&
e.target!==currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching=nativeEvent.touches.length!==0;
this.props.onTouchEnd&&this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease&&this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps&&
currentlyFocusedTextInput!=null&&
e.target!==currentlyFocusedTextInput&&
!this.state.observedScrollSinceBecomingResponder&&
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed&&
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder=true;
this.props.onScroll&&this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder=false;
this.props.onResponderGrant&&this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating=this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag&&this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag&&this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime=Date.now();
this.props.onMomentumScrollBegin&&this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime=Date.now();
this.props.onMomentumScrollEnd&&this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching=true;
this.props.onTouchStart&&this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove&&this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now-this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd<IS_ANIMATING_TOUCH_START_THRESHOLD_MS||
this.state.lastMomentumScrollEndTime<this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.RCTScrollView.Commands.scrollTo,
[Math.round(offsetX),Math.round(offsetY)]);}else 

{
ScrollViewManager.scrollTo(
React.findNodeHandle(this),
{x:offsetX,y:offsetY});}},








scrollResponderScrollWithouthAnimationTo:function(offsetX,offsetY){
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.RCTScrollView.Commands.scrollWithoutAnimationTo,
[offsetX,offsetY]);}else 

{
ScrollViewManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
{x:offsetX,y:offsetY});}},








scrollResponderZoomTo:function(rect){
if(Platform.OS==='android'){
invariant('zoomToRect is not implemented');}else 
{
ScrollViewManager.zoomToRect(React.findNodeHandle(this),rect);}},













scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset=additionalOffset||0;
this.preventNegativeScrollOffset=!!preventNegativeScrollOffset;
UIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this.getInnerViewNode()),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
var keyboardScreenY=Dimensions.get('window').height;
if(this.keyboardWillOpenTo){
keyboardScreenY=this.keyboardWillOpenTo.endCoordinates.screenY;}

var scrollOffsetY=top-keyboardScreenY+height+this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY=Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);

this.additionalOffset=0;
this.preventNegativeScrollOffset=false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo=null;
this.additionalScrollOffset=0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo=e;
this.props.onKeyboardWillShow&&this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo=null;
this.props.onKeyboardWillHide&&this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(e){


if(e){
this.keyboardWillOpenTo=e;}

this.props.onKeyboardDidShow&&this.props.onKeyboardDidShow(e);},


scrollResponderKeyboardDidHide:function(e){
this.keyboardWillOpenTo=null;
this.props.onKeyboardDidHide&&this.props.onKeyboardDidHide(e);}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports=ScrollResponder;
});
__d('Subscribable',function(global, require, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin={

componentWillMount:function(){
this._subscribableSubscriptions=[];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions=null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports=Subscribable;
});
__d('StaticRenderer',function(global, require, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer',
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports=StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window==='undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter(function(){
_clearer.call(this,id);
callback.apply(this,arguments);}.
bind(this),delta);

if(!this[array]){
this[array]=[id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index!==-1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts]&&this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts]=null;
this[_intervals]&&this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals]=null;
this[_immediates]&&this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates]=null;
this[_rafs]&&this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs]=null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports=TimerMixin;
});
__d('MapView',function(global, require, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var RCTMap=require('UIManager').RCTMap;
var RCTMapConstants=RCTMap&&RCTMap.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var processColor=require('processColor');
var resolveAssetSource=require('resolveAssetSource');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView',
mixins:[NativeMethodsMixin],

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id=encodeURIComponent(JSON.stringify(annotation));}

return annotation;});


this.setState({
annotations:newAnnotations});},



checkOverlayIds:function(overlays){

var newOverlays=overlays.map(function(overlay){
if(!overlay.id){

overlay.id=encodeURIComponent(JSON.stringify(overlay));}

return overlay;});


this.setState({
overlays:newOverlays});},



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}

if(this.props.overlays){
this.checkOverlayIds(this.props.overlays);}},



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}

if(nextProps.overlays){
this.checkOverlayIds(nextProps.overlays);}},



propTypes:babelHelpers.extends({},
View.propTypes,{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,






showsPointsOfInterest:React.PropTypes.bool,






showsCompass:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,








mapType:React.PropTypes.oneOf([
'standard',
'satellite',
'hybrid']),








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




animateDrop:React.PropTypes.bool,




title:React.PropTypes.string,
subtitle:React.PropTypes.string,




hasLeftCallout:React.PropTypes.bool,
hasRightCallout:React.PropTypes.bool,




onLeftCalloutPress:React.PropTypes.func,
onRightCalloutPress:React.PropTypes.func,











tintColor:React.PropTypes.string,





image:Image.propTypes.source,




id:React.PropTypes.string})),





overlays:React.PropTypes.arrayOf(React.PropTypes.shape({



coordinates:React.PropTypes.arrayOf(React.PropTypes.shape({
latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired})),





lineWidth:React.PropTypes.number,
strokeColor:React.PropTypes.string,
fillColor:React.PropTypes.string,




id:React.PropTypes.string})),





maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func,




onAnnotationPress:React.PropTypes.func,




active:React.PropTypes.bool}),


render:function(){var _this=this;var _props=

this.props;var annotations=_props.annotations;var overlays=_props.overlays;
annotations=annotations&&annotations.map(function(annotation){var 
tintColor=annotation.tintColor;var image=annotation.image;
return babelHelpers.extends({},
annotation,{
tintColor:tintColor&&processColor(tintColor),
image:image&&resolveAssetSource(image)});});


overlays=overlays&&overlays.map(function(overlay){var 
strokeColor=overlay.strokeColor;var fillColor=overlay.fillColor;
return babelHelpers.extends({},
overlay,{
strokeColor:strokeColor&&processColor(strokeColor),
fillColor:fillColor&&processColor(fillColor)});});




if(annotations){
var onPress=function(event){
if(!annotations){
return;}

if(event.nativeEvent.action==='annotation-click'){
_this.props.onAnnotationPress&&
_this.props.onAnnotationPress(event.nativeEvent.annotation);}else 
if(event.nativeEvent.action==='callout-click'){

for(var i=0,l=annotations.length;i<l;i++){
var annotation=annotations[i];
if(annotation.id===event.nativeEvent.annotationId){

if(event.nativeEvent.side==='left'){
annotation.onLeftCalloutPress&&
annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side==='right'){
annotation.onRightCalloutPress&&
annotation.onRightCalloutPress(event.nativeEvent);}

break;}}}};}







if(this.props.onRegionChange||this.props.onRegionChangeComplete){
var onChange=function(event){
if(event.nativeEvent.continuous){
_this.props.onRegionChange&&
_this.props.onRegionChange(event.nativeEvent.region);}else 
{
_this.props.onRegionChangeComplete&&
_this.props.onRegionChangeComplete(event.nativeEvent.region);}};}




return (
React.createElement(RCTMap,babelHelpers.extends({},
this.props,{
annotations:annotations,
overlays:overlays,
onPress:onPress,
onChange:onChange})));}});












var PinColors=RCTMapConstants&&RCTMapConstants.PinColors;
MapView.PinColors=PinColors&&{
RED:PinColors.RED,
GREEN:PinColors.GREEN,
PURPLE:PinColors.PURPLE};


var RCTMap=requireNativeComponent('RCTMap',MapView,{
nativeOnly:{onChange:true,onPress:true}});


module.exports=MapView;
});
__d('Modal',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var RCTModalHostView=requireNativeComponent('RCTModalHostView',null);var 
















Modal=function(_React$Component){babelHelpers.inherits(Modal,_React$Component);function Modal(){babelHelpers.classCallCheck(this,Modal);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Modal).apply(this,arguments));}babelHelpers.createClass(Modal,[{key:'render',value:function render()
{
if(this.props.visible===false){
return null;}


if(this.props.transparent){
var containerBackgroundColor={backgroundColor:'transparent'};}


return (
React.createElement(RCTModalHostView,{
animated:this.props.animated,
transparent:this.props.transparent,
onDismiss:this.props.onDismiss,
style:styles.modal},
React.createElement(View,{style:[styles.container,containerBackgroundColor]},
this.props.children)));}}]);return Modal;}(React.Component);






Modal.propTypes={
animated:PropTypes.bool,
transparent:PropTypes.bool,
visible:PropTypes.bool,
onDismiss:PropTypes.func};


Modal.defaultProps={
visible:true};


var styles=StyleSheet.create({
modal:{
position:'absolute'},

container:{
left:0,
position:'absolute',
top:0}});



module.exports=Modal;
});
__d('Navigator',function(global, require, module, exports) {  'use strict';




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
pointerEvents:'none',
style:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}


function getRouteID(route){
if(route===null||typeof route!=='object'){
return String(route);}


var key='__navigatorRouteID';

if(!route.hasOwnProperty(key)){
Object.defineProperty(route,key,{
enumerable:false,
configurable:false,
writable:false,
value:getuid()});}


return route[key];}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];





























































var Navigator=React.createClass({displayName:'Navigator',

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),







onWillFocus:PropTypes.func,








onDidFocus:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
this._navigationBarNavigator=this.props.navigationBarNavigator||this;

this._renderedSceneMap=new Map();

var routeStack=this.props.initialRouteStack||[this.props.initialRoute];
invariant(
routeStack.length>=1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length-1;
if(this.props.initialRoute){
initialRouteIndex=routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex!==-1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

routeStack:routeStack,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext',this._getNavigationContext);

this._subRouteFocus=[];
this.parentNavigator=this.props.navigator;
this._handlers={};
this.springSystem=new rebound.SpringSystem();
this.spring=this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle=_this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture=PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._interactionHandle=null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);},


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext=null;}


this.spring.destroy();

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length-1;
this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex===this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex!==null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex=this.state.presentedIndex;
this.state.presentedIndex=destIndex;
this.state.transitionCb=cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex]||
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index '+this.state.transitionFromIndex);

if(jumpSpringTo!=null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction=sceneConfig.springFriction;
this.spring.getSpringConfig().tension=sceneConfig.springTension;
this.spring.setVelocity(velocity||sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);},






_handleSpringUpdate:function(){
if(!this.isMounted()){
return;}


if(this.state.transitionFromIndex!=null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture!=null){
var presentedToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(!this.isMounted()){
return;}


if(this.spring.getCurrentValue()!==1&&this.spring.getCurrentValue()!==0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress=null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex]||this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex=null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb=null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle=null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}},



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});

var navBar=this._navBar;
if(navBar&&navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i<this.state.routeStack.length;i++){
if(i===this.state.presentedIndex||
i===this.state.transitionFromIndex||
i===gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_'+sceneIndex]&&
this.refs['scene_'+sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
pointerEvents:'auto',
style:{
top:sceneStyle.top,
bottom:sceneStyle.bottom}};


if(sceneIndex!==this.state.transitionFromIndex&&
sceneIndex!==this.state.presentedIndex){


enabledSceneNativeProps.style.opacity=0;}

this.refs['scene_'+sceneIndex]&&
this.refs['scene_'+sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex!=null){
fromIndex=this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHardwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHardwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar&&navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length-1;
for(var index=0;index<=max;index++){
this._setRenderSceneToHardwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar&&navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHardwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_'+sceneIndex];
if(viewAtIndex===null||viewAtIndex===undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures=GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(!sceneConfig){
return false;}

this._expectingGestureGrant=
this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex<=0&&(
gestureName==='pop'||gestureName==='jumpBack');
var wouldOverswipeForward=this.state.presentedIndex>=this.state.routeStack.length-1&&
gestureName==='jumpForward';
return wouldOverswipeForward||wouldOverswipeBack;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action '+gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue()===0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction==='top-to-bottom'||releaseGesture.direction==='bottom-to-top';
var isTravelInverted=releaseGesture.direction==='right-to-left'||releaseGesture.direction==='bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity=isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance=isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity=isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance=isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity)<releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance>releaseGesture.fullDistance*releaseGesture.stillCompletionRatio;
transitionVelocity=hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity<0||this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex==null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex=destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1-this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction==='pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
if(this.state.activeGesture==null){
return;}

var destIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex=destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1-this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture=gestureId;
var gesturingToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture=null;
this.state.pendingGestureProgress=null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
if(this._isMoveGestureAttached!==undefined){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant=undefined;}


var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction==='top-to-bottom'||gesture.direction==='bottom-to-top';
var isTravelInverted=gesture.direction==='right-to-left'||gesture.direction==='bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance=isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance-gestureDetectMovement)/(
gesture.fullDistance-gestureDetectMovement);
if(nextProgress<0&&gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress!=null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1/(frictionConstant+Math.abs(nextProgress)*frictionByDistance);
nextProgress*=frictionRatio;}

nextProgress=clamp(0,nextProgress,1);
if(this.state.transitionFromIndex!=null){
this.state.pendingGestureProgress=nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe==null&&_this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction==='top-to-bottom'||gesture.direction==='bottom-to-top';
var isTravelInverted=gesture.direction==='right-to-left'||gesture.direction==='bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc=-currentLoc;
travelDist=-travelDist;
oppositeAxisTravelDist=-oppositeAxisTravelDist;
edgeHitWidth=isTravelVertical?
-(SCREEN_HEIGHT-edgeHitWidth):
-(SCREEN_WIDTH-edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth==null||
currentLoc<edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist>=gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist)>Math.abs(oppositeAxisTravelDist)*gesture.directionRatio;
if(directionIsCorrect){
matchedGesture=gestureName;
return true;}else 
{
_this5._eligibleGestures=_this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture||null;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_'+index];
if(viewAtIndex===null||viewAtIndex===undefined){
return;}


var sceneConfigIndex=fromIndex<toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig=this.state.sceneConfigStack[sceneConfigIndex-1];}

var styleToUse={};
var useFn=index<fromIndex||index<toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex<toIndex?progress:1-progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar&&navBar.updateProgress&&toIndex>=0&&fromIndex>=0){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex+n;
invariant(
destIndex>=0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length-1;
invariant(
maxIndex>=destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex!==-1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex-this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex+1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length-1;
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack},
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});},



_popN:function(n){var _this7=this;
if(n===0){
return;}

invariant(
this.state.presentedIndex-n>=0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex-n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
if(this.state.transitionQueue.length){






return;}


if(this.state.presentedIndex>0){
this._popN(1);}},









replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index<0){
index+=this.state.routeStack.length;}


if(this.state.routeStack.length<=index){
return;}


var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextRouteStack[index]=route;
nextAnimationModeStack[index]=this.props.configureScene(route);

if(index===this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack},
function(){
if(index===_this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb&&cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex-1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute!==-1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex-indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length<2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex>0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){

return this.state.routeStack.slice();},


_cleanScenesPastIndex:function(index){
var newStackLength=index+1;

if(newStackLength<this.state.routeStack.length){
this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)});}},




_renderScene:function(route,i){var _this10=this;
var disabledSceneStyle=null;
var disabledScenePointerEvents='auto';
if(i!==this.state.presentedIndex){
disabledSceneStyle=styles.disabledScene;
disabledScenePointerEvents='none';}

return (
React.createElement(View,{
key:'scene_'+getRouteID(route),
ref:'scene_'+i,
onStartShouldSetResponderCapture:function(){
return _this10.state.transitionFromIndex!=null||_this10.state.transitionFromIndex!=null;},

pointerEvents:disabledScenePointerEvents,
style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
this.props.renderScene(
route,
this)));},





_renderNavigationBar:function(){var _this11=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){
_this11.props.navigationBar.ref instanceof Function&&_this11.props.navigationBar.ref(navBar);
_this11._navBar=navBar;},

navigator:this._navigationBarNavigator,
navState:this.state});},



render:function(){var _this12=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route,index){
var renderedScene;
if(_this12._renderedSceneMap.has(route)&&
index!==_this12.state.presentedIndex){
renderedScene=_this12._renderedSceneMap.get(route);}else 
{
renderedScene=_this12._renderScene(route,index);}

newRenderedSceneMap.set(route,renderedScene);
return renderedScene;});

this._renderedSceneMap=newRenderedSceneMap;
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(View,babelHelpers.extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

scenes),

this._renderNavigationBar()));},




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext=new NavigationContext();}

return this._navigationContext;}});



module.exports=Navigator;
});
__d('InteractionMixin',function(global, require, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length){
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles=this._interactionMixinHandles.filter(
function(handle){return handle!==clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports=InteractionMixin;
});
__d('NavigationContext',function(global, require, module, exports) {  'use strict';




























var NavigationEvent=require('NavigationEvent');
var NavigationEventEmitter=require('NavigationEventEmitter');
var NavigationTreeNode=require('NavigationTreeNode');

var Set=require('Set');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 




AT_TARGET=


NavigationEvent.AT_TARGET;var BUBBLING_PHASE=NavigationEvent.BUBBLING_PHASE;var CAPTURING_PHASE=NavigationEvent.CAPTURING_PHASE;



var LegacyEventTypes=new Set([
'willfocus',
'didfocus']);var 





NavigationContext=function(){







function NavigationContext(){babelHelpers.classCallCheck(this,NavigationContext);
this._bubbleEventEmitter=new NavigationEventEmitter(this);
this._captureEventEmitter=new NavigationEventEmitter(this);
this._currentRoute=null;


this.__node=new NavigationTreeNode(this);

this._emitCounter=0;
this._emitQueue=[];

this.addListener('willfocus',this._onFocus);
this.addListener('didfocus',this._onFocus);}babelHelpers.createClass(NavigationContext,[{key:'appendChild',value:function appendChild(
























childContext){
this.__node.appendChild(childContext.__node);}},{key:'addListener',value:function addListener(



eventType,
listener,
useCapture)
{
if(LegacyEventTypes.has(eventType)){
useCapture=false;}


var emitter=useCapture?
this._captureEventEmitter:
this._bubbleEventEmitter;

if(emitter){
return emitter.addListener(eventType,listener,this);}else 
{
return {remove:emptyFunction};}}},{key:'emit',value:function emit(



eventType,data,didEmitCallback){var _this=this;
if(this._emitCounter>0){


var args=Array.prototype.slice.call(arguments);
this._emitQueue.push(args);
return;}


this._emitCounter++;

if(LegacyEventTypes.has(eventType)){

this.__emit(
eventType,
data,
null,
{
defaultPrevented:false,
eventPhase:AT_TARGET,
propagationStopped:true,
target:this});}else 


{
var targets=[this];
var parentTarget=this.parent;
while(parentTarget){
targets.unshift(parentTarget);
parentTarget=parentTarget.parent;}


var propagationStopped=false;
var defaultPrevented=false;
var callback=function(event){
propagationStopped=propagationStopped||event.isPropagationStopped();
defaultPrevented=defaultPrevented||event.defaultPrevented;};



targets.some(function(currentTarget){
if(propagationStopped){
return true;}


var extraInfo={
defaultPrevented:defaultPrevented,
eventPhase:CAPTURING_PHASE,
propagationStopped:propagationStopped,
target:_this};


currentTarget.__emit(eventType,data,callback,extraInfo);},
this);


targets.reverse().some(function(currentTarget){
if(propagationStopped){
return true;}

var extraInfo={
defaultPrevented:defaultPrevented,
eventPhase:BUBBLING_PHASE,
propagationStopped:propagationStopped,
target:_this};

currentTarget.__emit(eventType,data,callback,extraInfo);},
this);}


if(didEmitCallback){
var event=NavigationEvent.pool(eventType,this,data);
propagationStopped&&event.stopPropagation();
defaultPrevented&&event.preventDefault();
didEmitCallback.call(this,event);
event.dispose();}


this._emitCounter--;
while(this._emitQueue.length){
var args=this._emitQueue.shift();
this.emit.apply(this,args);}}},{key:'dispose',value:function dispose()



{

this._bubbleEventEmitter&&this._bubbleEventEmitter.removeAllListeners();
this._captureEventEmitter&&this._captureEventEmitter.removeAllListeners();
this._bubbleEventEmitter=null;
this._captureEventEmitter=null;
this._currentRoute=null;}},{key:'__emit',value:function __emit(




eventType,
data,
didEmitCallback,
extraInfo)
{
var emitter;
switch(extraInfo.eventPhase){
case CAPTURING_PHASE:
emitter=this._captureEventEmitter;
break;

case AT_TARGET:
emitter=this._bubbleEventEmitter;
break;

case BUBBLING_PHASE:
emitter=this._bubbleEventEmitter;
break;

default:
invariant(false,'invalid event phase %s',extraInfo.eventPhase);}


if(extraInfo.target===this){

extraInfo.eventPhase=AT_TARGET;}


if(emitter){
emitter.emit(
eventType,
data,
didEmitCallback,
extraInfo);}}},{key:'_onFocus',value:function _onFocus(




event){
invariant(
event.data&&event.data.hasOwnProperty('route'),
'event type "%s" should provide route',
event.type);


this._currentRoute=event.data.route;}},{key:'parent',get:function(){var parent=this.__node.getParent();return parent?parent.getValue():null;}},{key:'top',get:function(){var result=null;var parentNode=this.__node.getParent();while(parentNode){result=parentNode.getValue();parentNode=parentNode.getParent();}return result;}},{key:'currentRoute',get:function(){return this._currentRoute;}}]);return NavigationContext;}();



module.exports=NavigationContext;
});
__d('NavigationEvent',function(global, require, module, exports) {  'use strict';




























var invariant=require('invariant');var 

NavigationEventPool=function(){


function NavigationEventPool(){babelHelpers.classCallCheck(this,NavigationEventPool);
this._list=[];}babelHelpers.createClass(NavigationEventPool,[{key:'get',value:function get(


type,currentTarget,data){
var event;
if(this._list.length>0){
event=this._list.pop();
event.constructor.call(event,type,currentTarget,data);}else 
{
event=new NavigationEvent(type,currentTarget,data);}

return event;}},{key:'put',value:function put(


event){
this._list.push(event);}}]);return NavigationEventPool;}();



var _navigationEventPool=new NavigationEventPool();var 























NavigationEvent=function(){babelHelpers.createClass(NavigationEvent,null,[{key:'pool',value:function pool(


















type,currentTarget,data){
return _navigationEventPool.get(type,currentTarget,data);}}]);


function NavigationEvent(type,currentTarget,data){babelHelpers.classCallCheck(this,NavigationEvent);
this.target=currentTarget;
this.eventPhase=NavigationEvent.NONE;

this._type=type;
this._currentTarget=currentTarget;
this._data=data;
this._defaultPrevented=false;
this._disposed=false;
this._propagationStopped=false;}babelHelpers.createClass(NavigationEvent,[{key:'preventDefault',value:function preventDefault()






















{
this._defaultPrevented=true;}},{key:'stopPropagation',value:function stopPropagation()


{
this._propagationStopped=true;}},{key:'stop',value:function stop()


{
this.preventDefault();
this.stopPropagation();}},{key:'isPropagationStopped',value:function isPropagationStopped()


{
return this._propagationStopped;}},{key:'dispose',value:function dispose()







{
invariant(!this._disposed,'NavigationEvent is already disposed');
this._disposed=true;


this.target=null;
this.eventPhase=NavigationEvent.NONE;
this._type=null;
this._currentTarget=null;
this._data=null;
this._defaultPrevented=false;


_navigationEventPool.put(this);}},{key:'type',get:function(){return this._type;}},{key:'currentTarget',get:function(){return this._currentTarget;}},{key:'data',get:function(){return this._data;}},{key:'defaultPrevented',get:function(){return this._defaultPrevented;}}]);return NavigationEvent;}();










NavigationEvent.NONE=0;


NavigationEvent.CAPTURING_PHASE=1;



NavigationEvent.AT_TARGET=2;





NavigationEvent.BUBBLING_PHASE=3;

module.exports=NavigationEvent;
});
__d('NavigationEventEmitter',function(global, require, module, exports) {  'use strict';




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 








NavigationEventEmitter=function(_EventEmitter){babelHelpers.inherits(NavigationEventEmitter,_EventEmitter);




function NavigationEventEmitter(target){babelHelpers.classCallCheck(this,NavigationEventEmitter);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(NavigationEventEmitter).call(this));

_this._emitting=false;
_this._emitQueue=[];
_this._target=target;return _this;}babelHelpers.createClass(NavigationEventEmitter,[{key:'emit',value:function emit(



eventType,
data,
didEmitCallback,
extraInfo)
{
if(this._emitting){


var args=Array.prototype.slice.call(arguments);
this._emitQueue.unshift(args);
return;}


this._emitting=true;

var event=NavigationEvent.pool(eventType,this._target,data);

if(extraInfo){
if(extraInfo.target){
event.target=extraInfo.target;}


if(extraInfo.eventPhase){
event.eventPhase=extraInfo.eventPhase;}


if(extraInfo.defaultPrevented){
event.preventDefault();}


if(extraInfo.propagationStopped){
event.stopPropagation();}}





babelHelpers.get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'emit',this).call(this,String(eventType),event);

if(typeof didEmitCallback==='function'){
didEmitCallback.call(this._target,event);}

event.dispose();

this._emitting=false;

while(this._emitQueue.length){
var args=this._emitQueue.shift();
this.emit.apply(this,args);}}}]);return NavigationEventEmitter;}(EventEmitter);




module.exports=NavigationEventEmitter;
});
__d('NavigationTreeNode',function(global, require, module, exports) {  'use strict';









var invariant=require('invariant');
var immutable=require('immutable/dist/immutable.js');var 

List=immutable.List;var 






NavigationTreeNode=function(){






function NavigationTreeNode(value){babelHelpers.classCallCheck(this,NavigationTreeNode);
this.__parent=null;
this._children=new List();
this._value=value;}babelHelpers.createClass(NavigationTreeNode,[{key:'getValue',value:function getValue()


{
return this._value;}},{key:'getParent',value:function getParent()


{
return this.__parent;}},{key:'getChildrenCount',value:function getChildrenCount()


{
return this._children.size;}},{key:'getChildAt',value:function getChildAt(


index){
return index>-1&&index<this._children.size?
this._children.get(index):
null;}},{key:'appendChild',value:function appendChild(


child){
if(child.__parent){
child.__parent.removeChild(child);}

child.__parent=this;
this._children=this._children.push(child);}},{key:'removeChild',value:function removeChild(


child){
var index=this._children.indexOf(child);

invariant(
index>-1,
'The node to be removed is not a child of this node.');


child.__parent=null;

this._children=this._children.splice(index,1);}},{key:'indexOf',value:function indexOf(


child){
return this._children.indexOf(child);}},{key:'forEach',value:function forEach(


callback,context){
this._children.forEach(callback,context);}},{key:'map',value:function map(


callback,context){
return this._children.map(callback,context).toJS();}},{key:'some',value:function some(


callback,context){
return this._children.some(callback,context);}}]);return NavigationTreeNode;}();




module.exports=NavigationTreeNode;
});
__d('immutable/dist/immutable.js',function(global, require, module, exports) {  (








function(global,factory){
typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():
typeof define==='function'&&define.amd?define(factory):
global.Immutable=factory();})(
this,function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor,superClass){
if(superClass){
ctor.prototype=Object.create(superClass.prototype);}

ctor.prototype.constructor=ctor;}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable,Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable,Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable,Iterable);
function SetIterable(value){
return isIterable(value)&&!isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable&&maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed&&maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed&&maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative)||isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered&&maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable=isIterable;
Iterable.isKeyed=isKeyed;
Iterable.isIndexed=isIndexed;
Iterable.isAssociative=isAssociative;
Iterable.isOrdered=isOrdered;

Iterable.Keyed=KeyedIterable;
Iterable.Indexed=IndexedIterable;
Iterable.Set=SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';


var DELETE='delete';


var SHIFT=5;
var SIZE=1<<SHIFT;
var MASK=SIZE-1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value=false;
return ref;}


function SetRef(ref){
ref&&(ref.value=true);}





function OwnerID(){}


function arrCopy(arr,offset){
offset=offset||0;
var len=Math.max(0,arr.length-offset);
var newArr=new Array(len);
for(var ii=0;ii<len;ii++){
newArr[ii]=arr[ii+offset];}

return newArr;}


function ensureSize(iter){
if(iter.size===undefined){
iter.size=iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter,index){







if(typeof index!=='number'){
var uint32Index=index>>>0;
if(''+uint32Index!==index||uint32Index===4294967295){
return NaN;}

index=uint32Index;}

return index<0?ensureSize(iter)+index:index;}


function returnTrue(){
return true;}


function wholeSlice(begin,end,size){
return (begin===0||size!==undefined&&begin<=-size)&&(
end===undefined||size!==undefined&&end>=size);}


function resolveBegin(begin,size){
return resolveIndex(begin,size,0);}


function resolveEnd(end,size){
return resolveIndex(end,size,size);}


function resolveIndex(index,size,defaultIndex){
return index===undefined?
defaultIndex:
index<0?
Math.max(0,size+index):
size===undefined?
index:
Math.min(size,index);}




var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol==='function'&&Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL||FAUX_ITERATOR_SYMBOL;


function Iterator(next){
this.next=next;}


Iterator.prototype.toString=function(){
return '[Iterator]';};



Iterator.KEYS=ITERATE_KEYS;
Iterator.VALUES=ITERATE_VALUES;
Iterator.ENTRIES=ITERATE_ENTRIES;

Iterator.prototype.inspect=
Iterator.prototype.toSource=function(){return this.toString();};
Iterator.prototype[ITERATOR_SYMBOL]=function(){
return this;};



function iteratorValue(type,k,v,iteratorResult){
var value=type===0?k:type===1?v:[k,v];
iteratorResult?iteratorResult.value=value:iteratorResult={
value:value,done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined,done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator&&typeof maybeIterator.next==='function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn&&iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable&&(
REAL_ITERATOR_SYMBOL&&iterable[REAL_ITERATOR_SYMBOL]||
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn==='function'){
return iteratorFn;}}



function isArrayLike(value){
return value&&typeof value.length==='number';}


createClass(Seq,Iterable);
function Seq(value){
return value===null||value===undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of=function(){
return Seq(arguments);};


Seq.prototype.toSeq=function(){
return this;};


Seq.prototype.toString=function(){
return this.__toString('Seq {','}');};


Seq.prototype.cacheResult=function(){
if(!this._cache&&this.__iterateUncached){
this._cache=this.entrySeq().toArray();
this.size=this._cache.length;}

return this;};




Seq.prototype.__iterate=function(fn,reverse){
return seqIterate(this,fn,reverse,true);};




Seq.prototype.__iterator=function(type,reverse){
return seqIterator(this,type,reverse,true);};




createClass(KeyedSeq,Seq);
function KeyedSeq(value){
return value===null||value===undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq=function(){
return this;};




createClass(IndexedSeq,Seq);
function IndexedSeq(value){
return value===null||value===undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of=function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq=function(){
return this;};


IndexedSeq.prototype.toString=function(){
return this.__toString('Seq [',']');};


IndexedSeq.prototype.__iterate=function(fn,reverse){
return seqIterate(this,fn,reverse,false);};


IndexedSeq.prototype.__iterator=function(type,reverse){
return seqIterator(this,type,reverse,false);};




createClass(SetSeq,Seq);
function SetSeq(value){
return (
value===null||value===undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of=function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq=function(){
return this;};




Seq.isSeq=isSeq;
Seq.Keyed=KeyedSeq;
Seq.Set=SetSeq;
Seq.Indexed=IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL]=true;



createClass(ArraySeq,IndexedSeq);
function ArraySeq(array){
this._array=array;
this.size=array.length;}


ArraySeq.prototype.get=function(index,notSetValue){
return this.has(index)?this._array[wrapIndex(this,index)]:notSetValue;};


ArraySeq.prototype.__iterate=function(fn,reverse){
var array=this._array;
var maxIndex=array.length-1;
for(var ii=0;ii<=maxIndex;ii++){
if(fn(array[reverse?maxIndex-ii:ii],ii,this)===false){
return ii+1;}}


return ii;};


ArraySeq.prototype.__iterator=function(type,reverse){
var array=this._array;
var maxIndex=array.length-1;
var ii=0;
return new Iterator(function()
{return ii>maxIndex?
iteratorDone():
iteratorValue(type,ii,array[reverse?maxIndex-ii++:ii++]);});};





createClass(ObjectSeq,KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object=object;
this._keys=keys;
this.size=keys.length;}


ObjectSeq.prototype.get=function(key,notSetValue){
if(notSetValue!==undefined&&!this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has=function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate=function(fn,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length-1;
for(var ii=0;ii<=maxIndex;ii++){
var key=keys[reverse?maxIndex-ii:ii];
if(fn(object[key],key,this)===false){
return ii+1;}}


return ii;};


ObjectSeq.prototype.__iterator=function(type,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length-1;
var ii=0;
return new Iterator(function(){
var key=keys[reverse?maxIndex-ii:ii];
return ii++>maxIndex?
iteratorDone():
iteratorValue(type,key,object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL]=true;


createClass(IterableSeq,IndexedSeq);
function IterableSeq(iterable){
this._iterable=iterable;
this.size=iterable.length||iterable.size;}


IterableSeq.prototype.__iterateUncached=function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step=iterator.next()).done){
if(fn(step.value,iterations++,this)===false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached=function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new Iterator(iteratorDone);}

var iterations=0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type,iterations++,step.value);});};





createClass(IteratorSeq,IndexedSeq);
function IteratorSeq(iterator){
this._iterator=iterator;
this._iteratorCache=[];}


IteratorSeq.prototype.__iterateUncached=function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations<cache.length){
if(fn(cache[iterations],iterations++,this)===false){
return iterations;}}


var step;
while(!(step=iterator.next()).done){
var val=step.value;
cache[iterations]=val;
if(fn(val,iterations++,this)===false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached=function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new Iterator(function(){
if(iterations>=cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations]=step.value;}

return iteratorValue(type,iterations,cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq&&maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ||(EMPTY_SEQ=new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value==='object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, '+
'or keyed object: '+value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: '+value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value)||
typeof value==='object'&&new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: '+value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq,fn,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length-1;
for(var ii=0;ii<=maxIndex;ii++){
var entry=cache[reverse?maxIndex-ii:ii];
if(fn(entry[1],useKeys?entry[0]:ii,seq)===false){
return ii+1;}}


return ii;}

return seq.__iterateUncached(fn,reverse);}


function seqIterator(seq,type,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length-1;
var ii=0;
return new Iterator(function(){
var entry=cache[reverse?maxIndex-ii:ii];
return ii++>maxIndex?
iteratorDone():
iteratorValue(type,useKeys?entry[0]:ii-1,entry[1]);});}


return seq.__iteratorUncached(type,reverse);}


function fromJS(json,converter){
return converter?
fromJSWith(converter,json,'',{'':json}):
fromJSDefault(json);}


function fromJSWith(converter,json,key,parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON,key,IndexedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON,key,KeyedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value&&(value.constructor===Object||value.constructor===undefined);}
























































function is(valueA,valueB){
if(valueA===valueB||valueA!==valueA&&valueB!==valueB){
return true;}

if(!valueA||!valueB){
return false;}

if(typeof valueA.valueOf==='function'&&
typeof valueB.valueOf==='function'){
valueA=valueA.valueOf();
valueB=valueB.valueOf();
if(valueA===valueB||valueA!==valueA&&valueB!==valueB){
return true;}

if(!valueA||!valueB){
return false;}}


if(typeof valueA.equals==='function'&&
typeof valueB.equals==='function'&&
valueA.equals(valueB)){
return true;}

return false;}


function deepEqual(a,b){
if(a===b){
return true;}


if(
!isIterable(b)||
a.size!==undefined&&b.size!==undefined&&a.size!==b.size||
a.__hash!==undefined&&b.__hash!==undefined&&a.__hash!==b.__hash||
isKeyed(a)!==isKeyed(b)||
isIndexed(a)!==isIndexed(b)||
isOrdered(a)!==isOrdered(b))
{
return false;}


if(a.size===0&&b.size===0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v,k){
var entry=entries.next().value;
return entry&&is(entry[1],v)&&(notAssociative||is(entry[0],k));})&&
entries.next().done;}


var flipped=false;

if(a.size===undefined){
if(b.size===undefined){
if(typeof a.cacheResult==='function'){
a.cacheResult();}}else 

{
flipped=true;
var _=a;
a=b;
b=_;}}



var allEqual=true;
var bSize=b.__iterate(function(v,k){
if(notAssociative?!a.has(v):
flipped?!is(v,a.get(k,NOT_SET)):!is(a.get(k,NOT_SET),v)){
allEqual=false;
return false;}});



return allEqual&&a.size===bSize;}


createClass(Repeat,IndexedSeq);

function Repeat(value,times){
if(!(this instanceof Repeat)){
return new Repeat(value,times);}

this._value=value;
this.size=times===undefined?Infinity:Math.max(0,times);
if(this.size===0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT=this;}}



Repeat.prototype.toString=function(){
if(this.size===0){
return 'Repeat []';}

return 'Repeat [ '+this._value+' '+this.size+' times ]';};


Repeat.prototype.get=function(index,notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes=function(searchValue){
return is(this._value,searchValue);};


Repeat.prototype.slice=function(begin,end){
var size=this.size;
return wholeSlice(begin,end,size)?this:
new Repeat(this._value,resolveEnd(end,size)-resolveBegin(begin,size));};


Repeat.prototype.reverse=function(){
return this;};


Repeat.prototype.indexOf=function(searchValue){
if(is(this._value,searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf=function(searchValue){
if(is(this._value,searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate=function(fn,reverse){
for(var ii=0;ii<this.size;ii++){
if(fn(this._value,ii,this)===false){
return ii+1;}}


return ii;};


Repeat.prototype.__iterator=function(type,reverse){var this$0=this;
var ii=0;
return new Iterator(function()
{return ii<this$0.size?iteratorValue(type,ii++,this$0._value):iteratorDone();});};



Repeat.prototype.equals=function(other){
return other instanceof Repeat?
is(this._value,other._value):
deepEqual(other);};



var EMPTY_REPEAT;

function invariant(condition,error){
if(!condition)throw new Error(error);}


createClass(Range,IndexedSeq);

function Range(start,end,step){
if(!(this instanceof Range)){
return new Range(start,end,step);}

invariant(step!==0,'Cannot step a Range by 0');
start=start||0;
if(end===undefined){
end=Infinity;}

step=step===undefined?1:Math.abs(step);
if(end<start){
step=-step;}

this._start=start;
this._end=end;
this._step=step;
this.size=Math.max(0,Math.ceil((end-start)/step-1)+1);
if(this.size===0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE=this;}}



Range.prototype.toString=function(){
if(this.size===0){
return 'Range []';}

return 'Range [ '+
this._start+'...'+this._end+(
this._step>1?' by '+this._step:'')+
' ]';};


Range.prototype.get=function(index,notSetValue){
return this.has(index)?
this._start+wrapIndex(this,index)*this._step:
notSetValue;};


Range.prototype.includes=function(searchValue){
var possibleIndex=(searchValue-this._start)/this._step;
return possibleIndex>=0&&
possibleIndex<this.size&&
possibleIndex===Math.floor(possibleIndex);};


Range.prototype.slice=function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

begin=resolveBegin(begin,this.size);
end=resolveEnd(end,this.size);
if(end<=begin){
return new Range(0,0);}

return new Range(this.get(begin,this._end),this.get(end,this._end),this._step);};


Range.prototype.indexOf=function(searchValue){
var offsetValue=searchValue-this._start;
if(offsetValue%this._step===0){
var index=offsetValue/this._step;
if(index>=0&&index<this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf=function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate=function(fn,reverse){
var maxIndex=this.size-1;
var step=this._step;
var value=reverse?this._start+maxIndex*step:this._start;
for(var ii=0;ii<=maxIndex;ii++){
if(fn(value,ii,this)===false){
return ii+1;}

value+=reverse?-step:step;}

return ii;};


Range.prototype.__iterator=function(type,reverse){
var maxIndex=this.size-1;
var step=this._step;
var value=reverse?this._start+maxIndex*step:this._start;
var ii=0;
return new Iterator(function(){
var v=value;
value+=reverse?-step:step;
return ii>maxIndex?iteratorDone():iteratorValue(type,ii++,v);});};



Range.prototype.equals=function(other){
return other instanceof Range?
this._start===other._start&&
this._end===other._end&&
this._step===other._step:
deepEqual(this,other);};



var EMPTY_RANGE;

createClass(Collection,Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection,Collection);function KeyedCollection(){}

createClass(IndexedCollection,Collection);function IndexedCollection(){}

createClass(SetCollection,Collection);function SetCollection(){}


Collection.Keyed=KeyedCollection;
Collection.Indexed=IndexedCollection;
Collection.Set=SetCollection;

var imul=
typeof Math.imul==='function'&&Math.imul(0xffffffff,2)===-2?
Math.imul:
function imul(a,b){
a=a|0;
b=b|0;
var c=a&0xffff;
var d=b&0xffff;

return c*d+((a>>>16)*d+c*(b>>>16)<<16>>>0)|0;};






function smi(i32){
return i32>>>1&0x40000000|i32&0xBFFFFFFF;}


function hash(o){
if(o===false||o===null||o===undefined){
return 0;}

if(typeof o.valueOf==='function'){
o=o.valueOf();
if(o===false||o===null||o===undefined){
return 0;}}


if(o===true){
return 1;}

var type=typeof o;
if(type==='number'){
var h=o|0;
if(h!==o){
h^=o*0xFFFFFFFF;}

while(o>0xFFFFFFFF){
o/=0xFFFFFFFF;
h^=o;}

return smi(h);}

if(type==='string'){
return o.length>STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode==='function'){
return o.hashCode();}

if(type==='object'){
return hashJSObj(o);}

if(typeof o.toString==='function'){
return hashString(o.toString());}

throw new Error('Value type '+type+' cannot be hashed.');}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash===undefined){
hash=hashString(string);
if(STRING_HASH_CACHE_SIZE===STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE=0;
stringHashCache={};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string]=hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0;ii<string.length;ii++){
hash=31*hash+string.charCodeAt(ii)|0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash=weakMap.get(obj);
if(hash!==undefined){
return hash;}}



hash=obj[UID_HASH_KEY];
if(hash!==undefined){
return hash;}


if(!canDefineProperty){
hash=obj.propertyIsEnumerable&&obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash!==undefined){
return hash;}


hash=getIENodeHash(obj);
if(hash!==undefined){
return hash;}}



hash=++objHashUID;
if(objHashUID&0x40000000){
objHashUID=0;}


if(usingWeakMap){
weakMap.set(obj,hash);}else 
if(isExtensible!==undefined&&isExtensible(obj)===false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj,UID_HASH_KEY,{
'enumerable':false,
'configurable':false,
'writable':false,
'value':hash});}else 

if(obj.propertyIsEnumerable!==undefined&&
obj.propertyIsEnumerable===obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable=function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY]=hash;}else 
if(obj.nodeType!==undefined){




obj[UID_HASH_KEY]=hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=function(){
try{
Object.defineProperty({},'@',{});
return true;}
catch(e){
return false;}}();





function getIENodeHash(node){
if(node&&node.nodeType>0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement&&node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap==='function';
var weakMap;
if(usingWeakMap){
weakMap=new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol==='function'){
UID_HASH_KEY=Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function assertNotInfinite(size){
invariant(
size!==Infinity,
'Cannot perform this action with an infinite size.');}



createClass(Map,KeyedCollection);



function Map(value){
return value===null||value===undefined?emptyMap():
isMap(value)&&!isOrdered(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



Map.prototype.toString=function(){
return this.__toString('Map {','}');};




Map.prototype.get=function(k,notSetValue){
return this._root?
this._root.get(0,undefined,k,notSetValue):
notSetValue;};




Map.prototype.set=function(k,v){
return updateMap(this,k,v);};


Map.prototype.setIn=function(keyPath,v){
return this.updateIn(keyPath,NOT_SET,function(){return v;});};


Map.prototype.remove=function(k){
return updateMap(this,k,NOT_SET);};


Map.prototype.deleteIn=function(keyPath){
return this.updateIn(keyPath,function(){return NOT_SET;});};


Map.prototype.update=function(k,notSetValue,updater){
return arguments.length===1?
k(this):
this.updateIn([k],notSetValue,updater);};


Map.prototype.updateIn=function(keyPath,notSetValue,updater){
if(!updater){
updater=notSetValue;
notSetValue=undefined;}

var updatedValue=updateInDeepMap(
this,
forceIterator(keyPath),
notSetValue,
updater);

return updatedValue===NOT_SET?undefined:updatedValue;};


Map.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._root=null;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyMap();};




Map.prototype.merge=function(){
return mergeIntoMapWith(this,undefined,arguments);};


Map.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,merger,iters);};


Map.prototype.mergeIn=function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.merge==='function'?
m.merge.apply(m,iters):
iters[iters.length-1];});};



Map.prototype.mergeDeep=function(){
return mergeIntoMapWith(this,deepMerger,arguments);};


Map.prototype.mergeDeepWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,deepMergerWith(merger),iters);};


Map.prototype.mergeDeepIn=function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.mergeDeep==='function'?
m.mergeDeep.apply(m,iters):
iters[iters.length-1];});};



Map.prototype.sort=function(comparator){

return OrderedMap(sortFactory(this,comparator));};


Map.prototype.sortBy=function(mapper,comparator){

return OrderedMap(sortFactory(this,comparator,mapper));};




Map.prototype.withMutations=function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


Map.prototype.asMutable=function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


Map.prototype.asImmutable=function(){
return this.__ensureOwner();};


Map.prototype.wasAltered=function(){
return this.__altered;};


Map.prototype.__iterator=function(type,reverse){
return new MapIterator(this,type,reverse);};


Map.prototype.__iterate=function(fn,reverse){var this$0=this;
var iterations=0;
this._root&&this._root.iterate(function(entry){
iterations++;
return fn(entry[1],entry[0],this$0);},
reverse);
return iterations;};


Map.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
this.__altered=false;
return this;}

return makeMap(this.size,this._root,ownerID,this.__hash);};



function isMap(maybeMap){
return !!(maybeMap&&maybeMap[IS_MAP_SENTINEL]);}


Map.isMap=isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=Map.prototype;
MapPrototype[IS_MAP_SENTINEL]=true;
MapPrototype[DELETE]=MapPrototype.remove;
MapPrototype.removeIn=MapPrototype.deleteIn;






function ArrayMapNode(ownerID,entries){
this.ownerID=ownerID;
this.entries=entries;}


ArrayMapNode.prototype.get=function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii<len;ii++){
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value===NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length;idx<len;idx++){
if(is(key,entries[idx][0])){
break;}}


var exists=idx<len;

if(exists?entries[idx][1]===value:removed){
return this;}


SetRef(didAlter);
(removed||!exists)&&SetRef(didChangeSize);

if(removed&&entries.length===1){
return;}


if(!exists&&!removed&&entries.length>=MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID,entries,key,value);}


var isEditable=ownerID&&ownerID===this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx===len-1?newEntries.pop():newEntries[idx]=newEntries.pop();}else 
{
newEntries[idx]=[key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries=newEntries;
return this;}


return new ArrayMapNode(ownerID,newEntries);};





function BitmapIndexedNode(ownerID,bitmap,nodes){
this.ownerID=ownerID;
this.bitmap=bitmap;
this.nodes=nodes;}


BitmapIndexedNode.prototype.get=function(shift,keyHash,key,notSetValue){
if(keyHash===undefined){
keyHash=hash(key);}

var bit=1<<((shift===0?keyHash:keyHash>>>shift)&MASK);
var bitmap=this.bitmap;
return (bitmap&bit)===0?notSetValue:
this.nodes[popCount(bitmap&bit-1)].get(shift+SHIFT,keyHash,key,notSetValue);};


BitmapIndexedNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}

var keyHashFrag=(shift===0?keyHash:keyHash>>>shift)&MASK;
var bit=1<<keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap&bit)!==0;

if(!exists&&value===NOT_SET){
return this;}


var idx=popCount(bitmap&bit-1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node,ownerID,shift+SHIFT,keyHash,key,value,didChangeSize,didAlter);

if(newNode===node){
return this;}


if(!exists&&newNode&&nodes.length>=MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID,nodes,bitmap,keyHashFrag,newNode);}


if(exists&&!newNode&&nodes.length===2&&isLeafNode(nodes[idx^1])){
return nodes[idx^1];}


if(exists&&newNode&&nodes.length===1&&isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID&&ownerID===this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap^bit:bitmap|bit;
var newNodes=exists?newNode?
setIn(nodes,idx,newNode,isEditable):
spliceOut(nodes,idx,isEditable):
spliceIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.bitmap=newBitmap;
this.nodes=newNodes;
return this;}


return new BitmapIndexedNode(ownerID,newBitmap,newNodes);};





function HashArrayMapNode(ownerID,count,nodes){
this.ownerID=ownerID;
this.count=count;
this.nodes=nodes;}


HashArrayMapNode.prototype.get=function(shift,keyHash,key,notSetValue){
if(keyHash===undefined){
keyHash=hash(key);}

var idx=(shift===0?keyHash:keyHash>>>shift)&MASK;
var node=this.nodes[idx];
return node?node.get(shift+SHIFT,keyHash,key,notSetValue):notSetValue;};


HashArrayMapNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}

var idx=(shift===0?keyHash:keyHash>>>shift)&MASK;
var removed=value===NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed&&!node){
return this;}


var newNode=updateNode(node,ownerID,shift+SHIFT,keyHash,key,value,didChangeSize,didAlter);
if(newNode===node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount<MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID,nodes,newCount,idx);}}



var isEditable=ownerID&&ownerID===this.ownerID;
var newNodes=setIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.count=newCount;
this.nodes=newNodes;
return this;}


return new HashArrayMapNode(ownerID,newCount,newNodes);};





function HashCollisionNode(ownerID,keyHash,entries){
this.ownerID=ownerID;
this.keyHash=keyHash;
this.entries=entries;}


HashCollisionNode.prototype.get=function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii<len;ii++){
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}


var removed=value===NOT_SET;

if(keyHash!==this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,keyHash,[key,value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length;idx<len;idx++){
if(is(key,entries[idx][0])){
break;}}


var exists=idx<len;

if(exists?entries[idx][1]===value:removed){
return this;}


SetRef(didAlter);
(removed||!exists)&&SetRef(didChangeSize);

if(removed&&len===2){
return new ValueNode(ownerID,this.keyHash,entries[idx^1]);}


var isEditable=ownerID&&ownerID===this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx===len-1?newEntries.pop():newEntries[idx]=newEntries.pop();}else 
{
newEntries[idx]=[key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries=newEntries;
return this;}


return new HashCollisionNode(ownerID,this.keyHash,newEntries);};





function ValueNode(ownerID,keyHash,entry){
this.ownerID=ownerID;
this.keyHash=keyHash;
this.entry=entry;}


ValueNode.prototype.get=function(shift,keyHash,key,notSetValue){
return is(key,this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value===NOT_SET;
var keyMatch=is(key,this.entry[0]);
if(keyMatch?value===this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID&&ownerID===this.ownerID){
this.entry[1]=value;
return this;}

return new ValueNode(ownerID,this.keyHash,[key,value]);}


SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,hash(key),[key,value]);};






ArrayMapNode.prototype.iterate=
HashCollisionNode.prototype.iterate=function(fn,reverse){
var entries=this.entries;
for(var ii=0,maxIndex=entries.length-1;ii<=maxIndex;ii++){
if(fn(entries[reverse?maxIndex-ii:ii])===false){
return false;}}};




BitmapIndexedNode.prototype.iterate=
HashArrayMapNode.prototype.iterate=function(fn,reverse){
var nodes=this.nodes;
for(var ii=0,maxIndex=nodes.length-1;ii<=maxIndex;ii++){
var node=nodes[reverse?maxIndex-ii:ii];
if(node&&node.iterate(fn,reverse)===false){
return false;}}};




ValueNode.prototype.iterate=function(fn,reverse){
return fn(this.entry);};


createClass(MapIterator,Iterator);

function MapIterator(map,type,reverse){
this._type=type;
this._reverse=reverse;
this._stack=map._root&&mapIteratorFrame(map._root);}


MapIterator.prototype.next=function(){
var type=this._type;
var stack=this._stack;
while(stack){
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index===0){
return mapIteratorValue(type,node.entry);}}else 

if(node.entries){
maxIndex=node.entries.length-1;
if(index<=maxIndex){
return mapIteratorValue(type,node.entries[this._reverse?maxIndex-index:index]);}}else 

{
maxIndex=node.nodes.length-1;
if(index<=maxIndex){
var subNode=node.nodes[this._reverse?maxIndex-index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type,subNode.entry);}

stack=this._stack=mapIteratorFrame(subNode,stack);}

continue;}}


stack=this._stack=this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type,entry){
return iteratorValue(type,entry[0],entry[1]);}


function mapIteratorFrame(node,prev){
return {
node:node,
index:0,
__prev:prev};}



function makeMap(size,root,ownerID,hash){
var map=Object.create(MapPrototype);
map.size=size;
map._root=root;
map.__ownerID=ownerID;
map.__hash=hash;
map.__altered=false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP||(EMPTY_MAP=makeMap(0));}


function updateMap(map,k,v){
var newRoot;
var newSize;
if(!map._root){
if(v===NOT_SET){
return map;}

newSize=1;
newRoot=new ArrayMapNode(map.__ownerID,[[k,v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot=updateNode(map._root,map.__ownerID,0,undefined,k,v,didChangeSize,didAlter);
if(!didAlter.value){
return map;}

newSize=map.size+(didChangeSize.value?v===NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size=newSize;
map._root=newRoot;
map.__hash=undefined;
map.__altered=true;
return map;}

return newRoot?makeMap(newSize,newRoot):emptyMap();}


function updateNode(node,ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(!node){
if(value===NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID,keyHash,[key,value]);}

return node.update(ownerID,shift,keyHash,key,value,didChangeSize,didAlter);}


function isLeafNode(node){
return node.constructor===ValueNode||node.constructor===HashCollisionNode;}


function mergeIntoNode(node,ownerID,shift,keyHash,entry){
if(node.keyHash===keyHash){
return new HashCollisionNode(ownerID,keyHash,[node.entry,entry]);}


var idx1=(shift===0?node.keyHash:node.keyHash>>>shift)&MASK;
var idx2=(shift===0?keyHash:keyHash>>>shift)&MASK;

var newNode;
var nodes=idx1===idx2?
[mergeIntoNode(node,ownerID,shift+SHIFT,keyHash,entry)]:(
newNode=new ValueNode(ownerID,keyHash,entry),idx1<idx2?[node,newNode]:[newNode,node]);

return new BitmapIndexedNode(ownerID,1<<idx1|1<<idx2,nodes);}


function createNodes(ownerID,entries,key,value){
if(!ownerID){
ownerID=new OwnerID();}

var node=new ValueNode(ownerID,hash(key),[key,value]);
for(var ii=0;ii<entries.length;ii++){
var entry=entries[ii];
node=node.update(ownerID,0,undefined,entry[0],entry[1]);}

return node;}


function packNodes(ownerID,nodes,count,excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0,bit=1,len=nodes.length;ii<len;ii++,bit<<=1){
var node=nodes[ii];
if(node!==undefined&&ii!==excluding){
bitmap|=bit;
packedNodes[packedII++]=node;}}


return new BitmapIndexedNode(ownerID,bitmap,packedNodes);}


function expandNodes(ownerID,nodes,bitmap,including,node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0;bitmap!==0;ii++,bitmap>>>=1){
expandedNodes[ii]=bitmap&1?nodes[count++]:undefined;}

expandedNodes[including]=node;
return new HashArrayMapNode(ownerID,count+1,expandedNodes);}


function mergeIntoMapWith(map,merger,iterables){
var iters=[];
for(var ii=0;ii<iterables.length;ii++){
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter=iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map,merger,iters);}


function deepMerger(existing,value,key){
return existing&&existing.mergeDeep&&isIterable(value)?
existing.mergeDeep(value):
is(existing,value)?existing:value;}


function deepMergerWith(merger){
return function(existing,value,key){
if(existing&&existing.mergeDeepWith&&isIterable(value)){
return existing.mergeDeepWith(merger,value);}

var nextValue=merger(existing,value,key);
return is(existing,nextValue)?existing:nextValue;};}



function mergeIntoCollectionWith(collection,merger,iters){
iters=iters.filter(function(x){return x.size!==0;});
if(iters.length===0){
return collection;}

if(collection.size===0&&!collection.__ownerID&&iters.length===1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value,key){
collection.update(key,NOT_SET,function(existing)
{return existing===NOT_SET?value:merger(existing,value,key);});}:


function(value,key){
collection.set(key,value);};

for(var ii=0;ii<iters.length;ii++){
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing,keyPathIter,notSetValue,updater){
var isNotSet=existing===NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue===existingValue?existing:newValue;}

invariant(
isNotSet||existing&&existing.set,
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key,NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting,
keyPathIter,
notSetValue,
updater);

return nextUpdated===nextExisting?existing:
nextUpdated===NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key,nextUpdated);}


function popCount(x){
x=x-(x>>1&0x55555555);
x=(x&0x33333333)+(x>>2&0x33333333);
x=x+(x>>4)&0x0f0f0f0f;
x=x+(x>>8);
x=x+(x>>16);
return x&0x7f;}


function setIn(array,idx,val,canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx]=val;
return newArray;}


function spliceIn(array,idx,val,canEdit){
var newLen=array.length+1;
if(canEdit&&idx+1===newLen){
array[idx]=val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii<newLen;ii++){
if(ii===idx){
newArray[ii]=val;
after=-1;}else 
{
newArray[ii]=array[ii+after];}}


return newArray;}


function spliceOut(array,idx,canEdit){
var newLen=array.length-1;
if(canEdit&&idx===newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii<newLen;ii++){
if(ii===idx){
after=1;}

newArray[ii]=array[ii+after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE/4;
var MAX_BITMAP_INDEXED_SIZE=SIZE/2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE/4;

createClass(List,IndexedCollection);



function List(value){
var empty=emptyList();
if(value===null||value===undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size===0){
return empty;}

assertNotInfinite(size);
if(size>0&&size<SIZE){
return makeList(0,size,SHIFT,null,new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v,i){return list.set(i,v);});});}



List.of=function(){
return this(arguments);};


List.prototype.toString=function(){
return this.__toString('List [',']');};




List.prototype.get=function(index,notSetValue){
index=wrapIndex(this,index);
if(index>=0&&index<this.size){
index+=this._origin;
var node=listNodeFor(this,index);
return node&&node.array[index&MASK];}

return notSetValue;};




List.prototype.set=function(index,value){
return updateList(this,index,value);};


List.prototype.remove=function(index){
return !this.has(index)?this:
index===0?this.shift():
index===this.size-1?this.pop():
this.splice(index,1);};


List.prototype.insert=function(index,value){
return this.splice(index,0,value);};


List.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=this._origin=this._capacity=0;
this._level=SHIFT;
this._root=this._tail=null;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyList();};


List.prototype.push=function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list,0,oldSize+values.length);
for(var ii=0;ii<values.length;ii++){
list.set(oldSize+ii,values[ii]);}});};




List.prototype.pop=function(){
return setListBounds(this,0,-1);};


List.prototype.unshift=function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list,-values.length);
for(var ii=0;ii<values.length;ii++){
list.set(ii,values[ii]);}});};




List.prototype.shift=function(){
return setListBounds(this,1);};




List.prototype.merge=function(){
return mergeIntoListWith(this,undefined,arguments);};


List.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,merger,iters);};


List.prototype.mergeDeep=function(){
return mergeIntoListWith(this,deepMerger,arguments);};


List.prototype.mergeDeepWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,deepMergerWith(merger),iters);};


List.prototype.setSize=function(size){
return setListBounds(this,0,size);};




List.prototype.slice=function(begin,end){
var size=this.size;
if(wholeSlice(begin,end,size)){
return this;}

return setListBounds(
this,
resolveBegin(begin,size),
resolveEnd(end,size));};



List.prototype.__iterator=function(type,reverse){
var index=0;
var values=iterateList(this,reverse);
return new Iterator(function(){
var value=values();
return value===DONE?
iteratorDone():
iteratorValue(type,index++,value);});};



List.prototype.__iterate=function(fn,reverse){
var index=0;
var values=iterateList(this,reverse);
var value;
while((value=values())!==DONE){
if(fn(value,index++,this)===false){
break;}}


return index;};


List.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
return this;}

return makeList(this._origin,this._capacity,this._level,this._root,this._tail,ownerID,this.__hash);};



function isList(maybeList){
return !!(maybeList&&maybeList[IS_LIST_SENTINEL]);}


List.isList=isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL]=true;
ListPrototype[DELETE]=ListPrototype.remove;
ListPrototype.setIn=MapPrototype.setIn;
ListPrototype.deleteIn=
ListPrototype.removeIn=MapPrototype.removeIn;
ListPrototype.update=MapPrototype.update;
ListPrototype.updateIn=MapPrototype.updateIn;
ListPrototype.mergeIn=MapPrototype.mergeIn;
ListPrototype.mergeDeepIn=MapPrototype.mergeDeepIn;
ListPrototype.withMutations=MapPrototype.withMutations;
ListPrototype.asMutable=MapPrototype.asMutable;
ListPrototype.asImmutable=MapPrototype.asImmutable;
ListPrototype.wasAltered=MapPrototype.wasAltered;



function VNode(array,ownerID){
this.array=array;
this.ownerID=ownerID;}




VNode.prototype.removeBefore=function(ownerID,level,index){
if(index===level?1<<level:0||this.array.length===0){
return this;}

var originIndex=index>>>level&MASK;
if(originIndex>=this.array.length){
return new VNode([],ownerID);}

var removingFirst=originIndex===0;
var newChild;
if(level>0){
var oldChild=this.array[originIndex];
newChild=oldChild&&oldChild.removeBefore(ownerID,level-SHIFT,index);
if(newChild===oldChild&&removingFirst){
return this;}}


if(removingFirst&&!newChild){
return this;}

var editable=editableVNode(this,ownerID);
if(!removingFirst){
for(var ii=0;ii<originIndex;ii++){
editable.array[ii]=undefined;}}


if(newChild){
editable.array[originIndex]=newChild;}

return editable;};


VNode.prototype.removeAfter=function(ownerID,level,index){
if(index===(level?1<<level:0)||this.array.length===0){
return this;}

var sizeIndex=index-1>>>level&MASK;
if(sizeIndex>=this.array.length){
return this;}


var newChild;
if(level>0){
var oldChild=this.array[sizeIndex];
newChild=oldChild&&oldChild.removeAfter(ownerID,level-SHIFT,index);
if(newChild===oldChild&&sizeIndex===this.array.length-1){
return this;}}



var editable=editableVNode(this,ownerID);
editable.array.splice(sizeIndex+1);
if(newChild){
editable.array[sizeIndex]=newChild;}

return editable;};




var DONE={};

function iterateList(list,reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root,list._level,0);

function iterateNodeOrLeaf(node,level,offset){
return level===0?
iterateLeaf(node,offset):
iterateNode(node,level,offset);}


function iterateLeaf(node,offset){
var array=offset===tailPos?tail&&tail.array:node&&node.array;
var from=offset>left?0:left-offset;
var to=right-offset;
if(to>SIZE){
to=SIZE;}

return function(){
if(from===to){
return DONE;}

var idx=reverse?--to:from++;
return array&&array[idx];};}



function iterateNode(node,level,offset){
var values;
var array=node&&node.array;
var from=offset>left?0:left-offset>>level;
var to=(right-offset>>level)+1;
if(to>SIZE){
to=SIZE;}

return function(){
do {
if(values){
var value=values();
if(value!==DONE){
return value;}

values=null;}

if(from===to){
return DONE;}

var idx=reverse?--to:from++;
values=iterateNodeOrLeaf(
array&&array[idx],level-SHIFT,offset+(idx<<level));}while(

true);};}}




function makeList(origin,capacity,level,root,tail,ownerID,hash){
var list=Object.create(ListPrototype);
list.size=capacity-origin;
list._origin=origin;
list._capacity=capacity;
list._level=level;
list._root=root;
list._tail=tail;
list.__ownerID=ownerID;
list.__hash=hash;
list.__altered=false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST||(EMPTY_LIST=makeList(0,0,SHIFT));}


function updateList(list,index,value){
index=wrapIndex(list,index);

if(index!==index){
return list;}


if(index>=list.size||index<0){
return list.withMutations(function(list){
index<0?
setListBounds(list,index).set(0,value):
setListBounds(list,0,index+1).set(index,value);});}



index+=list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index>=getTailOffset(list._capacity)){
newTail=updateVNode(newTail,list.__ownerID,0,index,value,didAlter);}else 
{
newRoot=updateVNode(newRoot,list.__ownerID,list._level,index,value,didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root=newRoot;
list._tail=newTail;
list.__hash=undefined;
list.__altered=true;
return list;}

return makeList(list._origin,list._capacity,list._level,newRoot,newTail);}


function updateVNode(node,ownerID,level,index,value,didAlter){
var idx=index>>>level&MASK;
var nodeHas=node&&idx<node.array.length;
if(!nodeHas&&value===undefined){
return node;}


var newNode;

if(level>0){
var lowerNode=node&&node.array[idx];
var newLowerNode=updateVNode(lowerNode,ownerID,level-SHIFT,index,value,didAlter);
if(newLowerNode===lowerNode){
return node;}

newNode=editableVNode(node,ownerID);
newNode.array[idx]=newLowerNode;
return newNode;}


if(nodeHas&&node.array[idx]===value){
return node;}


SetRef(didAlter);

newNode=editableVNode(node,ownerID);
if(value===undefined&&idx===newNode.array.length-1){
newNode.array.pop();}else 
{
newNode.array[idx]=value;}

return newNode;}


function editableVNode(node,ownerID){
if(ownerID&&node&&ownerID===node.ownerID){
return node;}

return new VNode(node?node.array.slice():[],ownerID);}


function listNodeFor(list,rawIndex){
if(rawIndex>=getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex<1<<list._level+SHIFT){
var node=list._root;
var level=list._level;
while(node&&level>0){
node=node.array[rawIndex>>>level&MASK];
level-=SHIFT;}

return node;}}



function setListBounds(list,begin,end){


if(begin!==undefined){
begin=begin|0;}

if(end!==undefined){
end=end|0;}

var owner=list.__ownerID||new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin+begin;
var newCapacity=end===undefined?oldCapacity:end<0?oldCapacity+end:oldOrigin+end;
if(newOrigin===oldOrigin&&newCapacity===oldCapacity){
return list;}



if(newOrigin>=newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin+offsetShift<0){
newRoot=new VNode(newRoot&&newRoot.array.length?[undefined,newRoot]:[],owner);
newLevel+=SHIFT;
offsetShift+=1<<newLevel;}

if(offsetShift){
newOrigin+=offsetShift;
oldOrigin+=offsetShift;
newCapacity+=offsetShift;
oldCapacity+=offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset>=1<<newLevel+SHIFT){
newRoot=new VNode(newRoot&&newRoot.array.length?[newRoot]:[],owner);
newLevel+=SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset<oldTailOffset?
listNodeFor(list,newCapacity-1):
newTailOffset>oldTailOffset?new VNode([],owner):oldTail;


if(oldTail&&newTailOffset>oldTailOffset&&newOrigin<oldCapacity&&oldTail.array.length){
newRoot=editableVNode(newRoot,owner);
var node=newRoot;
for(var level=newLevel;level>SHIFT;level-=SHIFT){
var idx=oldTailOffset>>>level&MASK;
node=node.array[idx]=editableVNode(node.array[idx],owner);}

node.array[oldTailOffset>>>SHIFT&MASK]=oldTail;}



if(newCapacity<oldCapacity){
newTail=newTail&&newTail.removeAfter(owner,0,newCapacity);}



if(newOrigin>=newTailOffset){
newOrigin-=newTailOffset;
newCapacity-=newTailOffset;
newLevel=SHIFT;
newRoot=null;
newTail=newTail&&newTail.removeBefore(owner,0,newOrigin);}else 


if(newOrigin>oldOrigin||newTailOffset<oldTailOffset){
offsetShift=0;


while(newRoot){
var beginIndex=newOrigin>>>newLevel&MASK;
if(beginIndex!==newTailOffset>>>newLevel&MASK){
break;}

if(beginIndex){
offsetShift+=(1<<newLevel)*beginIndex;}

newLevel-=SHIFT;
newRoot=newRoot.array[beginIndex];}



if(newRoot&&newOrigin>oldOrigin){
newRoot=newRoot.removeBefore(owner,newLevel,newOrigin-offsetShift);}

if(newRoot&&newTailOffset<oldTailOffset){
newRoot=newRoot.removeAfter(owner,newLevel,newTailOffset-offsetShift);}

if(offsetShift){
newOrigin-=offsetShift;
newCapacity-=offsetShift;}}



if(list.__ownerID){
list.size=newCapacity-newOrigin;
list._origin=newOrigin;
list._capacity=newCapacity;
list._level=newLevel;
list._root=newRoot;
list._tail=newTail;
list.__hash=undefined;
list.__altered=true;
return list;}

return makeList(newOrigin,newCapacity,newLevel,newRoot,newTail);}


function mergeIntoListWith(list,merger,iterables){
var iters=[];
var maxSize=0;
for(var ii=0;ii<iterables.length;ii++){
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size>maxSize){
maxSize=iter.size;}

if(!isIterable(value)){
iter=iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize>list.size){
list=list.setSize(maxSize);}

return mergeIntoCollectionWith(list,merger,iters);}


function getTailOffset(size){
return size<SIZE?0:size-1>>>SHIFT<<SHIFT;}


createClass(OrderedMap,Map);



function OrderedMap(value){
return value===null||value===undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



OrderedMap.of=function(){
return this(arguments);};


OrderedMap.prototype.toString=function(){
return this.__toString('OrderedMap {','}');};




OrderedMap.prototype.get=function(k,notSetValue){
var index=this._map.get(k);
return index!==undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set=function(k,v){
return updateOrderedMap(this,k,v);};


OrderedMap.prototype.remove=function(k){
return updateOrderedMap(this,k,NOT_SET);};


OrderedMap.prototype.wasAltered=function(){
return this._map.wasAltered()||this._list.wasAltered();};


OrderedMap.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry&&fn(entry[1],entry[0],this$0);},
reverse);};



OrderedMap.prototype.__iterator=function(type,reverse){
return this._list.fromEntrySeq().__iterator(type,reverse);};


OrderedMap.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
this._list=newList;
return this;}

return makeOrderedMap(newMap,newList,ownerID,this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap)&&isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap=isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL]=true;
OrderedMap.prototype[DELETE]=OrderedMap.prototype.remove;



function makeOrderedMap(map,list,ownerID,hash){
var omap=Object.create(OrderedMap.prototype);
omap.size=map?map.size:0;
omap._map=map;
omap._list=list;
omap.__ownerID=ownerID;
omap.__hash=hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP||(EMPTY_ORDERED_MAP=makeOrderedMap(emptyMap(),emptyList()));}


function updateOrderedMap(omap,k,v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i!==undefined;
var newMap;
var newList;
if(v===NOT_SET){
if(!has){
return omap;}

if(list.size>=SIZE&&list.size>=map.size*2){
newList=list.filter(function(entry,idx){return entry!==undefined&&i!==idx;});
newMap=newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID=newList.__ownerID=omap.__ownerID;}}else 

{
newMap=map.remove(k);
newList=i===list.size-1?list.pop():list.set(i,undefined);}}else 

{
if(has){
if(v===list.get(i)[1]){
return omap;}

newMap=map;
newList=list.set(i,[k,v]);}else 
{
newMap=map.set(k,list.size);
newList=list.set(list.size,[k,v]);}}


if(omap.__ownerID){
omap.size=newMap.size;
omap._map=newMap;
omap._list=newList;
omap.__hash=undefined;
return omap;}

return makeOrderedMap(newMap,newList);}


createClass(ToKeyedSequence,KeyedSeq);
function ToKeyedSequence(indexed,useKeys){
this._iter=indexed;
this._useKeys=useKeys;
this.size=indexed.size;}


ToKeyedSequence.prototype.get=function(key,notSetValue){
return this._iter.get(key,notSetValue);};


ToKeyedSequence.prototype.has=function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq=function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse=function(){var this$0=this;
var reversedSequence=reverseFactory(this,true);
if(!this._useKeys){
reversedSequence.valueSeq=function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map=function(mapper,context){var this$0=this;
var mappedSequence=mapFactory(this,mapper,context);
if(!this._useKeys){
mappedSequence.valueSeq=function(){return this$0._iter.toSeq().map(mapper,context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v,k){return fn(v,k,this$0);}:(
ii=reverse?resolveSize(this):0,
function(v){return fn(v,reverse?--ii:ii++,this$0);}),
reverse);};



ToKeyedSequence.prototype.__iterator=function(type,reverse){
if(this._useKeys){
return this._iter.__iterator(type,reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var ii=reverse?resolveSize(this):0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,reverse?--ii:ii++,step.value,step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL]=true;


createClass(ToIndexedSequence,IndexedSeq);
function ToIndexedSequence(iter){
this._iter=iter;
this.size=iter.size;}


ToIndexedSequence.prototype.includes=function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v,iterations++,this$0);},reverse);};


ToIndexedSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,iterations++,step.value,step);});};





createClass(ToSetSequence,SetSeq);
function ToSetSequence(iter){
this._iter=iter;
this.size=iter.size;}


ToSetSequence.prototype.has=function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v,v,this$0);},reverse);};


ToSetSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,step.value,step.value,step);});};





createClass(FromEntriesSequence,KeyedSeq);
function FromEntriesSequence(entries){
this._iter=entries;
this.size=entries.size;}


FromEntriesSequence.prototype.entrySeq=function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1],
indexedIterable?entry.get(0):entry[0],
this$0);}},


reverse);};


FromEntriesSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new Iterator(function(){
while(true){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type,
indexedIterable?entry.get(0):entry[0],
indexedIterable?entry.get(1):entry[1],
step);}}});};







ToIndexedSequence.prototype.cacheResult=
ToKeyedSequence.prototype.cacheResult=
ToSetSequence.prototype.cacheResult=
FromEntriesSequence.prototype.cacheResult=
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter=iterable;
flipSequence.size=iterable.size;
flipSequence.flip=function(){return iterable;};
flipSequence.reverse=function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip=function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has=function(key){return iterable.includes(key);};
flipSequence.includes=function(key){return iterable.has(key);};
flipSequence.cacheResult=cacheResultThrough;
flipSequence.__iterateUncached=function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(k,v,this$0)!==false;},reverse);};

flipSequence.__iteratorUncached=function(type,reverse){
if(type===ITERATE_ENTRIES){
var iterator=iterable.__iterator(type,reverse);
return new Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0]=step.value[1];
step.value[1]=k;}

return step;});}


return iterable.__iterator(
type===ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES,
reverse);};


return flipSequence;}



function mapFactory(iterable,mapper,context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size=iterable.size;
mappedSequence.has=function(key){return iterable.has(key);};
mappedSequence.get=function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v===NOT_SET?
notSetValue:
mapper.call(context,v,key,iterable);};

mappedSequence.__iterateUncached=function(fn,reverse){var this$0=this;
return iterable.__iterate(
function(v,k,c){return fn(mapper.call(context,v,k,c),k,this$0)!==false;},
reverse);};


mappedSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
return new Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type,
key,
mapper.call(context,entry[1],key,iterable),
step);});};



return mappedSequence;}



function reverseFactory(iterable,useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter=iterable;
reversedSequence.size=iterable.size;
reversedSequence.reverse=function(){return iterable;};
if(iterable.flip){
reversedSequence.flip=function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse=function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get=function(key,notSetValue)
{return iterable.get(useKeys?key:-1-key,notSetValue);};
reversedSequence.has=function(key)
{return iterable.has(useKeys?key:-1-key);};
reversedSequence.includes=function(value){return iterable.includes(value);};
reversedSequence.cacheResult=cacheResultThrough;
reversedSequence.__iterate=function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(v,k,this$0);},!reverse);};

reversedSequence.__iterator=
function(type,reverse){return iterable.__iterator(type,!reverse);};
return reversedSequence;}



function filterFactory(iterable,predicate,context,useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has=function(key){
var v=iterable.get(key,NOT_SET);
return v!==NOT_SET&&!!predicate.call(context,v,key,iterable);};

filterSequence.get=function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v!==NOT_SET&&predicate.call(context,v,key,iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached=function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0);}},

reverse);
return iterations;};

filterSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterations=0;
return new Iterator(function(){
while(true){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context,value,key,iterable)){
return iteratorValue(type,useKeys?key:iterations++,value,step);}}});};




return filterSequence;}



function countByFactory(iterable,grouper,context){
var groups=Map().asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
0,
function(a){return a+1;});});


return groups.asImmutable();}



function groupByFactory(iterable,grouper,context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():Map()).asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
function(a){return a=a||[],a.push(isKeyedIter?[k,v]:v),a;});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable,coerce(arr));});}



function sliceFactory(iterable,begin,end,useKeys){
var originalSize=iterable.size;



if(begin!==undefined){
begin=begin|0;}

if(end!==undefined){
end=end|0;}


if(wholeSlice(begin,end,originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin,originalSize);
var resolvedEnd=resolveEnd(end,originalSize);




if(resolvedBegin!==resolvedBegin||resolvedEnd!==resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(),begin,end,useKeys);}






var resolvedSize=resolvedEnd-resolvedBegin;
var sliceSize;
if(resolvedSize===resolvedSize){
sliceSize=resolvedSize<0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);



sliceSeq.size=sliceSize===0?sliceSize:iterable.size&&sliceSize||undefined;

if(!useKeys&&isSeq(iterable)&&sliceSize>=0){
sliceSeq.get=function(index,notSetValue){
index=wrapIndex(this,index);
return index>=0&&index<sliceSize?
iterable.get(index+resolvedBegin,notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached=function(fn,reverse){var this$0=this;
if(sliceSize===0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k){
if(!(isSkipping&&(isSkipping=skipped++<resolvedBegin))){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0)!==false&&
iterations!==sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached=function(type,reverse){
if(sliceSize!==0&&reverse){
return this.cacheResult().__iterator(type,reverse);}


var iterator=sliceSize!==0&&iterable.__iterator(type,reverse);
var skipped=0;
var iterations=0;
return new Iterator(function(){
while(skipped++<resolvedBegin){
iterator.next();}

if(++iterations>sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys||type===ITERATE_VALUES){
return step;}else 
if(type===ITERATE_KEYS){
return iteratorValue(type,iterations-1,undefined,step);}else 
{
return iteratorValue(type,iterations-1,step.value[1],step);}});};




return sliceSeq;}



function takeWhileFactory(iterable,predicate,context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached=function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterations=0;
iterable.__iterate(function(v,k,c)
{return predicate.call(context,v,k,c)&&++iterations&&fn(v,k,this$0);});

return iterations;};

takeSequence.__iteratorUncached=function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterating=true;
return new Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context,v,k,this$0)){
iterating=false;
return iteratorDone();}

return type===ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return takeSequence;}



function skipWhileFactory(iterable,predicate,context,useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached=function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(!(isSkipping&&(isSkipping=predicate.call(context,v,k,c)))){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0);}});


return iterations;};

skipSequence.__iteratorUncached=function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var skipping=true;
var iterations=0;
return new Iterator(function(){
var step,k,v;
do {
step=iterator.next();
if(step.done){
if(useKeys||type===ITERATE_VALUES){
return step;}else 
if(type===ITERATE_KEYS){
return iteratorValue(type,iterations++,undefined,step);}else 
{
return iteratorValue(type,iterations++,step.value[1],step);}}


var entry=step.value;
k=entry[0];
v=entry[1];
skipping&&(skipping=predicate.call(context,v,k,this$0));}while(
skipping);
return type===ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return skipSequence;}



function concatFactory(iterable,values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v=isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v=KeyedIterable(v);}

return v;}).
filter(function(v){return v.size!==0;});

if(iters.length===0){
return iterable;}


if(iters.length===1){
var singleton=iters[0];
if(singleton===iterable||
isKeyedIterable&&isKeyed(singleton)||
isIndexed(iterable)&&isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq=concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq=concatSeq.toSetSeq();}

concatSeq=concatSeq.flatten(true);
concatSeq.size=iters.reduce(
function(sum,seq){
if(sum!==undefined){
var size=seq.size;
if(size!==undefined){
return sum+size;}}},



0);

return concatSeq;}



function flattenFactory(iterable,depth,useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached=function(fn,reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter,currentDepth){var this$0=this;
iter.__iterate(function(v,k){
if((!depth||currentDepth<depth)&&isIterable(v)){
flatDeep(v,currentDepth+1);}else 
if(fn(v,useKeys?k:iterations++,this$0)===false){
stopped=true;}

return !stopped;},
reverse);}

flatDeep(iterable,0);
return iterations;};

flatSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(type,reverse);
var stack=[];
var iterations=0;
return new Iterator(function(){
while(iterator){
var step=iterator.next();
if(step.done!==false){
iterator=stack.pop();
continue;}

var v=step.value;
if(type===ITERATE_ENTRIES){
v=v[1];}

if((!depth||stack.length<depth)&&isIterable(v)){
stack.push(iterator);
iterator=v.__iterator(type,reverse);}else 
{
return useKeys?step:iteratorValue(type,iterations++,v,step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable,mapper,context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v,k){return coerce(mapper.call(context,v,k,iterable));}).
flatten(true);}



function interposeFactory(iterable,separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size=iterable.size&&iterable.size*2-1;
interposedSequence.__iterateUncached=function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k)
{return (!iterations||fn(separator,iterations++,this$0)!==false)&&
fn(v,iterations++,this$0)!==false;},
reverse);

return iterations;};

interposedSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
var step;
return new Iterator(function(){
if(!step||iterations%2){
step=iterator.next();
if(step.done){
return step;}}


return iterations%2?
iteratorValue(type,iterations++,separator):
iteratorValue(type,iterations++,step.value,step);});};


return interposedSequence;}



function sortFactory(iterable,comparator,mapper){
if(!comparator){
comparator=defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v,k){return [k,v,index++,mapper?mapper(v,k,iterable):v];}).
toArray();
entries.sort(function(a,b){return comparator(a[3],b[3])||a[2]-b[2];}).forEach(
isKeyedIterable?
function(v,i){entries[i].length=2;}:
function(v,i){entries[i]=v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable,comparator,mapper){
if(!comparator){
comparator=defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v,k){return [v,mapper(v,k,iterable)];}).
reduce(function(a,b){return maxCompare(comparator,a[1],b[1])?b:a;});
return entry&&entry[0];}else 
{
return iterable.reduce(function(a,b){return maxCompare(comparator,a,b)?b:a;});}}



function maxCompare(comparator,a,b){
var comp=comparator(b,a);


return comp===0&&b!==a&&(b===undefined||b===null||b!==b)||comp>0;}



function zipWithFactory(keyIter,zipper,iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size=new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate=function(fn,reverse){













var iterator=this.__iterator(ITERATE_VALUES,reverse);
var step;
var iterations=0;
while(!(step=iterator.next()).done){
if(fn(step.value,iterations++,this)===false){
break;}}


return iterations;};

zipSequence.__iteratorUncached=function(type,reverse){
var iterators=iters.map(function(i)
{return i=Iterable(i),getIterator(reverse?i.reverse():i);});

var iterations=0;
var isDone=false;
return new Iterator(function(){
var steps;
if(!isDone){
steps=iterators.map(function(i){return i.next();});
isDone=steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type,
iterations++,
zipper.apply(null,steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter,seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry!==Object(entry)){
throw new TypeError('Expected [K, V] tuple: '+entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size=this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a,b){
return a>b?1:a<b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: '+keyPath);}

iter=getIterator(Iterable(keyPath));}

return iter;}


createClass(Record,KeyedCollection);

function Record(defaultValues,name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized=true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype,keys);
RecordTypePrototype.size=keys.length;
RecordTypePrototype._name=name;
RecordTypePrototype._keys=keys;
RecordTypePrototype._defaultValues=defaultValues;}

this._map=Map(values);};


var RecordTypePrototype=RecordType.prototype=Object.create(RecordPrototype);
RecordTypePrototype.constructor=RecordType;

return RecordType;}


Record.prototype.toString=function(){
return this.__toString(recordName(this)+' {','}');};




Record.prototype.has=function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get=function(k,notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k,defaultVal):defaultVal;};




Record.prototype.clear=function(){
if(this.__ownerID){
this._map&&this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty||(RecordType._empty=makeRecord(this,emptyMap()));};


Record.prototype.set=function(k,v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "'+k+'" on '+recordName(this));}

var newMap=this._map&&this._map.set(k,v);
if(this.__ownerID||newMap===this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.remove=function(k){
if(!this.has(k)){
return this;}

var newMap=this._map&&this._map.remove(k);
if(this.__ownerID||newMap===this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.wasAltered=function(){
return this._map.wasAltered();};


Record.prototype.__iterator=function(type,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterator(type,reverse);};


Record.prototype.__iterate=function(fn,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterate(fn,reverse);};


Record.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map&&this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
return this;}

return makeRecord(this,newMap,ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE]=RecordPrototype.remove;
RecordPrototype.deleteIn=
RecordPrototype.removeIn=MapPrototype.removeIn;
RecordPrototype.merge=MapPrototype.merge;
RecordPrototype.mergeWith=MapPrototype.mergeWith;
RecordPrototype.mergeIn=MapPrototype.mergeIn;
RecordPrototype.mergeDeep=MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith=MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn=MapPrototype.mergeDeepIn;
RecordPrototype.setIn=MapPrototype.setIn;
RecordPrototype.update=MapPrototype.update;
RecordPrototype.updateIn=MapPrototype.updateIn;
RecordPrototype.withMutations=MapPrototype.withMutations;
RecordPrototype.asMutable=MapPrototype.asMutable;
RecordPrototype.asImmutable=MapPrototype.asImmutable;


function makeRecord(likeRecord,map,ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map=map;
record.__ownerID=ownerID;
return record;}


function recordName(record){
return record._name||record.constructor.name||'Record';}


function setProps(prototype,names){
try{
names.forEach(setProp.bind(undefined,prototype));}
catch(error){}}




function setProp(prototype,name){
Object.defineProperty(prototype,name,{
get:function(){
return this.get(name);},

set:function(value){
invariant(this.__ownerID,'Cannot set on an immutable record.');
this.set(name,value);}});}




createClass(Set,SetCollection);



function Set(value){
return value===null||value===undefined?emptySet():
isSet(value)&&!isOrdered(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



Set.of=function(){
return this(arguments);};


Set.fromKeys=function(value){
return this(KeyedIterable(value).keySeq());};


Set.prototype.toString=function(){
return this.__toString('Set {','}');};




Set.prototype.has=function(value){
return this._map.has(value);};




Set.prototype.add=function(value){
return updateSet(this,this._map.set(value,true));};


Set.prototype.remove=function(value){
return updateSet(this,this._map.remove(value));};


Set.prototype.clear=function(){
return updateSet(this,this._map.clear());};




Set.prototype.union=function(){var iters=SLICE$0.call(arguments,0);
iters=iters.filter(function(x){return x.size!==0;});
if(iters.length===0){
return this;}

if(this.size===0&&!this.__ownerID&&iters.length===1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0;ii<iters.length;ii++){
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




Set.prototype.intersect=function(){var iters=SLICE$0.call(arguments,0);
if(iters.length===0){
return this;}

iters=iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





Set.prototype.subtract=function(){var iters=SLICE$0.call(arguments,0);
if(iters.length===0){
return this;}

iters=iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





Set.prototype.merge=function(){
return this.union.apply(this,arguments);};


Set.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return this.union.apply(this,iters);};


Set.prototype.sort=function(comparator){

return OrderedSet(sortFactory(this,comparator));};


Set.prototype.sortBy=function(mapper,comparator){

return OrderedSet(sortFactory(this,comparator,mapper));};


Set.prototype.wasAltered=function(){
return this._map.wasAltered();};


Set.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._map.__iterate(function(_,k){return fn(k,k,this$0);},reverse);};


Set.prototype.__iterator=function(type,reverse){
return this._map.map(function(_,k){return k;}).__iterator(type,reverse);};


Set.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
return this;}

return this.__make(newMap,ownerID);};



function isSet(maybeSet){
return !!(maybeSet&&maybeSet[IS_SET_SENTINEL]);}


Set.isSet=isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=Set.prototype;
SetPrototype[IS_SET_SENTINEL]=true;
SetPrototype[DELETE]=SetPrototype.remove;
SetPrototype.mergeDeep=SetPrototype.merge;
SetPrototype.mergeDeepWith=SetPrototype.mergeWith;
SetPrototype.withMutations=MapPrototype.withMutations;
SetPrototype.asMutable=MapPrototype.asMutable;
SetPrototype.asImmutable=MapPrototype.asImmutable;

SetPrototype.__empty=emptySet;
SetPrototype.__make=makeSet;

function updateSet(set,newMap){
if(set.__ownerID){
set.size=newMap.size;
set._map=newMap;
return set;}

return newMap===set._map?set:
newMap.size===0?set.__empty():
set.__make(newMap);}


function makeSet(map,ownerID){
var set=Object.create(SetPrototype);
set.size=map?map.size:0;
set._map=map;
set.__ownerID=ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET||(EMPTY_SET=makeSet(emptyMap()));}


createClass(OrderedSet,Set);



function OrderedSet(value){
return value===null||value===undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of=function(){
return this(arguments);};


OrderedSet.fromKeys=function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString=function(){
return this.__toString('OrderedSet {','}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet)&&isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet=isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL]=true;

OrderedSetPrototype.__empty=emptyOrderedSet;
OrderedSetPrototype.__make=makeOrderedSet;

function makeOrderedSet(map,ownerID){
var set=Object.create(OrderedSetPrototype);
set.size=map?map.size:0;
set._map=map;
set.__ownerID=ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET||(EMPTY_ORDERED_SET=makeOrderedSet(emptyOrderedMap()));}


createClass(Stack,IndexedCollection);



function Stack(value){
return value===null||value===undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of=function(){
return this(arguments);};


Stack.prototype.toString=function(){
return this.__toString('Stack [',']');};




Stack.prototype.get=function(index,notSetValue){
var head=this._head;
index=wrapIndex(this,index);
while(head&&index--){
head=head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek=function(){
return this._head&&this._head.value;};




Stack.prototype.push=function(){
if(arguments.length===0){
return this;}

var newSize=this.size+arguments.length;
var head=this._head;
for(var ii=arguments.length-1;ii>=0;ii--){
head={
value:arguments[ii],
next:head};}


if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pushAll=function(iter){
iter=IndexedIterable(iter);
if(iter.size===0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head={
value:value,
next:head};});


if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pop=function(){
return this.slice(1);};


Stack.prototype.unshift=function(){
return this.push.apply(this,arguments);};


Stack.prototype.unshiftAll=function(iter){
return this.pushAll(iter);};


Stack.prototype.shift=function(){
return this.pop.apply(this,arguments);};


Stack.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._head=undefined;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyStack();};


Stack.prototype.slice=function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

var resolvedBegin=resolveBegin(begin,this.size);
var resolvedEnd=resolveEnd(end,this.size);
if(resolvedEnd!==this.size){

return IndexedCollection.prototype.slice.call(this,begin,end);}

var newSize=this.size-resolvedBegin;
var head=this._head;
while(resolvedBegin--){
head=head.next;}

if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};




Stack.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
this.__altered=false;
return this;}

return makeStack(this.size,this._head,ownerID,this.__hash);};




Stack.prototype.__iterate=function(fn,reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node){
if(fn(node.value,iterations++,this)===false){
break;}

node=node.next;}

return iterations;};


Stack.prototype.__iterator=function(type,reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new Iterator(function(){
if(node){
var value=node.value;
node=node.next;
return iteratorValue(type,iterations++,value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack&&maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack=isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL]=true;
StackPrototype.withMutations=MapPrototype.withMutations;
StackPrototype.asMutable=MapPrototype.asMutable;
StackPrototype.asImmutable=MapPrototype.asImmutable;
StackPrototype.wasAltered=MapPrototype.wasAltered;


function makeStack(size,head,ownerID,hash){
var map=Object.create(StackPrototype);
map.size=size;
map._head=head;
map.__ownerID=ownerID;
map.__hash=hash;
map.__altered=false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK||(EMPTY_STACK=makeStack(0));}





function mixin(ctor,methods){
var keyCopier=function(key){ctor.prototype[key]=methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols&&
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator=Iterator;

mixin(Iterable,{



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size||0);
this.valueSeq().__iterate(function(v,i){array[i]=v;});
return array;},


toIndexedSeq:function(){
return new ToIndexedSequence(this);},


toJS:function(){
return this.toSeq().map(
function(value){return value&&typeof value.toJS==='function'?value.toJS():value;}).
__toJS();},


toJSON:function(){
return this.toSeq().map(
function(value){return value&&typeof value.toJSON==='function'?value.toJSON():value;}).
__toJS();},


toKeyedSeq:function(){
return new ToKeyedSequence(this,true);},


toMap:function(){

return Map(this.toKeyedSeq());},


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v,k){object[k]=v;});
return object;},


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());},


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);},


toSet:function(){

return Set(isKeyed(this)?this.valueSeq():this);},


toSetSeq:function(){
return new ToSetSequence(this);},


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();},


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);},


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);},





toString:function(){
return '[Iterable]';},


__toString:function(head,tail){
if(this.size===0){
return head+tail;}

return head+' '+this.toSeq().map(this.__toStringMapper).join(', ')+' '+tail;},





concat:function(){var values=SLICE$0.call(arguments,0);
return reify(this,concatFactory(this,values));},


includes:function(searchValue){
return this.some(function(value){return is(value,searchValue);});},


entries:function(){
return this.__iterator(ITERATE_ENTRIES);},


every:function(predicate,context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v,k,c){
if(!predicate.call(context,v,k,c)){
returnValue=false;
return false;}});


return returnValue;},


filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,true));},


find:function(predicate,context,notSetValue){
var entry=this.findEntry(predicate,context);
return entry?entry[1]:notSetValue;},


findEntry:function(predicate,context){
var found;
this.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
found=[k,v];
return false;}});


return found;},


findLastEntry:function(predicate,context){
return this.toSeq().reverse().findEntry(predicate,context);},


forEach:function(sideEffect,context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);},


join:function(separator){
assertNotInfinite(this.size);
separator=separator!==undefined?''+separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst=false:joined+=separator;
joined+=v!==null&&v!==undefined?v.toString():'';});

return joined;},


keys:function(){
return this.__iterator(ITERATE_KEYS);},


map:function(mapper,context){
return reify(this,mapFactory(this,mapper,context));},


reduce:function(reducer,initialReduction,context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length<2){
useFirst=true;}else 
{
reduction=initialReduction;}

this.__iterate(function(v,k,c){
if(useFirst){
useFirst=false;
reduction=v;}else 
{
reduction=reducer.call(context,reduction,v,k,c);}});


return reduction;},


reduceRight:function(reducer,initialReduction,context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed,arguments);},


reverse:function(){
return reify(this,reverseFactory(this,true));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,true));},


some:function(predicate,context){
return !this.every(not(predicate),context);},


sort:function(comparator){
return reify(this,sortFactory(this,comparator));},


values:function(){
return this.__iterator(ITERATE_VALUES);},





butLast:function(){
return this.slice(0,-1);},


isEmpty:function(){
return this.size!==undefined?this.size===0:!this.some(function(){return true;});},


count:function(predicate,context){
return ensureSize(
predicate?this.toSeq().filter(predicate,context):this);},



countBy:function(grouper,context){
return countByFactory(this,grouper,context);},


equals:function(other){
return deepEqual(this,other);},


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq=function(){return iterable.toSeq();};
return entriesSequence;},


filterNot:function(predicate,context){
return this.filter(not(predicate),context);},


findLast:function(predicate,context,notSetValue){
return this.toKeyedSeq().reverse().find(predicate,context,notSetValue);},


first:function(){
return this.find(returnTrue);},


flatMap:function(mapper,context){
return reify(this,flatMapFactory(this,mapper,context));},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,true));},


fromEntrySeq:function(){
return new FromEntriesSequence(this);},


get:function(searchKey,notSetValue){
return this.find(function(_,key){return is(key,searchKey);},undefined,notSetValue);},


getIn:function(searchKeyPath,notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step=iter.next()).done){
var key=step.value;
nested=nested&&nested.get?nested.get(key,NOT_SET):NOT_SET;
if(nested===NOT_SET){
return notSetValue;}}


return nested;},


groupBy:function(grouper,context){
return groupByFactory(this,grouper,context);},


has:function(searchKey){
return this.get(searchKey,NOT_SET)!==NOT_SET;},


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath,NOT_SET)!==NOT_SET;},


isSubset:function(iter){
iter=typeof iter.includes==='function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});},


isSuperset:function(iter){
iter=typeof iter.isSubset==='function'?iter:Iterable(iter);
return iter.isSubset(this);},


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();},


last:function(){
return this.toSeq().reverse().first();},


max:function(comparator){
return maxFactory(this,comparator);},


maxBy:function(mapper,comparator){
return maxFactory(this,comparator,mapper);},


min:function(comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator);},


minBy:function(mapper,comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator,mapper);},


rest:function(){
return this.slice(1);},


skip:function(amount){
return this.slice(Math.max(0,amount));},


skipLast:function(amount){
return reify(this,this.toSeq().reverse().skip(amount).reverse());},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,true));},


skipUntil:function(predicate,context){
return this.skipWhile(not(predicate),context);},


sortBy:function(mapper,comparator){
return reify(this,sortFactory(this,comparator,mapper));},


take:function(amount){
return this.slice(0,Math.max(0,amount));},


takeLast:function(amount){
return reify(this,this.toSeq().reverse().take(amount).reverse());},


takeWhile:function(predicate,context){
return reify(this,takeWhileFactory(this,predicate,context));},


takeUntil:function(predicate,context){
return this.takeWhile(not(predicate),context);},


valueSeq:function(){
return this.toIndexedSeq();},





hashCode:function(){
return this.__hash||(this.__hash=hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL]=true;
IterablePrototype[ITERATOR_SYMBOL]=IterablePrototype.values;
IterablePrototype.__toJS=IterablePrototype.toArray;
IterablePrototype.__toStringMapper=quoteString;
IterablePrototype.inspect=
IterablePrototype.toSource=function(){return this.toString();};
IterablePrototype.chain=IterablePrototype.flatMap;
IterablePrototype.contains=IterablePrototype.includes;


(function(){
try{
Object.defineProperty(IterablePrototype,'length',{
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error){
stack=error.stack;}

if(stack.indexOf('_wrapObject')===-1){
console&&console.warn&&console.warn(
'iterable.length has been deprecated, '+
'use iterable.size or iterable.count(). '+
'This warning will become a silent error in a future version. '+
stack);

return this.size;}}}});}




catch(e){}})();




mixin(KeyedIterable,{



flip:function(){
return reify(this,flipFactory(this));},


findKey:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry&&entry[0];},


findLastKey:function(predicate,context){
return this.toSeq().reverse().findKey(predicate,context);},


keyOf:function(searchValue){
return this.findKey(function(value){return is(value,searchValue);});},


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value,searchValue);});},


mapEntries:function(mapper,context){var this$0=this;
var iterations=0;
return reify(this,
this.toSeq().map(
function(v,k){return mapper.call(context,[k,v],iterations++,this$0);}).
fromEntrySeq());},



mapKeys:function(mapper,context){var this$0=this;
return reify(this,
this.toSeq().flip().map(
function(k,v){return mapper.call(context,k,v,this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL]=true;
KeyedIterablePrototype[ITERATOR_SYMBOL]=IterablePrototype.entries;
KeyedIterablePrototype.__toJS=IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper=function(v,k){return JSON.stringify(k)+': '+quoteString(v);};



mixin(IndexedIterable,{



toKeyedSeq:function(){
return new ToKeyedSequence(this,false);},





filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,false));},


findIndex:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry?entry[0]:-1;},


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key===undefined?-1:key;},


lastIndexOf:function(searchValue){
var key=this.toKeyedSeq().reverse().keyOf(searchValue);
return key===undefined?-1:key;},





reverse:function(){
return reify(this,reverseFactory(this,false));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,false));},


splice:function(index,removeNum){
var numArgs=arguments.length;
removeNum=Math.max(removeNum|0,0);
if(numArgs===0||numArgs===2&&!removeNum){
return this;}




index=resolveBegin(index,index<0?this.count():this.size);
var spliced=this.slice(0,index);
return reify(
this,
numArgs===1?
spliced:
spliced.concat(arrCopy(arguments,2),this.slice(index+removeNum)));},






findLastIndex:function(predicate,context){
var key=this.toKeyedSeq().findLastKey(predicate,context);
return key===undefined?-1:key;},


first:function(){
return this.get(0);},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,false));},


get:function(index,notSetValue){
index=wrapIndex(this,index);
return index<0||this.size===Infinity||
this.size!==undefined&&index>this.size?
notSetValue:
this.find(function(_,key){return key===index;},undefined,notSetValue);},


has:function(index){
index=wrapIndex(this,index);
return index>=0&&(this.size!==undefined?
this.size===Infinity||index<this.size:
this.indexOf(index)!==-1);},



interpose:function(separator){
return reify(this,interposeFactory(this,separator));},


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(),IndexedSeq.of,iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size=zipped.size*iterables.length;}

return reify(this,interleaved);},


last:function(){
return this.get(-1);},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,false));},


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this,zipWithFactory(this,defaultZipper,iterables));},


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0]=this;
return reify(this,zipWithFactory(this,zipper,iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL]=true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL]=true;



mixin(SetIterable,{



get:function(value,notSetValue){
return this.has(value)?value:notSetValue;},


includes:function(value){
return this.has(value);},





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has=IterablePrototype.includes;




mixin(KeyedSeq,KeyedIterable.prototype);
mixin(IndexedSeq,IndexedIterable.prototype);
mixin(SetSeq,SetIterable.prototype);

mixin(KeyedCollection,KeyedIterable.prototype);
mixin(IndexedCollection,IndexedIterable.prototype);
mixin(SetCollection,SetIterable.prototype);




function keyMapper(v,k){
return k;}


function entryMapper(v,k){
return [k,v];}


function not(predicate){
return function(){
return !predicate.apply(this,arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this,arguments);};}



function quoteString(value){
return typeof value==='string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a,b){
return a<b?1:a>b?-1:0;}


function hashIterable(iterable){
if(iterable.size===Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v,k){h=31*h+hashMerge(hash(v),hash(k))|0;}:
function(v,k){h=h+hashMerge(hash(v),hash(k))|0;}:
ordered?
function(v){h=31*h+hash(v)|0;}:
function(v){h=h+hash(v)|0;});

return murmurHashOfSize(size,h);}


function murmurHashOfSize(size,h){
h=imul(h,0xCC9E2D51);
h=imul(h<<15|h>>>-15,0x1B873593);
h=imul(h<<13|h>>>-13,5);
h=(h+0xE6546B64|0)^size;
h=imul(h^h>>>16,0x85EBCA6B);
h=imul(h^h>>>13,0xC2B2AE35);
h=smi(h^h>>>16);
return h;}


function hashMerge(a,b){
return a^b+0x9E3779B9+(a<<6)+(a>>2)|0;}


var Immutable={

Iterable:Iterable,

Seq:Seq,
Collection:Collection,
Map:Map,
OrderedMap:OrderedMap,
List:List,
Stack:Stack,
Set:Set,
OrderedSet:OrderedSet,

Record:Record,
Range:Range,
Repeat:Repeat,

is:is,
fromJS:fromJS};



return Immutable;});
});
__d('NavigatorBreadcrumbNavigationBar',function(global, require, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var NavigatorNavigationBarStyles=Platform.OS==='android'?
NavigatorNavigationBarStylesAndroid:NavigatorNavigationBarStylesIOS;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex!==undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index===presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index<presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar',
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex>fromIndex?progress:1-progress;
var oldDistToCenter=index-fromIndex;
var newDistToCenter=index-toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for '+index);

if(oldDistToCenter>0&&newDistToCenter===0||
newDistToCenter>0&&oldDistToCenter===0){
interpolate=Interpolators[index].RightToCenter;}else 
if(oldDistToCenter<0&&newDistToCenter===0||
newDistToCenter<0&&oldDistToCenter===0){
interpolate=Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter===newDistToCenter){
interpolate=Interpolators[index].RightToCenter;}else 
{
interpolate=Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this._setPropsIfExists('crumb_'+index,CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this._setPropsIfExists('icon_'+index,ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this._setPropsIfExists('separator_'+index,SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this._setPropsIfExists('title_'+index,TITLE_PROPS[index]);}

var right=this.refs['right_'+index];
if(right&&
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index<=max;index++){
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index<=max;index++){
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length-1;
for(var index=0;index<=max;index++){
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this._setPropsIfExists('icon_'+index,props);
this._setPropsIfExists('separator_'+index,props);
this._setPropsIfExists('title_'+index,props);
this._setPropsIfExists('right_'+index,props);},


componentWillMount:function(){
this._descriptors={
crumb:new Map(),
title:new Map(),
right:new Map()};},



render:function(){
var navState=this.props.navState;
var icons=navState&&navState.routeStack.map(this._getBreadcrumb);
var titles=navState.routeStack.map(this._getTitle);
var buttons=navState.routeStack.map(this._getRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_getBreadcrumb:function(route,index){
if(this._descriptors.crumb.has(route)){
return this._descriptors.crumb.get(route);}


var navBarRouteMapper=this.props.routeMapper;
var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var breadcrumbDescriptor=
React.createElement(View,{
key:'crumb_'+index,
ref:'crumb_'+index,
style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_'+index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,this.props.navigator)),

React.createElement(View,{ref:'separator_'+index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,this.props.navigator)));




this._descriptors.crumb=this._descriptors.crumb.set(route,breadcrumbDescriptor);
return breadcrumbDescriptor;},


_getTitle:function(route,index){
if(this._descriptors.title.has(route)){
return this._descriptors.title.get(route);}


var titleContent=this.props.routeMapper.titleContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var titleDescriptor=
React.createElement(View,{
key:'title_'+index,
ref:'title_'+index,
style:firstStyles.Title},
titleContent);


this._descriptors.title=this._descriptors.title.set(route,titleDescriptor);
return titleDescriptor;},


_getRightButton:function(route,index){
if(this._descriptors.right.has(route)){
return this._descriptors.right.get(route);}

var rightContent=this.props.routeMapper.rightContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

if(!rightContent){
this._descriptors.right=this._descriptors.right.set(route,null);
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
var rightButtonDescriptor=
React.createElement(View,{
key:'right_'+index,
ref:'right_'+index,
style:firstStyles.RightItem},
rightContent);


this._descriptors.right=this._descriptors.right.set(route,rightButtonDescriptor);
return rightButtonDescriptor;},


_setPropsIfExists:function(ref,props){
var ref=this.refs[ref];
ref&&ref.setNativeProps(props);}});



var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports=NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',function(global, require, module, exports) {  'use strict';



























var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var NAV_BAR_HEIGHT=NavigatorNavigationBarStylesAndroid.General.NavBarHeight;

var SPACING=8;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH+SEPARATOR_WIDTH;
var NAV_ELEMENT_HEIGHT=NAV_BAR_HEIGHT;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:0,
width:CRUMB_WIDTH,
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_ELEMENT_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_ELEMENT_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:0,
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent',
alignItems:'flex-start'};


var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:0,
right:0,
overflow:'hidden',
opacity:1,
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i<MAX_BREADCRUMBS;i++){
var crumbLeft=CRUMB_WIDTH*i+SPACING;
LEFT[i]={
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i]={
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft+ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=crumbLeft+50;
RIGHT[i]={
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight+ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0]={
Crumb:merge(CRUMB_BASE,{left:SPACING+CRUMB_WIDTH}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title=merge(FIRST_TITLE_BASE,{opacity:0});
RIGHT[0].Title=merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports={
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStylesAndroid',function(global, require, module, exports) {  'use strict';



























var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');


var NAV_BAR_HEIGHT=56;
var TITLE_LEFT=72;
var BUTTON_SIZE=24;
var TOUCH_TARGT_SIZE=48;
var BUTTON_HORIZONTAL_MARGIN=16;

var BUTTON_EFFECTIVE_MARGIN=BUTTON_HORIZONTAL_MARGIN-(TOUCH_TARGT_SIZE-BUTTON_SIZE)/2;
var NAV_ELEMENT_HEIGHT=NAV_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
bottom:0,
left:0,
right:0,
alignItems:'flex-start',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent',
marginLeft:TITLE_LEFT},

LeftButton:{
position:'absolute',
top:0,
left:BUTTON_EFFECTIVE_MARGIN,
overflow:'hidden',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:0,
right:BUTTON_EFFECTIVE_MARGIN,
overflow:'hidden',
alignItems:'flex-end',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports={
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:0,
TotalNavHeight:NAV_BAR_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',function(global, require, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(')+1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE)||
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b'+paramName+'\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{')+1,fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0=matVar[0];
m1=matVar[1];
m2=matVar[2];
m3=matVar[3];
m4=matVar[4];
m5=matVar[5];
m6=matVar[6];
m7=matVar[7];
m8=matVar[8];
m9=matVar[9];
m10=matVar[10];
m11=matVar[11];
m12=matVar[12];
m13=matVar[13];
m14=matVar[14];
m15=matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar=retVar||
m0!==matVar[0]||
m1!==matVar[1]||
m2!==matVar[2]||
m3!==matVar[3]||
m4!==matVar[4]||
m5!==matVar[5]||
m6!==matVar[6]||
m7!==matVar[7]||
m8!==matVar[8]||
m9!==matVar[9]||
m10!==matVar[10]||
m11!==matVar[11]||
m12!==matVar[12]||
m13!==matVar[13]||
m14!==matVar[14]||
m15!==matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0]=matVar[0]*x;
matVar[1]=matVar[1]*x;
matVar[2]=matVar[2]*x;
matVar[3]=matVar[3]*x;
matVar[4]=matVar[4]*y;
matVar[5]=matVar[5]*y;
matVar[6]=matVar[6]*y;
matVar[7]=matVar[7]*y;
matVar[8]=matVar[8]*z;
matVar[9]=matVar[9]*z;
matVar[10]=matVar[10]*z;
matVar[11]=matVar[11]*z;
matVar[12]=matVar[12];
matVar[13]=matVar[13];
matVar[14]=matVar[14];
matVar[15]=matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12]=matVar[0]*x+matVar[4]*y+matVar[8]*z+matVar[12];
matVar[13]=matVar[1]*x+matVar[5]*y+matVar[9]*z+matVar[13];
matVar[14]=matVar[2]*x+matVar[6]*y+matVar[10]*z+matVar[14];
matVar[15]=matVar[3]*x+matVar[7]*y+matVar[11]*z+matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat+xQuat;
var y2Quat=yQuat+yQuat;
var z2Quat=zQuat+zQuat;
var xxQuat=xQuat*x2Quat;
var xyQuat=xQuat*y2Quat;
var xzQuat=xQuat*z2Quat;
var yyQuat=yQuat*y2Quat;
var yzQuat=yQuat*z2Quat;
var zzQuat=zQuat*z2Quat;
var wxQuat=wQuat*x2Quat;
var wyQuat=wQuat*y2Quat;
var wzQuat=wQuat*z2Quat;

var quatMat0=1-(yyQuat+zzQuat);
var quatMat1=xyQuat+wzQuat;
var quatMat2=xzQuat-wyQuat;
var quatMat4=xyQuat-wzQuat;
var quatMat5=1-(xxQuat+zzQuat);
var quatMat6=yzQuat+wxQuat;
var quatMat8=xzQuat+wyQuat;
var quatMat9=yzQuat-wxQuat;
var quatMat10=1-(xxQuat+yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0]=b0*a00+b1*a10+b2*a20;
matVar[1]=b0*a01+b1*a11+b2*a21;
matVar[2]=b0*a02+b1*a12+b2*a22;
matVar[3]=b0*a03+b1*a13+b2*a23;
b0=quatMat4;b1=quatMat5;b2=quatMat6;
matVar[4]=b0*a00+b1*a10+b2*a20;
matVar[5]=b0*a01+b1*a11+b2*a21;
matVar[6]=b0*a02+b1*a12+b2*a22;
matVar[7]=b0*a03+b1*a13+b2*a23;
b0=quatMat8;b1=quatMat9;b2=quatMat10;
matVar[8]=b0*a00+b1*a10+b2*a20;
matVar[9]=b0*a01+b1*a11+b2*a21;
matVar[10]=b0*a02+b1*a12+b2*a22;
matVar[11]=b0*a03+b1*a13+b2*a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0]=opVar[0];
matVar[1]=0;
matVar[2]=0;
matVar[3]=0;
matVar[4]=0;
matVar[5]=opVar[1];
matVar[6]=0;
matVar[7]=0;
matVar[8]=0;
matVar[9]=0;
matVar[10]=opVar[2];
matVar[11]=0;
matVar[12]=0;
matVar[13]=0;
matVar[14]=0;
matVar[15]=1;},


transformTranslate:function(matVar,opVar){

matVar[0]=1;
matVar[1]=0;
matVar[2]=0;
matVar[3]=0;
matVar[4]=0;
matVar[5]=1;
matVar[6]=0;
matVar[7]=0;
matVar[8]=0;
matVar[9]=0;
matVar[10]=1;
matVar[11]=0;
matVar[12]=opVar[0];
matVar[13]=opVar[1];
matVar[14]=opVar[2];
matVar[15]=1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat+xQuat;
var y2Quat=yQuat+yQuat;
var z2Quat=zQuat+zQuat;
var xxQuat=xQuat*x2Quat;
var xyQuat=xQuat*y2Quat;
var xzQuat=xQuat*z2Quat;
var yyQuat=yQuat*y2Quat;
var yzQuat=yQuat*z2Quat;
var zzQuat=zQuat*z2Quat;
var wxQuat=wQuat*x2Quat;
var wyQuat=wQuat*y2Quat;
var wzQuat=wQuat*z2Quat;

var quatMat0=1-(yyQuat+zzQuat);
var quatMat1=xyQuat+wzQuat;
var quatMat2=xzQuat-wyQuat;
var quatMat4=xyQuat-wzQuat;
var quatMat5=1-(xxQuat+zzQuat);
var quatMat6=yzQuat+wxQuat;
var quatMat8=xzQuat+wyQuat;
var quatMat9=yzQuat-wxQuat;
var quatMat10=1-(xxQuat+yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0]=b0;
matVar[1]=b1;
matVar[2]=b2;
matVar[3]=0;
b0=quatMat4;b1=quatMat5;b2=quatMat6;
matVar[4]=b0;
matVar[5]=b1;
matVar[6]=b2;
matVar[7]=0;
b0=quatMat8;b1=quatMat9;b2=quatMat10;
matVar[8]=b0;
matVar[9]=b1;
matVar[10]=b2;
matVar[11]=0;
matVar[12]=0;
matVar[13]=0;
matVar[14]=0;
matVar[15]=1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n'+
'    var prevVal = result.'+name+';\n'+
'    result.'+name+' = '+tmpVarName+';\n'+
'    didChange = didChange  || ('+tmpVarName+' !== prevVal);\n'+
'  } else {\n'+
'    result.'+name+' = '+tmpVarName+';\n'+
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio='round' in anim;
var roundRatio=anim.round;
var fn='  ratio = (value - '+anim.min+') / '+(anim.max-anim.min)+';\n';
if(!anim.extrapolate){
fn+='  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round('+roundRatio+' * ':'';
var roundClose=hasRoundRatio?') / '+roundRatio:'';
fn+=
'  '+tmpVarName+' = '+
roundOpen+
'('+from+' * (1 - ratio) + '+to+' * ratio)'+
roundClose+';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = '+constantExpression+';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= '+(
anim.threshold+' ? '+anim.to+' : '+anim.from)+';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name+'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims){
if(ShouldAllocateReusableOperationVars[name]){
ret+='var '+operationVar(name)+' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n'+statements.join('\n')+'\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name)+'['+index+']';
if(anim.from[dimension]!==undefined&&anim.to[dimension]!==undefined){
return '  '+anim.from[dimension]!==anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess+' = '+anim.from[dimension]+';';}else 
{
return '  '+fieldAccess+' = '+InitialOperationField[name][index]+';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex<16;varIndex++){
unrolledVars.push('m'+varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? '+
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i<orderedMatrixOperations.length;i++){
var opName=orderedMatrixOperations[i];
if(i===0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn+=createReusableOperationVars(anims);
fn+='return function(result, value) {\n';
fn+='  var didChange = false;\n';
fn+='  var nextScalarVal;\n';
fn+='  var ratio;\n';

for(var name in anims){
var anim=anims[name];
if(anim.type==='linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name===TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn+=newlines(setOperations);}else 
{
fn+=computeNextValLinearScalar(anim,'nextScalarVal');
fn+=setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type==='constant'){
fn+=computeNextValConstant(anim);
fn+=setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type==='step'){
fn+=computeNextValStep(anim);
fn+=setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type==='identity'){
fn+=computeNextValIdentity(anim);
fn+=setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn+=newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn+='  return didChange;\n';
fn+='};\n';
fn+='})()';
return fn;};







var buildStyleInterpolator=function(anims){

var interpolator=null;
function lazyStyleInterpolator(result,value){
if(interpolator===null){
interpolator=Function(createFunctionString(anims))();}

return interpolator(result,value);}

return lazyStyleInterpolator;};


module.exports=buildStyleInterpolator;
});
__d('NavigatorNavigationBarStylesIOS',function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT+STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:0,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH/2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH/3,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH/3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2*SCREEN_WIDTH/3-0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH/2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports={
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('NavigatorNavigationBar',function(global, require, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');
var Platform=require('Platform');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var NavigatorNavigationBarStyles=Platform.OS==='android'?
NavigatorNavigationBarStylesAndroid:NavigatorNavigationBarStylesIOS;

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex!==undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar',

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}).
isRequired,
navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

navigationStyles:React.PropTypes.object,
style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles,
StylesAndroid:NavigatorNavigationBarStylesAndroid,
StylesIOS:NavigatorNavigationBarStylesIOS},


getDefaultProps:function(){
return {
navigationStyles:NavigatorNavigationBarStyles};},



componentWillMount:function(){var _this=this;
this._components={};
this._descriptors={};

COMPONENT_NAMES.forEach(function(componentName){
_this._components[componentName]=new Map();
_this._descriptors[componentName]=new Map();});},



_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps={};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack=this._reusableProps[componentName]=[];}

var props=propStack[index];
if(!props){
props=propStack[index]={style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex>fromIndex?progress:1-progress;
var oldDistToCenter=index-fromIndex;
var newDistToCenter=index-toIndex;
var interpolate;
if(oldDistToCenter>0&&newDistToCenter===0||
newDistToCenter>0&&oldDistToCenter===0){
interpolate=this.props.navigationStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter<0&&newDistToCenter===0||
newDistToCenter<0&&oldDistToCenter===0){
interpolate=this.props.navigationStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter===newDistToCenter){
interpolate=this.props.navigationStyles.Interpolators.RightToCenter;}else 
{
interpolate=this.props.navigationStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this._components[componentName].get(this.props.navState.routeStack[index]);
var props=this._getReusableProps(componentName,index);
if(component&&interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index<=max;index++){
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navBarStyle={
height:this.props.navigationStyles.General.TotalNavHeight};

var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._getComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,navBarStyle,this.props.style]},
components));},




_getComponent:function(
componentName,
route,
index)
{var _this2=this;
if(this._descriptors[componentName].includes(route)){
return this._descriptors[componentName].get(route);}


var rendered=null;

var content=this.props.routeMapper[componentName](
this.props.navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index===navStatePresentedIndex(this.props.navState)?
this.props.navigationStyles.Stages.Center:
this.props.navigationStyles.Stages.Left;
rendered=
React.createElement(View,{
ref:function(ref){
_this2._components[componentName]=_this2._components[componentName].set(route,ref);},

style:initialStage[componentName]},
content);



this._descriptors[componentName]=this._descriptors[componentName].set(route,rendered);
return rendered;}});





var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports=NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width*0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width*0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=babelHelpers.extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH*0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH*0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheUp={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:-Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:-Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheDown={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=babelHelpers.extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheDown=babelHelpers.extends({},
FromTheRight,{
transformTranslate:{
from:{y:SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheTop=babelHelpers.extends({},
FromTheRight,{
transformTranslate:{
from:{y:-SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:-SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:100,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:100,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3/5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=babelHelpers.extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseDownUpGesture=babelHelpers.extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'down-to-up'});


var BaseUpDownGesture=babelHelpers.extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'up-to-down'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:babelHelpers.extends({},
BaseConfig),


FloatFromRight:babelHelpers.extends({},
BaseConfig),


FloatFromLeft:babelHelpers.extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:babelHelpers.extends({},
BaseConfig,{
gestures:{
pop:babelHelpers.extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:babelHelpers.extends({},
BaseConfig,{
gestures:null,
defaultTransitionVelocity:3,
springFriction:20,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:babelHelpers.extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:babelHelpers.extends({},
BaseConfig,{
gestures:{
jumpBack:babelHelpers.extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:babelHelpers.extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}}),


VerticalUpSwipeJump:babelHelpers.extends({},
BaseConfig,{
gestures:{
jumpBack:babelHelpers.extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:babelHelpers.extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheDown),
out:buildStyleInterpolator(ToTheUp)}}),


VerticalDownSwipeJump:babelHelpers.extends({},
BaseConfig,{
gestures:{
jumpBack:babelHelpers.extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:babelHelpers.extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheTop),
out:buildStyleInterpolator(ToTheDown)}})};




module.exports=NavigatorSceneConfigs;
});
__d('PanResponder',function(global, require, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX=0;
gestureState.moveY=0;
gestureState.x0=0;
gestureState.y0=0;
gestureState.dx=0;
gestureState.dy=0;
gestureState.vx=0;
gestureState.vy=0;
gestureState.numberActiveTouches=0;

gestureState._accountsForMovesUpTo=0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
gestureState.moveX=currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY=currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx+(x-prevX);
var nextDY=gestureState.dy+(y-prevY);


var dt=
touchHistory.mostRecentTimeStamp-gestureState._accountsForMovesUpTo;
gestureState.vx=(nextDX-gestureState.dx)/dt;
gestureState.vy=(nextDY-gestureState.dy)/dt;

gestureState.dx=nextDX;
gestureState.dy=nextDY;
gestureState._accountsForMovesUpTo=touchHistory.mostRecentTimeStamp;},


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder===undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder===undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length===1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches=e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture!==undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo===touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetPanResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0=currentCentroidX(e.touchHistory);
gestureState.y0=currentCentroidY(e.touchHistory);
gestureState.dx=0;
gestureState.dy=0;
config.onPanResponderGrant&&config.onPanResponderGrant(e,gestureState);

return config.onShouldBlockNativeResponder===undefined?true:
config.onShouldBlockNativeResponder();},


onResponderReject:function(e){
config.onPanResponderReject&&config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease&&config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
config.onPanResponderStart&&config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo===touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove&&config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
config.onPanResponderEnd&&config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate&&
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest===undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports=PanResponder;
});
__d('TouchHistoryMath',function(global, require, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches===1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData!==null){
if(oneTouchData.touchActive&&oneTouchData.currentTimeStamp>touchesChangedAfter){
total+=ofCurrent&&isXAxis?oneTouchData.currentPageX:
ofCurrent&&!isXAxis?oneTouchData.currentPageY:
!ofCurrent&&isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count=1;}}else 

{
for(var i=0;i<touchBank.length;i++){
var touchTrack=touchBank[i];
if(touchTrack!==null&&
touchTrack!==undefined&&
touchTrack.touchActive&&
touchTrack.currentTimeStamp>=touchesChangedAfter){
var toAdd;
if(ofCurrent&&isXAxis){
toAdd=touchTrack.currentPageX;}else 
if(ofCurrent&&!isXAxis){
toAdd=touchTrack.currentPageY;}else 
if(!ofCurrent&&isXAxis){
toAdd=touchTrack.previousPageX;}else 
{
toAdd=touchTrack.previousPageY;}

total+=toAdd;
count++;}}}



return count>0?total/count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports=TouchHistoryMath;
});
__d('clamp',function(global, require, module, exports) {  function 























clamp(min,value,max){
if(value<min){
return min;}

if(value>max){
return max;}

return value;}


module.exports=clamp;
});
__d('rebound/rebound.js',function(global, require, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util={};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind=function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend=function extend(target,source){
for(var key in source){
if(source.hasOwnProperty(key)){
target[key]=source[key];}}};









var SpringSystem=rebound.SpringSystem=function SpringSystem(looper){
this._springRegistry={};
this._activeSprings=[];
this.listeners=[];
this._idleSpringIndices=[];
this.looper=looper||new AnimationLooper();
this.looper.springSystem=this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper=looper;
looper.springSystem=this;},






createSpring:function(tension,friction){
var springConfig;
if(tension===undefined||friction===undefined){
springConfig=SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig=
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness===undefined||speed===undefined){
springConfig=SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig=
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry){
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()]=spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length>0){this._idleSpringIndices.pop();}
for(var i=0,len=this._activeSprings.length;i<len;i++){
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time/1000.0,deltaTime/1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length>0){
var idx=this._idleSpringIndices.pop();
idx>=0&&this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis===-1){
this._lastTimeMillis=currentTimeMillis-1;}

var ellapsedMillis=currentTimeMillis-this._lastTimeMillis;
this._lastTimeMillis=currentTimeMillis;

var i=0,len=this.listeners.length;
for(i=0;i<len;i++){
listener=this.listeners[i];
listener.onBeforeIntegrate&&listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length===0){
this._isIdle=true;
this._lastTimeMillis=-1;}


for(i=0;i<len;i++){
listener=this.listeners[i];
listener.onAfterIntegrate&&listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring)==-1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle=false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners=[];}});


















var Spring=rebound.Spring=function Spring(springSystem){
this._id='s'+Spring._ID++;
this._springSystem=springSystem;
this.listeners=[];
this._currentState=new PhysicsState();
this._previousState=new PhysicsState();
this._tempState=new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners=[];
this.frames=[];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig=springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue=currentValue;
this._currentState.position=currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue-state.position);},








setEndValue:function(endValue){
if(this._endValue==endValue&&this.isAtRest()){
return this;}

this._startValue=this.getCurrentValue();
this._endValue=endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i<len;i++){
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange&&onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity===this._currentState.velocity){
return this;}

this._currentState.velocity=velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold=restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold=displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled=enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension>0&&(
start<end&&this.getCurrentValue()>end||
start>end&&this.getCurrentValue()<end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest&&this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime>Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime=Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator+=adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator>=Spring.SOLVER_TIMESTEP_SEC){

this._timeAccumulator-=Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator<Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position=position;
this._previousState.velocity=velocity;}


aVelocity=velocity;
aAcceleration=
tension*(this._endValue-tempPosition)-friction*velocity;

tempPosition=position+aVelocity*Spring.SOLVER_TIMESTEP_SEC*0.5;
tempVelocity=
velocity+aAcceleration*Spring.SOLVER_TIMESTEP_SEC*0.5;
bVelocity=tempVelocity;
bAcceleration=
tension*(this._endValue-tempPosition)-friction*tempVelocity;

tempPosition=position+bVelocity*Spring.SOLVER_TIMESTEP_SEC*0.5;
tempVelocity=
velocity+bAcceleration*Spring.SOLVER_TIMESTEP_SEC*0.5;
cVelocity=tempVelocity;
cAcceleration=
tension*(this._endValue-tempPosition)-friction*tempVelocity;

tempPosition=position+cVelocity*Spring.SOLVER_TIMESTEP_SEC*0.5;
tempVelocity=
velocity+cAcceleration*Spring.SOLVER_TIMESTEP_SEC*0.5;
dVelocity=tempVelocity;
dAcceleration=
tension*(this._endValue-tempPosition)-friction*tempVelocity;

dxdt=
1.0/6.0*(aVelocity+2.0*(bVelocity+cVelocity)+dVelocity);
dvdt=1.0/6.0*(
aAcceleration+2.0*(bAcceleration+cAcceleration)+dAcceleration);


position+=dxdt*Spring.SOLVER_TIMESTEP_SEC;
velocity+=dvdt*Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position=tempPosition;
this._tempState.velocity=tempVelocity;

this._currentState.position=position;
this._currentState.velocity=velocity;

if(this._timeAccumulator>0){
this._interpolate(this._timeAccumulator/Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest()||
this._overshootClampingEnabled&&this.isOvershooting()){

if(this._springConfig.tension>0){
this._startValue=this._endValue;
this._currentState.position=this._endValue;}else 
{
this._endValue=this._currentState.position;
this._startValue=this._endValue;}

this.setVelocity(0);
isAtRest=true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest=false;
notifyActivate=true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest=true;
notifyAtRest=true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i<len;i++){
var listener=this.listeners[i];
if(notifyActivate&&listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest&&listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest()||!this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity)<this._restSpeedThreshold&&(
this.getDisplacementDistanceForState(this._currentState)<=
this._displacementFromRestThreshold||
this._springConfig.tension===0);},






setAtRest:function(){
this._endValue=this._currentState.position;
this._tempState.position=this._currentState.position;
this._currentState.velocity=0;
return this;},


_interpolate:function(alpha){
this._currentState.position=this._currentState.position*
alpha+this._previousState.position*(1-alpha);
this._currentState.velocity=this._currentState.velocity*
alpha+this._previousState.velocity*(1-alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners=[];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue()-value)<=
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig=
function SpringConfig(tension,friction){
this.tension=tension;
this.friction=friction;};







var AnimationLooper=rebound.AnimationLooper=function AnimationLooper(){
this.springSystem=null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run=function(){
util.onFrame(_run);};};









rebound.SimulationLooper=function SimulationLooper(timestep){
this.springSystem=null;
var time=0;
var running=false;
timestep=timestep||16.667;

this.run=function(){
if(running){
return;}

running=true;
while(!this.springSystem.getIsIdle()){
this.springSystem.loop(time+=timestep);}

running=false;};};








rebound.SteppingSimulationLooper=function(timestep){
this.springSystem=null;
var time=0;



this.run=function(){};


this.step=function(timestep){
this.springSystem.loop(time+=timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter={
tensionFromOrigamiValue:function(oValue){
return (oValue-30.0)*3.62+194.0;},


origamiValueFromTension:function(tension){
return (tension-194.0)/3.62+30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue-8.0)*3.0+25.0;},


origamiFromFriction:function(friction){
return (friction-25.0)/3.0+8.0;}};










var BouncyConversion=rebound.BouncyConversion=function(bounciness,speed){
this.bounciness=bounciness;
this.speed=speed;
var b=this.normalize(bounciness/1.7,0,20.0);
b=this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed/1.7,0,20.0);
this.bouncyTension=this.projectNormal(s,0.5,200);
this.bouncyFriction=this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value-startValue)/(endValue-startValue);},


projectNormal:function(n,start,end){
return start+n*(end-start);},


linearInterpolation:function(t,start,end){
return t*end+(1.0-t)*start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2*t-t*t,start,end);},


b3Friction1:function(x){
return 0.0007*Math.pow(x,3)-
0.031*Math.pow(x,2)+0.64*x+1.28;},


b3Friction2:function(x){
return 0.000044*Math.pow(x,3)-
0.006*Math.pow(x,2)+0.36*x+2.;},


b3Friction3:function(x){
return 0.00000045*Math.pow(x,3)-
0.000332*Math.pow(x,2)+0.1078*x+5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension<=18){
friction=this.b3Friction1(tension);}else 
if(tension>18&&tension<=44){
friction=this.b3Friction2(tension);}else 
{
friction=this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG=
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB=function(color){
if(colorCache[color]){
return colorCache[color];}

color=color.replace('#','');
if(color.length===3){
color=color[0]+color[0]+color[1]+color[1]+color[2]+color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color]=ret;
return ret;};


util.rgbToHex=function(r,g,b){
r=r.toString(16);
g=g.toString(16);
b=b.toString(16);
r=r.length<2?'0'+r:r;
g=g.length<2?'0'+g:g;
b=b.length<2?'0'+b:b;
return '#'+r+g+b;};


var MathUtil=rebound.MathUtil={








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh-fromLow;
var toRangeSize=toHigh-toLow;
var valueScale=(value-fromLow)/fromRangeSize;
return toLow+valueScale*toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow=fromLow===undefined?0:fromLow;
fromHigh=fromHigh===undefined?1:fromHigh;
startColor=util.hexToRGB(startColor);
endColor=util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb('+r+','+g+','+b+')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg*Math.PI/180;},


radiansToDegrees:function(rad){
return rad*180/Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx!=-1&&array.splice(idx,1);}


var _onFrame;
if(typeof window!=='undefined'){
_onFrame=window.requestAnimationFrame||
window.webkitRequestAnimationFrame||
window.mozRequestAnimationFrame||
window.msRequestAnimationFrame||
window.oRequestAnimationFrame||
function(callback){
window.setTimeout(callback,1000/60);};}


if(!_onFrame&&typeof process!=='undefined'&&process.title==='node'){
_onFrame=setImmediate;}



util.onFrame=function onFrame(func){
return _onFrame(func);};




if(typeof exports!='undefined'){
util.extend(exports,rebound);}else 
if(typeof window!='undefined'){
window.rebound=rebound;}})();
});
__d('NavigatorIOS',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('PickerIOS',function(global, require, module, exports) {  'use strict';













module.exports=require('UnimplementedView');
});
__d('ProgressBarAndroid',function(global, require, module, exports) {  'use strict';











var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactPropTypes=require('ReactPropTypes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var STYLE_ATTRIBUTES=[
'Horizontal',
'Small',
'Large',
'Inverse',
'SmallInverse',
'LargeInverse'];


var indeterminateType=function(props,propName,componentName){
var checker=function(){
var indeterminate=props[propName];
var styleAttr=props.styleAttr;
if(!indeterminate&&styleAttr!=='Horizontal'){
return new Error('indeterminate=false is only valid for styleAttr=Horizontal');}};



return ReactPropTypes.bool(props,propName,componentName)||checker();};

























var ProgressBarAndroid=React.createClass({displayName:'ProgressBarAndroid',
propTypes:babelHelpers.extends({},
View.propTypes,{










styleAttr:ReactPropTypes.oneOf(STYLE_ATTRIBUTES),




indeterminate:indeterminateType,



progress:ReactPropTypes.number,



color:ReactPropTypes.string,



testID:ReactPropTypes.string}),


getDefaultProps:function(){
return {
styleAttr:'Large',
indeterminate:true};},



mixins:[NativeMethodsMixin],

render:function(){
return React.createElement(AndroidProgressBar,this.props);}});



var AndroidProgressBar=requireNativeComponent('AndroidProgressBar',ProgressBarAndroid);

module.exports=ProgressBarAndroid;
});
__d('ProgressViewIOS',function(global, require, module, exports) {  'use strict';













var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummyProgressViewIOS=React.createClass({displayName:'DummyProgressViewIOS',
render:function(){
return (
React.createElement(View,{style:[styles.dummy,this.props.style]},
React.createElement(Text,{style:styles.text},'ProgressViewIOS is not supported on this platform!')));}});







var styles=StyleSheet.create({
dummy:{
width:120,
height:20,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center'},

text:{
color:'#333333',
margin:5,
fontSize:10}});



module.exports=DummyProgressViewIOS;
});
__d('SegmentedControlIOS',function(global, require, module, exports) {  'use strict';













var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummySegmentedControlIOS=React.createClass({displayName:'DummySegmentedControlIOS',
render:function(){
return (
React.createElement(View,{style:[styles.dummy,this.props.style]},
React.createElement(Text,{style:styles.text},'SegmentedControlIOS is not supported on this platform!')));}});







var styles=StyleSheet.create({
dummy:{
width:120,
height:50,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center'},

text:{
color:'#333333',
margin:5,
fontSize:10}});



module.exports=DummySegmentedControlIOS;
});
__d('SliderIOS',function(global, require, module, exports) {  'use strict';












module.exports=require('UnimplementedView');
});
__d('SnapshotViewIOS',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('Switch',function(global, require, module, exports) {  'use strict';







var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');









var Switch=React.createClass({displayName:'Switch',
propTypes:babelHelpers.extends({},
View.propTypes,{




value:React.PropTypes.bool,




disabled:React.PropTypes.bool,



onValueChange:React.PropTypes.func,



testID:React.PropTypes.string,





tintColor:React.PropTypes.string,




onTintColor:React.PropTypes.string,




thumbTintColor:React.PropTypes.string}),


getDefaultProps:function(){
return {
value:false,
disabled:false};},



mixins:[NativeMethodsMixin],

_rctSwitch:{},
_onChange:function(event){
this.props.onChange&&this.props.onChange(event);
this.props.onValueChange&&this.props.onValueChange(event.nativeEvent.value);



if(Platform.OS==='android'){
this._rctSwitch.setNativeProps({on:this.props.value});}else 
{
this._rctSwitch.setNativeProps({value:this.props.value});}},



render:function(){var _this=this;
var props=babelHelpers.extends({},this.props);
props.onStartShouldSetResponder=function(){return true;};
props.onResponderTerminationRequest=function(){return false;};
if(Platform.OS==='android'){
props.enabled=!this.props.disabled;
props.on=this.props.value;
props.style=[styles.rctSwitchAndroid,this.props.style];}else 
if(Platform.OS==='ios'){
props.style=[styles.rctSwitchIOS,this.props.style];}

return (
React.createElement(RCTSwitch,babelHelpers.extends({},
props,{
ref:function(ref){_this._rctSwitch=ref;},
onChange:this._onChange})));}});





var styles=StyleSheet.create({
rctSwitchIOS:{
height:31,
width:51},

rctSwitchAndroid:{
height:27,
width:40}});



if(Platform.OS==='android'){
var RCTSwitch=requireNativeComponent('AndroidSwitch',Switch,{
nativeOnly:{onChange:true,on:true,enabled:true}});}else 

{
var RCTSwitch=requireNativeComponent('RCTSwitch',Switch,{
nativeOnly:{onChange:true}});}



module.exports=Switch;
});
__d('PullToRefreshViewAndroid',function(global, require, module, exports) {  'use strict';











var React=require('React');
var RefreshLayoutConsts=require('NativeModules').UIManager.AndroidSwipeRefreshLayout.Constants;
var View=require('View');

var onlyChild=require('onlyChild');
var processColor=require('processColor');
var requireNativeComponent=require('requireNativeComponent');

var NATIVE_REF='native_swiperefreshlayout';





var PullToRefreshViewAndroid=React.createClass({displayName:'PullToRefreshViewAndroid',
statics:{
SIZE:RefreshLayoutConsts.SIZE},


propTypes:babelHelpers.extends({},
View.propTypes,{



enabled:React.PropTypes.bool,



colors:React.PropTypes.arrayOf(React.PropTypes.string),



progressBackgroundColor:React.PropTypes.string,



refreshing:React.PropTypes.bool,



size:React.PropTypes.oneOf(RefreshLayoutConsts.SIZE.DEFAULT,RefreshLayoutConsts.SIZE.LARGE)}),


getInnerViewNode:function(){
return this.refs[NATIVE_REF];},


render:function(){
return (
React.createElement(NativePullToRefresh,{
colors:this.props.colors&&this.props.colors.map(processColor),
enabled:this.props.enabled,
onRefresh:this._onRefresh,
progressBackgroundColor:this.props.progressBackgroundColor,
ref:NATIVE_REF,
refreshing:this.props.refreshing,
size:this.props.size,
style:this.props.style},
onlyChild(this.props.children)));},




_onRefresh:function(){
this.props.onRefresh&&this.props.onRefresh();
this.refs[NATIVE_REF].setNativeProps({refreshing:!!this.props.refreshing});}});



var NativePullToRefresh=requireNativeComponent(
'AndroidSwipeRefreshLayout',
PullToRefreshViewAndroid);


module.exports=PullToRefreshViewAndroid;
});
__d('SwitchAndroid',function(global, require, module, exports) {  'use strict';











var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';




var SwitchAndroid=React.createClass({displayName:'SwitchAndroid',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{



value:PropTypes.bool,



disabled:PropTypes.bool,



onValueChange:PropTypes.func,



testID:PropTypes.string}),


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){


this.refs[SWITCH].setNativeProps({on:this.props.value});

if(this.props.value===event.nativeEvent.value||this.props.disabled){
return;}


this.props.onChange&&this.props.onChange(event);
this.props.onValueChange&&this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RKSwitch,{
ref:SWITCH,
style:this.props.style,
enabled:!this.props.disabled,
on:this.props.value,
onChange:this._onChange,
testID:this.props.testID,
onStartShouldSetResponder:function(){return true;},
onResponderTerminationRequest:function(){return false;}}));}});





var RKSwitch=requireNativeComponent('AndroidSwitch',SwitchAndroid,{
nativeOnly:{
on:true,
enabled:true}});



module.exports=SwitchAndroid;
});
__d('SwitchIOS',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummySwitchIOS=React.createClass({displayName:'DummySwitchIOS',
render:function(){
return (
React.createElement(View,{style:[styles.dummySwitchIOS,this.props.style]},
React.createElement(Text,{style:styles.text},'SwitchIOS is not supported on this platform!')));}});





var styles=StyleSheet.create({
dummySwitchIOS:{
width:120,
height:50,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center'},

text:{
color:'#333333',
margin:5,
fontSize:10}});



module.exports=DummySwitchIOS;
});
__d('TabBarIOS',function(global, require, module, exports) {  'use strict';












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');

var DummyTabBarIOS=React.createClass({displayName:'DummyTabBarIOS',
render:function(){
return (
React.createElement(View,{style:[this.props.style,styles.tabGroup]},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



module.exports=DummyTabBarIOS;
});
__d('TextInput',function(global, require, module, exports) {  'use strict';












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var UIManager=require('UIManager');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onTextInput:true,
children:true};


var notMultiline={};



if(Platform.OS==='android'){
var AndroidTextInput=requireNativeComponent('AndroidTextInput',null);}else 
if(Platform.OS==='ios'){
var RCTTextView=requireNativeComponent('RCTTextView',null);
var RCTTextField=requireNativeComponent('RCTTextField',null);}

























var TextInput=React.createClass({displayName:'TextInput',
statics:{

State:TextInputState},


propTypes:babelHelpers.extends({},
View.propTypes,{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,




autoFocus:PropTypes.bool,




textAlign:PropTypes.oneOf([
'start',
'center',
'end']),





textAlignVertical:PropTypes.oneOf([
'top',
'center',
'bottom']),




editable:PropTypes.bool,








keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),





keyboardAppearance:PropTypes.oneOf([
'default',
'light',
'dark']),





returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),





maxLength:PropTypes.number,





numberOfLines:PropTypes.number,





enablesReturnKeyAutomatically:PropTypes.bool,




multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,




onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,




onSubmitEditing:PropTypes.func,






onKeyPress:PropTypes.func,



onLayout:PropTypes.func,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




secureTextEntry:PropTypes.bool,





selectionState:PropTypes.instanceOf(DocumentSelectionState),









value:PropTypes.string,





defaultValue:PropTypes.string,




clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),





clearTextOnFocus:PropTypes.bool,




selectTextOnFocus:PropTypes.bool,








blurOnSubmit:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string,




underlineColorAndroid:PropTypes.string}),






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:
Platform.OS==='ios'&&RCTTextField?
RCTTextField.viewConfig:
Platform.OS==='android'&&AndroidTextInput?
AndroidTextInput.viewConfig:
{},

isFocused:function(){
return TextInputState.currentlyFocusedField()===
React.findNodeHandle(this.refs.input);},


getInitialState:function(){
return {
mostRecentEventCount:0};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription=this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this===el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription&&this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


clear:function(){
this.setNativeProps({text:''});},


render:function(){
if(Platform.OS==='ios'){
return this._renderIOS();}else 
if(Platform.OS==='android'){
return this._renderAndroid();}},



_getText:function(){
return typeof this.props.value==='string'?
this.props.value:
this.props.defaultValue;},


_renderIOS:function(){var _this2=this;
var textContainer;

var onSelectionChange;
if(this.props.selectionState||this.props.onSelectionChange){
onSelectionChange=function(event){
if(_this2.props.selectionState){
var selection=event.nativeEvent.selection;
_this2.props.selectionState.update(selection.start,selection.end);}

_this2.props.onSelectionChange&&_this2.props.onSelectionChange(event);};}



var props=babelHelpers.extends({},this.props);
props.style=[styles.input,this.props.style];
if(!props.multiline){
for(var propKey in onlyMultiline){
if(props[propKey]){
throw new Error(
'TextInput prop `'+propKey+'` is only supported with multiline.');}}



textContainer=
React.createElement(RCTTextField,babelHelpers.extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:onSelectionChange,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText(),
mostRecentEventCount:this.state.mostRecentEventCount}));}else 

{
for(var propKey in notMultiline){
if(props[propKey]){
throw new Error(
'TextInput prop `'+propKey+'` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value&&childCount),
'Cannot specify both value and children.');

if(childCount>1){
children=React.createElement(Text,null,children);}

if(props.inputView){
children=[children,props.inputView];}

textContainer=
React.createElement(RCTTextView,babelHelpers.extends({
ref:'input'},
props,{
children:children,
mostRecentEventCount:this.state.mostRecentEventCount,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText()}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=UIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
UIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
UIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value&&childCount),
'Cannot specify both value and children.');

if(childCount>1){
children=React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
textAlign:textAlign,
textAlignVertical:textAlignVertical,
keyboardType:this.props.keyboardType,
mostRecentEventCount:this.state.mostRecentEventCount,
multiline:this.props.multiline,
numberOfLines:this.props.numberOfLines,
maxLength:this.props.maxLength,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onTextInput:this._onTextInput,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password||this.props.secureTextEntry,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this._getText(),
underlineColorAndroid:this.props.underlineColorAndroid,
children:children,
editable:this.props.editable});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
if(this.props.editable||this.props.editable===undefined){
this.focus();}},



_onChange:function(event){var _this3=this;
if(Platform.OS==='android'){

this.refs.input.setNativeProps({
mostRecentEventCount:event.nativeEvent.eventCount});}


var text=event.nativeEvent.text;
var eventCount=event.nativeEvent.eventCount;
this.props.onChange&&this.props.onChange(event);
this.props.onChangeText&&this.props.onChangeText(text);
this.setState({mostRecentEventCount:eventCount},function(){

if(Platform.OS==='android'){



if(text!==_this3.props.value&&typeof _this3.props.value==='string'){
_this3.refs.input.setNativeProps({
text:_this3.props.value});}}});},






_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onTextInput:function(event){
this.props.onTextInput&&this.props.onTextInput(event);}});



var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



module.exports=TextInput;
});
__d('DocumentSelectionState',function(global, require, module, exports) {  var 

















mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=function(){




function DocumentSelectionState(anchor,focus){babelHelpers.classCallCheck(this,DocumentSelectionState);
this._anchorOffset=anchor;
this._focusOffset=focus;
this._hasFocus=false;}babelHelpers.createClass(DocumentSelectionState,[{key:'update',value:function update(









anchor,focus){
if(this._anchorOffset!==anchor||this._focusOffset!==focus){
this._anchorOffset=anchor;
this._focusOffset=focus;
this.emit('update');}}},{key:'constrainLength',value:function constrainLength(









maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:function focus()



{
if(!this._hasFocus){
this._hasFocus=true;
this.emit('focus');}}},{key:'blur',value:function blur()



{
if(this._hasFocus){
this._hasFocus=false;
this.emit('blur');}}},{key:'hasFocus',value:function hasFocus()






{
return this._hasFocus;}},{key:'isCollapsed',value:function isCollapsed()





{
return this._anchorOffset===this._focusOffset;}},{key:'isBackward',value:function isBackward()





{
return this._anchorOffset>this._focusOffset;}},{key:'getAnchorOffset',value:function getAnchorOffset()





{
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:function getFocusOffset()





{
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:function getStartOffset()





{
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:function getEndOffset()






{
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:function overlaps(








start,end){
return (
this.hasFocus()&&
this.getStartOffset()<=end&&start<=this.getEndOffset());}}]);return DocumentSelectionState;}();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports=DocumentSelectionState;
});
__d('mixInEventEmitter',function(global, require, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype||klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor===Object||ctor===Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types=copyProperties({},target.__types,types);}else 
{
target.__types=types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter=EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter=new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports=mixInEventEmitter;
});
__d('EventEmitterWithHolding',function(global, require, module, exports) {  'use strict';var 






























EventEmitterWithHolding=function(){







function EventEmitterWithHolding(emitter,holder){babelHelpers.classCallCheck(this,EventEmitterWithHolding);
this._emitter=emitter;
this._eventHolder=holder;
this._currentEventToken=null;
this._emittingHeldEvents=false;}babelHelpers.createClass(EventEmitterWithHolding,[{key:'addListener',value:function addListener(





eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:function once(





eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:function addRetroactiveListener(























eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents=true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents=false;

return subscription;}},{key:'removeAllListeners',value:function removeAllListeners(





eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:function removeCurrentListener()





{
this._emitter.removeCurrentListener();}},{key:'listeners',value:function listeners(





eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:function emit(





eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:function emitAndHold(

















eventType,a,b,c,d,e,_){
this._currentEventToken=this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken=null;}},{key:'releaseCurrentEvent',value:function releaseCurrentEvent()





{
if(this._currentEventToken!==null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:function releaseHeldEventType(







eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;}();



module.exports=EventEmitterWithHolding;
});
__d('EventHolder',function(global, require, module, exports) {  'use strict';


















var invariant=require('invariant');var 

EventHolder=function(){
function EventHolder(){babelHelpers.classCallCheck(this,EventHolder);
this._heldEvents={};
this._currentEventKey=null;}babelHelpers.createClass(EventHolder,[{key:'holdEvent',value:function holdEvent(























eventType,a,b,c,d,e,_){
this._heldEvents[eventType]=this._heldEvents[eventType]||[];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:function emitToListener(










eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey={
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey=origEventKey;}},{key:'releaseCurrentEvent',value:function releaseCurrentEvent()










{
invariant(
this._currentEventKey!==null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:function releaseEvent(








token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:function releaseEventType(







type){
this._heldEvents[type]=[];}}]);return EventHolder;}();



module.exports=EventHolder;
});
__d('EventValidator',function(global, require, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type)===-1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "'+type+'". ';
if(__DEV__){
message+=recommendationFor(type,allowedTypes);}

message+='Known event types: '+allowedTypes.join(', ')+'.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "'+closestTypeRecommendation.type+'"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance<recommendationB.distance){
return -1;}else 
if(recommendationA.distance>recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance/actualType.length<0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i=0;i<=a.length;i++){
d[i]=[i];}


for(j=1;j<=b.length;j++){
d[0][j]=j;}


for(i=1;i<=a.length;i++){
for(j=1;j<=b.length;j++){
var cost=a.charAt(i-1)===b.charAt(j-1)?0:1;

d[i][j]=Math.min(
d[i-1][j]+1,
d[i][j-1]+1,
d[i-1][j-1]+cost);


if(i>1&&j>1&&
a.charAt(i-1)==b.charAt(j-2)&&
a.charAt(i-2)==b.charAt(j-1)){
d[i][j]=Math.min(d[i][j],d[i-2][j-2]+cost);}}}




return d[a.length][b.length];};}



module.exports=EventValidator;
});
__d('copyProperties',function(global, require, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj=obj||{};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]){
v=args[ii++];
for(var k in v){
obj[k]=v[k];}




if(v.hasOwnProperty&&v.hasOwnProperty('toString')&&
typeof v.toString!='undefined'&&obj.toString!==v.toString){
obj.toString=v.toString;}}



return obj;}


module.exports=copyProperties;
});
__d('TouchableWithoutFeedback',function(global, require, module, exports) {  'use strict';













var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var View=require('View');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var invariant=require('invariant');
var onlyChild=require('onlyChild');



var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};






var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback',
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{
accessible:React.PropTypes.bool,
accessibilityComponentType:React.PropTypes.oneOf(View.AccessibilityComponentType),
accessibilityTraits:React.PropTypes.oneOfType([
React.PropTypes.oneOf(View.AccessibilityTraits),
React.PropTypes.arrayOf(React.PropTypes.oneOf(View.AccessibilityTraits))]),





onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,





onLayout:React.PropTypes.func,

onLongPress:React.PropTypes.func,




delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number,







pressRetentionOffset:EdgeInsetsPropType},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress&&this.props.onPress(e);},


touchableHandleActivePressIn:function(e){
this.props.onPressIn&&this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
this.props.onPressOut&&this.props.onPressOut(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress&&this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn||0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress===0?0:
this.props.delayLongPress||500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut||0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible!==false,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports=TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn<0||props.delayPressOut<0||
props.delayLongPress<0),
'Touchable components cannot have negative delay properties');};



module.exports=ensurePositiveDelayProps;
});
__d('ToastAndroid',function(global, require, module, exports) {  'use strict';












var RCTToastAndroid=require('NativeModules').ToastAndroid;









var ToastAndroid={

SHORT:RCTToastAndroid.SHORT,
LONG:RCTToastAndroid.LONG,

show:function(
message,
duration)
{
RCTToastAndroid.show(message,duration);}};




module.exports=ToastAndroid;
});
__d('ToolbarAndroid',function(global, require, module, exports) {  'use strict';












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var ReactPropTypes=require('ReactPropTypes');
var UIManager=require('UIManager');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');

var optionalImageSource=ReactPropTypes.oneOfType([
Image.propTypes.source,


ReactPropTypes.oneOf([])]);





































var ToolbarAndroid=React.createClass({displayName:'ToolbarAndroid',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{













actions:ReactPropTypes.arrayOf(ReactPropTypes.shape({
title:ReactPropTypes.string.isRequired,
icon:optionalImageSource,
show:ReactPropTypes.oneOf(['always','ifRoom','never']),
showWithText:ReactPropTypes.bool})),




logo:optionalImageSource,



navIcon:optionalImageSource,




onActionSelected:ReactPropTypes.func,



onIconClicked:ReactPropTypes.func,



overflowIcon:optionalImageSource,



subtitle:ReactPropTypes.string,



subtitleColor:ReactPropTypes.string,



title:ReactPropTypes.string,



titleColor:ReactPropTypes.string,










rtl:ReactPropTypes.bool,



testID:ReactPropTypes.string}),


render:function(){
var nativeProps=babelHelpers.extends({},
this.props);

if(this.props.logo){
nativeProps.logo=resolveAssetSource(this.props.logo);}

if(this.props.navIcon){
nativeProps.navIcon=resolveAssetSource(this.props.navIcon);}

if(this.props.overflowIcon){
nativeProps.overflowIcon=resolveAssetSource(this.props.overflowIcon);}

if(this.props.actions){
var nativeActions=[];
for(var i=0;i<this.props.actions.length;i++){
var action=babelHelpers.extends({},
this.props.actions[i]);

if(action.icon){
action.icon=resolveAssetSource(action.icon);}

if(action.show){
action.show=UIManager.ToolbarAndroid.Constants.ShowAsAction[action.show];}

nativeActions.push(action);}

nativeProps.nativeActions=nativeActions;}


return React.createElement(NativeToolbar,babelHelpers.extends({onSelect:this._onSelect},nativeProps));},


_onSelect:function(event){
var position=event.nativeEvent.position;
if(position===-1){
this.props.onIconClicked&&this.props.onIconClicked();}else 
{
this.props.onActionSelected&&this.props.onActionSelected(position);}}});




var toolbarAttributes=babelHelpers.extends({},
ReactNativeViewAttributes.UIView,{
actions:true,
logo:true,
navIcon:true,
overflowIcon:true,
rtl:true,
subtitle:true,
subtitleColor:true,
title:true,
titleColor:true});


var NativeToolbar=requireNativeComponent('ToolbarAndroid',ToolbarAndroid,{
nativeOnly:{
nativeActions:true}});



module.exports=ToolbarAndroid;
});
__d('TouchableHighlight',function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');



var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};




























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight',
propTypes:babelHelpers.extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity!==this.props.activeOpacity||
nextProps.underlayColor!==this.props.underlayColor||
nextProps.style!==this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
this._showUnderlay();
this.props.onPressIn&&this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut&&this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout=this.setTimeout(this._hideUnderlay,
this.props.delayPressOut||100);
this.props.onPress&&this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress&&this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
if(!this.isMounted()){
return;}


this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay&&this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay&&this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
accessible:true,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate,
testID:this.props.testID},
React.cloneElement(
onlyChild(this.props.children),
{
ref:CHILD_REF})));}});







var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports=TouchableHighlight;
});
__d('ensureComponentIsNative',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component&&typeof component.setNativeProps==='function',
'Touchable child must either be native or forward setNativeProps to a '+
'native component');};



module.exports=ensureComponentIsNative;
});
__d('TouchableNativeFeedback',function(global, require, module, exports) {  'use strict';











var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var UIManager=require('UIManager');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');
var processColor=require('processColor');
var requireNativeComponent=require('requireNativeComponent');

var rippleBackgroundPropType=createStrictShapeTypeChecker({
type:React.PropTypes.oneOf(['RippleAndroid']),
color:PropTypes.number,
borderless:PropTypes.bool});


var themeAttributeBackgroundPropType=createStrictShapeTypeChecker({
type:React.PropTypes.oneOf(['ThemeAttrAndroid']),
attribute:PropTypes.string.isRequired});


var backgroundPropType=PropTypes.oneOfType([
rippleBackgroundPropType,
themeAttributeBackgroundPropType]);


var TouchableView=requireNativeComponent('RCTView',null,{
nativeOnly:{
nativeBackgroundAndroid:backgroundPropType}});



var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};




























var TouchableNativeFeedback=React.createClass({displayName:'TouchableNativeFeedback',
propTypes:babelHelpers.extends({},
TouchableWithoutFeedback.propTypes,{























background:backgroundPropType}),


statics:{
SelectableBackground:function(){
return {type:'ThemeAttrAndroid',attribute:'selectableItemBackground'};},

SelectableBackgroundBorderless:function(){
return {type:'ThemeAttrAndroid',attribute:'selectableItemBackgroundBorderless'};},

Ripple:function(color,borderless){
return {type:'RippleAndroid',color:processColor(color),borderless:borderless};}},



mixins:[Touchable.Mixin],

getDefaultProps:function(){
return {
background:this.SelectableBackground()};},



getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandleActivePressIn:function(){
this.props.onPressIn&&this.props.onPressIn();
this._dispatchPressedStateChange(true);
this._dispatchHotspotUpdate(this.pressInLocation.pageX,this.pressInLocation.pageY);},


touchableHandleActivePressOut:function(){
this.props.onPressOut&&this.props.onPressOut();
this._dispatchPressedStateChange(false);},


touchableHandlePress:function(){
this.props.onPress&&this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress&&this.props.onLongPress();},


touchableGetPressRectOffset:function(){

return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this._dispatchHotspotUpdate(e.nativeEvent.pageX,e.nativeEvent.pageY);},


_dispatchHotspotUpdate:function(destX,destY){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.RCTView.Commands.hotspotUpdate,
[destX||0,destY||0]);},



_dispatchPressedStateChange:function(pressed){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.RCTView.Commands.setPressed,
[pressed]);},



render:function(){
var childProps=babelHelpers.extends({},
onlyChild(this.props.children).props,{
nativeBackgroundAndroid:this.props.background,
accessible:this.props.accessible!==false,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this._handleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});

return React.createElement(TouchableView,childProps);}});



module.exports=TouchableNativeFeedback;
});
__d('TouchableOpacity',function(global, require, module, exports) {  'use strict';














var Animated=require('Animated');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');



var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};






















var TouchableOpacity=React.createClass({displayName:'TouchableOpacity',
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin],

propTypes:babelHelpers.extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return babelHelpers.extends({},
this.touchableGetInitialState(),{
anim:new Animated.Value(1)});},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
Animated.timing(
this.state.anim,
{toValue:value,duration:150}).
start();},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
this._opacityActive();
this.props.onPressIn&&this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut&&this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout=this.setTimeout(
this._opacityInactive,
this.props.delayPressOut||100);

this.props.onPress&&this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress&&this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn||0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress===0?0:
this.props.delayLongPress||500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
var childStyle=flattenStyle(this.props.style)||{};
this.setOpacityTo(
childStyle.opacity===undefined?1:childStyle.opacity);},



render:function(){
return (
React.createElement(Animated.View,{
accessible:true,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
style:[this.props.style,{opacity:this.state.anim}],
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
this.props.children));}});





module.exports=TouchableOpacity;
});
__d('Animated',function(global, require, module, exports) {  'use strict';












var AnimatedImplementation=require('AnimatedImplementation');
var Image=require('Image');
var Text=require('Text');
var View=require('View');

module.exports=babelHelpers.extends({},
AnimatedImplementation,{
View:AnimatedImplementation.createAnimatedComponent(View),
Text:AnimatedImplementation.createAnimatedComponent(Text),
Image:AnimatedImplementation.createAnimatedComponent(Image)});
});
__d('AnimatedImplementation',function(global, require, module, exports) {  'use strict';












var Easing=require('Easing');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var SpringConfig=require('SpringConfig');
var ViewStylePropTypes=require('ViewStylePropTypes');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=function(){function Animated(){babelHelpers.classCallCheck(this,Animated);}babelHelpers.createClass(Animated,[{key:'__attach',value:function __attach()
{}},{key:'__detach',value:function __detach()
{}},{key:'__getValue',value:function __getValue()
{}},{key:'__getAnimatedValue',value:function __getAnimatedValue()
{return this.__getValue();}},{key:'__addChild',value:function __addChild(
child){}},{key:'__removeChild',value:function __removeChild(
child){}},{key:'__getChildren',value:function __getChildren()
{return [];}}]);return Animated;}();var 









Animation=function(){function Animation(){babelHelpers.classCallCheck(this,Animation);}babelHelpers.createClass(Animation,[{key:'start',value:function start(




fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:function stop()
{}},{key:'__debouncedOnEnd',value:function __debouncedOnEnd(

result){
var onEnd=this.__onEnd;
this.__onEnd=null;
onEnd&&onEnd(result);}}]);return Animation;}();var 



AnimatedWithChildren=function(_Animated){babelHelpers.inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){babelHelpers.classCallCheck(this,AnimatedWithChildren);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedWithChildren).call(this));

_this._children=[];return _this;}babelHelpers.createClass(AnimatedWithChildren,[{key:'__addChild',value:function __addChild(


child){
if(this._children.length===0){
this.__attach();}

this._children.push(child);}},{key:'__removeChild',value:function __removeChild(


child){
var index=this._children.indexOf(child);
if(index===-1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length===0){
this.__detach();}}},{key:'__getChildren',value:function __getChildren()



{
return this._children;}}]);return AnimatedWithChildren;}(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update==='function'){
animatedStyles.add(node);}else 
{
node.__getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}
















var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=function(_Animation){babelHelpers.inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{babelHelpers.classCallCheck(this,TimingAnimation);var _this2=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(TimingAnimation).call(this));

_this2._toValue=config.toValue;
_this2._easing=config.easing||easeInOut;
_this2._duration=config.duration!==undefined?config.duration:500;
_this2._delay=config.delay||0;
_this2.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;return _this2;}babelHelpers.createClass(TimingAnimation,[{key:'start',value:function start(



fromValue,
onUpdate,
onEnd)
{var _this3=this;
this.__active=true;
this._fromValue=fromValue;
this._onUpdate=onUpdate;
this.__onEnd=onEnd;

var start=function(){
if(_this3._duration===0){
_this3._onUpdate(_this3._toValue);
_this3.__debouncedOnEnd({finished:true});}else 
{
_this3._startTime=Date.now();
_this3._animationFrame=requestAnimationFrame(_this3.onUpdate.bind(_this3));}};


if(this._delay){
this._timeout=setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:function onUpdate()



{
var now=Date.now();
if(now>=this._startTime+this._duration){
if(this._duration===0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue+this._easing(1)*(this._toValue-this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue+
this._easing((now-this._startTime)/this._duration)*(
this._toValue-this._fromValue));

if(this.__active){
this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:function stop()



{
this.__active=false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;}(Animation);var 













DecayAnimation=function(_Animation2){babelHelpers.inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{babelHelpers.classCallCheck(this,DecayAnimation);var _this4=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(DecayAnimation).call(this));

_this4._deceleration=config.deceleration||0.998;
_this4._velocity=config.velocity;
_this4.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;return _this4;}babelHelpers.createClass(DecayAnimation,[{key:'start',value:function start(



fromValue,
onUpdate,
onEnd)
{
this.__active=true;
this._lastValue=fromValue;
this._fromValue=fromValue;
this._onUpdate=onUpdate;
this.__onEnd=onEnd;
this._startTime=Date.now();
this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:function onUpdate()


{
var now=Date.now();

var value=this._fromValue+
this._velocity/(1-this._deceleration)*(
1-Math.exp(-(1-this._deceleration)*(now-this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue-value)<0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue=value;
if(this.__active){
this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:function stop()



{
this.__active=false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;}(Animation);



























function withDefault(value,defaultValue){
if(value===undefined||value===null){
return defaultValue;}

return value;}var 


SpringAnimation=function(_Animation3){babelHelpers.inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{babelHelpers.classCallCheck(this,SpringAnimation);var _this5=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(SpringAnimation).call(this));


_this5._overshootClamping=withDefault(config.overshootClamping,false);
_this5._restDisplacementThreshold=withDefault(config.restDisplacementThreshold,0.001);
_this5._restSpeedThreshold=withDefault(config.restSpeedThreshold,0.001);
_this5._initialVelocity=config.velocity;
_this5._lastVelocity=withDefault(config.velocity,0);
_this5._toValue=config.toValue;
_this5.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;

var springConfig;
if(config.bounciness!==undefined||config.speed!==undefined){
invariant(
config.tension===undefined&&config.friction===undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig=SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig=SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


_this5._tension=springConfig.tension;
_this5._friction=springConfig.friction;return _this5;}babelHelpers.createClass(SpringAnimation,[{key:'start',value:function start(



fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active=true;
this._startPosition=fromValue;
this._lastPosition=this._startPosition;

this._onUpdate=onUpdate;
this.__onEnd=onEnd;
this._lastTime=Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition=internalState.lastPosition;
this._lastVelocity=internalState.lastVelocity;
this._lastTime=internalState.lastTime;}

if(this._initialVelocity!==undefined&&
this._initialVelocity!==null){
this._lastVelocity=this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:function getInternalState()


{
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:function onUpdate()



{
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now>this._lastTime+MAX_STEPS){
now=this._lastTime+MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now-this._lastTime)/TIMESTEP_MSEC);

for(var i=0;i<numSteps;++i){

var step=TIMESTEP_MSEC/1000;



var aVelocity=velocity;
var aAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
var tempPosition=position+aVelocity*step/2;
var tempVelocity=velocity+aAcceleration*step/2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
tempPosition=position+bVelocity*step/2;
tempVelocity=velocity+bAcceleration*step/2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
tempPosition=position+cVelocity*step/2;
tempVelocity=velocity+cAcceleration*step/2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
tempPosition=position+cVelocity*step/2;
tempVelocity=velocity+cAcceleration*step/2;

var dxdt=(aVelocity+2*(bVelocity+cVelocity)+dVelocity)/6;
var dvdt=(aAcceleration+2*(bAcceleration+cAcceleration)+dAcceleration)/6;

position+=dxdt*step;
velocity+=dvdt*step;}


this._lastTime=now;
this._lastPosition=position;
this._lastVelocity=velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping&&this._tension!==0){
if(this._startPosition<this._toValue){
isOvershooting=position>this._toValue;}else 
{
isOvershooting=position<this._toValue;}}


var isVelocity=Math.abs(velocity)<=this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension!==0){
isDisplacement=Math.abs(this._toValue-position)<=this._restDisplacementThreshold;}


if(isOvershooting||isVelocity&&isDisplacement){
if(this._tension!==0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:function stop()


{
this.__active=false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;}(Animation);





var _uniqueId=1;var 







AnimatedValue=function(_AnimatedWithChildren){babelHelpers.inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){babelHelpers.classCallCheck(this,AnimatedValue);var _this6=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedValue).call(this));

_this6._value=value;
_this6._offset=0;
_this6._animation=null;
_this6._listeners={};return _this6;}babelHelpers.createClass(AnimatedValue,[{key:'__detach',value:function __detach()


{
this.stopAnimation();}},{key:'__getValue',value:function __getValue()


{
return this._value+this._offset;}},{key:'setValue',value:function setValue(






value){
if(this._animation){
this._animation.stop();
this._animation=null;}

this._updateValue(value);}},{key:'setOffset',value:function setOffset(







offset){
this._offset=offset;}},{key:'flattenOffset',value:function flattenOffset()






{
this._value+=this._offset;
this._offset=0;}},{key:'addListener',value:function addListener(







callback){
var id=String(_uniqueId++);
this._listeners[id]=callback;
return id;}},{key:'removeListener',value:function removeListener(


id){
delete this._listeners[id];}},{key:'removeAllListeners',value:function removeAllListeners()


{
this._listeners={};}},{key:'stopAnimation',value:function stopAnimation(







callback){
this.stopTracking();
this._animation&&this._animation.stop();
this._animation=null;
callback&&callback(this.__getValue());}},{key:'interpolate',value:function interpolate(






config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'animate',value:function animate(






animation,callback){var _this7=this;
var handle=null;
if(animation.__isInteraction){
handle=InteractionManager.createInteractionHandle();}

var previousAnimation=this._animation;
this._animation&&this._animation.stop();
this._animation=animation;
animation.start(
this._value,
function(value){
_this7._updateValue(value);},

function(result){
_this7._animation=null;
if(handle!==null){
InteractionManager.clearInteractionHandle(handle);}

callback&&callback(result);},

previousAnimation);}},{key:'stopTracking',value:function stopTracking()






{
this._tracking&&this._tracking.__detach();
this._tracking=null;}},{key:'track',value:function track(





tracking){
this.stopTracking();
this._tracking=tracking;}},{key:'_updateValue',value:function _updateValue(


value){
this._value=value;
_flush(this);
for(var key in this._listeners){
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;}(AnimatedWithChildren);var 












































AnimatedValueXY=function(_AnimatedWithChildren2){babelHelpers.inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){babelHelpers.classCallCheck(this,AnimatedValueXY);var _this8=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedValueXY).call(this));

var value=valueIn||{x:0,y:0};
if(typeof value.x==='number'&&typeof value.y==='number'){
_this8.x=new AnimatedValue(value.x);
_this8.y=new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue&&
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or '+
'AnimatedValues.');

_this8.x=value.x;
_this8.y=value.y;}

_this8._listeners={};return _this8;}babelHelpers.createClass(AnimatedValueXY,[{key:'setValue',value:function setValue(


value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:function setOffset(


offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:function flattenOffset()


{
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:function __getValue()


{
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:function stopAnimation(



callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback&&callback(this.__getValue());}},{key:'addListener',value:function addListener(


callback){var _this9=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this9.__getValue());};

this._listeners[id]={
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:function removeListener(


id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:function getLayout()









{
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:function getTranslateTransform()












{
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;}(AnimatedWithChildren);var 




AnimatedInterpolation=function(_AnimatedWithChildren3){babelHelpers.inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){babelHelpers.classCallCheck(this,AnimatedInterpolation);var _this10=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedInterpolation).call(this));

_this10._parent=parent;
_this10._interpolation=interpolation;return _this10;}babelHelpers.createClass(AnimatedInterpolation,[{key:'__getValue',value:function __getValue()


{
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue==='number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:function interpolate(


config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:function __attach()


{
this._parent.__addChild(this);}},{key:'__detach',value:function __detach()


{
this._parent.__removeChild(this);}}]);return AnimatedInterpolation;}(AnimatedWithChildren);var 



AnimatedTransform=function(_AnimatedWithChildren4){babelHelpers.inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){babelHelpers.classCallCheck(this,AnimatedTransform);var _this11=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTransform).call(this));

_this11._transforms=transforms;return _this11;}babelHelpers.createClass(AnimatedTransform,[{key:'__getValue',value:function __getValue()


{
return this._transforms.map(function(transform){
var result={};
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
result[key]=value.__getValue();}else 
{
result[key]=value;}}


return result;});}},{key:'__getAnimatedValue',value:function __getAnimatedValue()



{
return this._transforms.map(function(transform){
var result={};
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
result[key]=value.__getAnimatedValue();}else 
{

result[key]=value;}}


return result;});}},{key:'__attach',value:function __attach()



{var _this12=this;
this._transforms.forEach(function(transform){
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
value.__addChild(_this12);}}});}},{key:'__detach',value:function __detach()





{var _this13=this;
this._transforms.forEach(function(transform){
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
value.__removeChild(_this13);}}});}}]);return AnimatedTransform;}(AnimatedWithChildren);var 






AnimatedStyle=function(_AnimatedWithChildren5){babelHelpers.inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){babelHelpers.classCallCheck(this,AnimatedStyle);var _this14=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedStyle).call(this));

style=flattenStyle(style)||{};
if(style.transform){
style=babelHelpers.extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


_this14._style=style;return _this14;}babelHelpers.createClass(AnimatedStyle,[{key:'__getValue',value:function __getValue()


{
var style={};
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
style[key]=value.__getValue();}else 
{
style[key]=value;}}


return style;}},{key:'__getAnimatedValue',value:function __getAnimatedValue()


{
var style={};
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
style[key]=value.__getAnimatedValue();}}


return style;}},{key:'__attach',value:function __attach()


{
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:function __detach()




{
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
value.__removeChild(this);}}}}]);return AnimatedStyle;}(AnimatedWithChildren);var 





AnimatedProps=function(_Animated2){babelHelpers.inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{babelHelpers.classCallCheck(this,AnimatedProps);var _this15=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedProps).call(this));

if(props.style){
props=babelHelpers.extends({},
props,{
style:new AnimatedStyle(props.style)});}


_this15._props=props;
_this15._callback=callback;
_this15.__attach();return _this15;}babelHelpers.createClass(AnimatedProps,[{key:'__getValue',value:function __getValue()


{
var props={};
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
props[key]=value.__getValue();}else 
{
props[key]=value;}}


return props;}},{key:'__getAnimatedValue',value:function __getAnimatedValue()


{
var props={};
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
props[key]=value.__getAnimatedValue();}}


return props;}},{key:'__attach',value:function __attach()


{
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:function __detach()




{
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
value.__removeChild(this);}}}},{key:'update',value:function update()




{
this._callback();}}]);return AnimatedProps;}(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=function(_React$Component){babelHelpers.inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){babelHelpers.classCallCheck(this,AnimatedComponent);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedComponent).apply(this,arguments));}babelHelpers.createClass(AnimatedComponent,[{key:'componentWillUnmount',value:function componentWillUnmount()


{
this._propsAnimated&&this._propsAnimated.__detach();}},{key:'setNativeProps',value:function setNativeProps(


props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:function componentWillMount()


{
this.attachProps(this.props);}},{key:'attachProps',value:function attachProps(


nextProps){var _this17=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this17.refs[refName].setNativeProps){
var value=_this17._propsAnimated.__getAnimatedValue();
_this17.refs[refName].setNativeProps(value);}else 
{
_this17.forceUpdate();}};



this._propsAnimated=new AnimatedProps(
nextProps,
callback);










oldPropsAnimated&&oldPropsAnimated.__detach();}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(


nextProps){
this.attachProps(nextProps);}},{key:'render',value:function render()


{
return (
React.createElement(Component,babelHelpers.extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;}(React.Component);




AnimatedComponent.propTypes={
style:function(props,propName,componentName){
if(!Component.propTypes){
return;}


for(var key in ViewStylePropTypes){
if(!Component.propTypes[key]&&props[key]!==undefined){
console.error(
'You are setting the style `{ '+key+': ... }` as a prop. You '+
'should nest it in a style object. '+
'E.g. `{ style: { '+key+': ... } }`');}}}};






return AnimatedComponent;}var 


AnimatedTracking=function(_Animated3){babelHelpers.inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{babelHelpers.classCallCheck(this,AnimatedTracking);var _this18=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTracking).call(this));

_this18._value=value;
_this18._parent=parent;
_this18._animationClass=animationClass;
_this18._animationConfig=animationConfig;
_this18._callback=callback;
_this18.__attach();return _this18;}babelHelpers.createClass(AnimatedTracking,[{key:'__getValue',value:function __getValue()


{
return this._parent.__getValue();}},{key:'__attach',value:function __attach()


{
this._parent.__addChild(this);}},{key:'__detach',value:function __detach()


{
this._parent.__removeChild(this);}},{key:'update',value:function update()


{
this._value.animate(new this._animationClass(babelHelpers.extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;}(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=babelHelpers.extends({},config);
var configY=babelHelpers.extends({},config);
for(var key in config){var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x!==undefined&&y!==undefined){
configX[key]=x;
configY[key]=y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring)||{
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing)||{
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay)||{
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback&&callback(result);
return;}


current++;

if(current===animations.length){
callback&&callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length===0){
callback&&callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current<animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config&&config.stopTogether===false);

var result={
start:function(callback){
if(doneCount===animations.length){
callback&&callback({finished:true});
return;}


animations.forEach(function(animation,idx){
var cb=function(endResult){
hasEnded[idx]=true;
doneCount++;
if(doneCount===animations.length){
doneCount=0;
callback&&callback(endResult);
return;}


if(!endResult.finished&&stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});},




stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx]&&animation.stop();
hasEnded[idx]=true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time*i),
animation]);}));};







var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt==='number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type '+typeof recMapping+' for key '+key+
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping==='object',
'Bad mapping of type '+typeof recMapping+' for key '+key);

invariant(
typeof recEvt==='object',
'Bad event of type '+typeof recEvt+' for key '+key);

for(var key in recMapping){
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg'+idx);});

if(config&&config.listener){
config.listener.apply(null,args);}};};





























































































module.exports={




Value:AnimatedValue,



ValueXY:AnimatedValueXY,





decay:decay,




timing:timing,




spring:spring,




delay:delay,





sequence:sequence,





parallel:parallel,




stagger:stagger,

















event:event,




createAnimatedComponent:createAnimatedComponent,

__PropsOnlyForTests:AnimatedProps};
});
__d('Interpolation',function(global, require, module, exports) {  'use strict';












var tinycolor=require('tinycolor');


var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop=1;
throw error;}};














var linear=function(t){return t;};var 





Interpolation=function(){function Interpolation(){babelHelpers.classCallCheck(this,Interpolation);}babelHelpers.createClass(Interpolation,null,[{key:'create',value:function create(
config){

if(config.outputRange&&typeof config.outputRange[0]==='string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length===outputRange.length,
'inputRange ('+inputRange.length+') and outputRange ('+
outputRange.length+') must have the same length');


var easing=config.easing||linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft!==undefined){
extrapolateLeft=config.extrapolateLeft;}else 
if(config.extrapolate!==undefined){
extrapolateLeft=config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight!==undefined){
extrapolateRight=config.extrapolateRight;}else 
if(config.extrapolate!==undefined){
extrapolateRight=config.extrapolate;}


return function(input){
invariant(
typeof input==='number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range+1],
outputRange[range],
outputRange[range+1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;}();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result<inputMin){
if(extrapolateLeft==='identity'){
return result;}else 
if(extrapolateLeft==='clamp'){
result=inputMin;}else 
if(extrapolateLeft==='extend'){}}




if(result>inputMax){
if(extrapolateRight==='identity'){
return result;}else 
if(extrapolateRight==='clamp'){
result=inputMax;}else 
if(extrapolateRight==='extend'){}}




if(outputMin===outputMax){
return outputMin;}


if(inputMin===inputMax){
if(input<=inputMin){
return outputMin;}

return outputMax;}



if(inputMin===-Infinity){
result=-result;}else 
if(inputMax===Infinity){
result=result-inputMin;}else 
{
result=(result-inputMin)/(inputMax-inputMin);}



result=easing(result);


if(outputMin===-Infinity){
result=-result;}else 
if(outputMax===Infinity){
result=result+outputMin;}else 
{
result=result*(outputMax-outputMin)+outputMin;}


return result;}


function colorToRgba(
input)
{
var color=tinycolor(input);
if(color.isValid()){var _color$toRgb=
color.toRgb();var r=_color$toRgb.r;var g=_color$toRgb.g;var b=_color$toRgb.b;var a=_color$toRgb.a;
return 'rgba('+r+', '+g+', '+b+', '+(a===undefined?1:a)+')';}else 
{
return input;}}



var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length>=2,'Bad output range');
outputRange=outputRange.map(colorToRgba);
checkPattern(outputRange);












var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){



value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});






var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(babelHelpers.extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i<arr.length;++i){
invariant(
pattern===arr[i].replace(stringShapeRegex,''),
'invalid pattern '+arr[0]+' and '+arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i<inputRange.length-1;++i){
if(inputRange[i]>=input){
break;}}


return i-1;}


function checkValidInputRange(arr){
invariant(arr.length>=2,'inputRange must have at least 2 elements');
for(var i=1;i<arr.length;++i){
invariant(
arr[i]>=arr[i-1],






'inputRange must be monotonically increasing '+arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length>=2,name+' must have at least 2 elements');
invariant(
arr.length!==2||arr[0]!==-Infinity||arr[1]!==Infinity,






name+'cannot be ]-infinity;+infinity[ '+arr);}



module.exports=Interpolation;
});
__d('Easing',function(global, require, module, exports) {  'use strict';












var _bezier=require('bezier');var 






Easing=function(){function Easing(){babelHelpers.classCallCheck(this,Easing);}babelHelpers.createClass(Easing,null,[{key:'step0',value:function step0(
n){
return n>0?1:0;}},{key:'step1',value:function step1(


n){
return n>=1?1:0;}},{key:'linear',value:function linear(


t){
return t;}},{key:'ease',value:function ease(


t){
return _ease(t);}},{key:'quad',value:function quad(


t){
return t*t;}},{key:'cubic',value:function cubic(


t){
return t*t*t;}},{key:'poly',value:function poly(


n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:function sin(


t){
return 1-Math.cos(t*Math.PI/2);}},{key:'circle',value:function circle(


t){
return 1-Math.sqrt(1-t*t);}},{key:'exp',value:function exp(


t){
return Math.pow(2,10*(t-1));}},{key:'elastic',value:function elastic()












{var bounciness=arguments.length<=0||arguments[0]===undefined?1:arguments[0];
var p=bounciness*Math.PI;
return function(t){return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);};}},{key:'back',value:function back(


s){
if(s===undefined){
s=1.70158;}

return function(t){return t*t*((s+1)*t-s);};}},{key:'bounce',value:function bounce(


t){
if(t<1/2.75){
return 7.5625*t*t;}


if(t<2/2.75){
t-=1.5/2.75;
return 7.5625*t*t+0.75;}


if(t<2.5/2.75){
t-=2.25/2.75;
return 7.5625*t*t+0.9375;}


t-=2.625/2.75;
return 7.5625*t*t+0.984375;}},{key:'bezier',value:function bezier(



x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon===undefined){


var duration=500;
epsilon=1000/60/duration/4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:function _in(



easing)
{
return easing;}},{key:'out',value:function out(






easing)
{
return function(t){return 1-easing(1-t);};}},{key:'inOut',value:function inOut(






easing)
{
return function(t){
if(t<0.5){
return easing(t*2)/2;}

return 1-easing((1-t)*2)/2;};}}]);return Easing;}();




var _ease=Easing.bezier(0.42,0,1,1);



module.exports=Easing;
});
__d('bezier',function(global, require, module, exports) {  module.





























exports=function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1-t;
return 3*v*v*t*x1+3*v*t*t*x2+t*t*t;};


var curveY=function(t){
var v=1-t;
return 3*v*v*t*y1+3*v*t*t*y2+t*t*t;};


var derivativeCurveX=function(t){
var v=1-t;
return 3*(2*(t-1)*t+v*v)*x1+3*(-t*t*t+2*v*t)*x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2=x,i=0;i<8;i++){
x2=curveX(t2)-x;
if(Math.abs(x2)<epsilon)return curveY(t2);
d2=derivativeCurveX(t2);
if(Math.abs(d2)<1e-6)break;
t2=t2-x2/d2;}


t0=0,t1=1,t2=x;

if(t2<t0)return curveY(t0);
if(t2>t1)return curveY(t1);


while(t0<t1){
x2=curveX(t2);
if(Math.abs(x2-x)<epsilon)return curveY(t2);
if(x>x2)t0=t2;else 
t1=t2;
t2=(t1-t0)*.5+t0;}



return curveY(t2);};};
});
__d('SpringConfig',function(global, require, module, exports) {  'use strict';


















function tensionFromOrigamiValue(oValue){
return (oValue-30)*3.62+194;}


function frictionFromOrigamiValue(oValue){
return (oValue-8)*3+25;}


function fromOrigamiTensionAndFriction(
tension,
friction)
{
return {
tension:tensionFromOrigamiValue(tension),
friction:frictionFromOrigamiValue(friction)};}



function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return (value-startValue)/(endValue-startValue);}


function projectNormal(n,start,end){
return start+n*(end-start);}


function linearInterpolation(t,start,end){
return t*end+(1-t)*start;}


function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2*t-t*t,start,end);}


function b3Friction1(x){
return 0.0007*Math.pow(x,3)-
0.031*Math.pow(x,2)+0.64*x+1.28;}


function b3Friction2(x){
return 0.000044*Math.pow(x,3)-
0.006*Math.pow(x,2)+0.36*x+2;}


function b3Friction3(x){
return 0.00000045*Math.pow(x,3)-
0.000332*Math.pow(x,2)+0.1078*x+5.84;}


function b3Nobounce(tension){
if(tension<=18){
return b3Friction1(tension);}else 
if(tension>18&&tension<=44){
return b3Friction2(tension);}else 
{
return b3Friction3(tension);}}



var b=normalize(bounciness/1.7,0,20);
b=projectNormal(b,0,0.8);
var s=normalize(speed/1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return {
tension:tensionFromOrigamiValue(bouncyTension),
friction:frictionFromOrigamiValue(bouncyFriction)};}



module.exports={
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
});
__d('requestAnimationFrame',function(global, require, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame||
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16-(currTime-lastTime));
lastTime=currTime+timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports=requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',function(global, require, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame||
global.webkitRequestAnimationFrame||
global.mozRequestAnimationFrame||
global.oRequestAnimationFrame||
global.msRequestAnimationFrame;

module.exports=nativeRequestAnimationFrame;
});
__d('ViewPagerAndroid',function(global, require, module, exports) {  'use strict';







var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var ReactPropTypes=require('ReactPropTypes');
var UIManager=require('UIManager');
var View=require('View');

var dismissKeyboard=require('dismissKeyboard');
var requireNativeComponent=require('requireNativeComponent');

var VIEWPAGER_REF='viewPager';







































var ViewPagerAndroid=React.createClass({displayName:'ViewPagerAndroid',

propTypes:babelHelpers.extends({},
View.propTypes,{




initialPage:ReactPropTypes.number,










onPageScroll:ReactPropTypes.func,







onPageSelected:ReactPropTypes.func,






keyboardDismissMode:ReactPropTypes.oneOf([
'none',
'on-drag'])}),



componentDidMount:function(){
if(this.props.initialPage){
this.setPageWithoutAnimation(this.props.initialPage);}},



getInnerViewNode:function(){
return this.refs[VIEWPAGER_REF].getInnerViewNode();},


_childrenWithOverridenStyle:function(){



return React.Children.map(this.props.children,function(child){
var newProps=babelHelpers.extends({},
child.props,{
style:[child.props.style,{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0,
width:undefined,
height:undefined}],

collapsable:false});

if(child.type&&
child.type.displayName&&
child.type.displayName!=='RCTView'&&
child.type.displayName!=='View'){
console.warn('Each ViewPager child must be a <View>. Was '+child.type.displayName);}

return ReactElement.createElement(child.type,newProps);});},



_onPageScroll:function(e){
if(this.props.onPageScroll){
this.props.onPageScroll(e);}

if(this.props.keyboardDismissMode==='on-drag'){
dismissKeyboard();}},



_onPageSelected:function(e){
if(this.props.onPageSelected){
this.props.onPageSelected(e);}},







setPage:function(selectedPage){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.AndroidViewPager.Commands.setPage,
[selectedPage]);},







setPageWithoutAnimation:function(selectedPage){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.AndroidViewPager.Commands.setPageWithoutAnimation,
[selectedPage]);},



render:function(){
return (
React.createElement(NativeAndroidViewPager,{
ref:VIEWPAGER_REF,
style:this.props.style,
onPageScroll:this._onPageScroll,
onPageSelected:this._onPageSelected,
children:this._childrenWithOverridenStyle()}));}});





var NativeAndroidViewPager=requireNativeComponent('AndroidViewPager',ViewPagerAndroid);

module.exports=ViewPagerAndroid;
});
__d('WebView',function(global, require, module, exports) {  'use strict';











var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var UIManager=require('UIManager');
var View=require('View');

var keyMirror=require('keyMirror');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});





var WebView=React.createClass({displayName:'WebView',

propTypes:babelHelpers.extends({},
View.propTypes,{
renderError:PropTypes.func,
renderLoading:PropTypes.func,
url:PropTypes.string,
html:PropTypes.string,
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,





javaScriptEnabledAndroid:PropTypes.bool,




injectedJavaScript:PropTypes.string,





userAgent:PropTypes.string,




testID:PropTypes.string}),


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState===WebViewState.LOADING){
otherView=this.props.renderLoading&&this.props.renderLoading();}else 
if(this.state.viewState===WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
otherView=this.props.renderError&&this.props.renderError(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 
if(this.state.viewState!==WebViewState.IDLE){
console.error('RCTWebView invalid state encountered: '+this.state.loading);}


var webViewStyles=[styles.container,this.props.style];
if(this.state.viewState===WebViewState.LOADING||
this.state.viewState===WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
injectedJavaScript:this.props.injectedJavaScript,
userAgent:this.props.userAgent,
javaScriptEnabledAndroid:this.props.javaScriptEnabledAndroid,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError,
testID:this.props.testID});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
UIManager.dispatchViewManagerCommand(
this.getWebWiewHandle(),
UIManager.RCTWebView.Commands.goForward,
null);},



goBack:function(){
UIManager.dispatchViewManagerCommand(
this.getWebWiewHandle(),
UIManager.RCTWebView.Commands.goBack,
null);},



reload:function(){
UIManager.dispatchViewManagerCommand(
this.getWebWiewHandle(),
UIManager.RCTWebView.Commands.reload,
null);},







updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebWiewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView);

var styles=StyleSheet.create({
container:{
flex:1},

hidden:{
height:0,
flex:0}});



module.exports=WebView;
});
__d('ActionSheetIOS',function(global, require, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');
var processColor=require('processColor');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options==='object'&&options!==null,
'Options must a valid object');

invariant(
typeof callback==='function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({},
options,{tintColor:processColor(options.tintColor)}),
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options==='object'&&options!==null,
'Options must a valid object');

invariant(
typeof failureCallback==='function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback==='function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({},
options,{tintColor:processColor(options.tintColor)}),
failureCallback,
successCallback);}};




module.exports=ActionSheetIOS;
});
__d('AdSupportIOS',function(global, require, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports={
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('Alert',function(global, require, module, exports) {  'use strict';












var AlertIOS=require('AlertIOS');
var Platform=require('Platform');
var DialogModuleAndroid=require('NativeModules').DialogManagerAndroid;var 













































Alert=function(){function Alert(){babelHelpers.classCallCheck(this,Alert);}babelHelpers.createClass(Alert,null,[{key:'alert',value:function alert(


title,
message,
buttons,
type)
{
if(Platform.OS==='ios'){
AlertIOS.alert(title,message,buttons,type);}else 
if(Platform.OS==='android'){
AlertAndroid.alert(title,message,buttons);}}}]);return Alert;}();var 







AlertAndroid=function(){function AlertAndroid(){babelHelpers.classCallCheck(this,AlertAndroid);}babelHelpers.createClass(AlertAndroid,null,[{key:'alert',value:function alert(


title,
message,
buttons)
{
var config={
title:title||'',
message:message||''};



var validButtons=buttons?buttons.slice(0,3):[{text:'OK'}];
var buttonPositive=validButtons.pop();
var buttonNegative=validButtons.pop();
var buttonNeutral=validButtons.pop();
if(buttonNeutral){
config=babelHelpers.extends({},config,{buttonNeutral:buttonNeutral.text||''});}

if(buttonNegative){
config=babelHelpers.extends({},config,{buttonNegative:buttonNegative.text||''});}

if(buttonPositive){
config=babelHelpers.extends({},config,{buttonPositive:buttonPositive.text||''});}

DialogModuleAndroid.showAlert(
config,
function(errorMessage){return console.warn(message);},
function(action,buttonKey){
if(action!==DialogModuleAndroid.buttonClicked){
return;}

if(buttonKey===DialogModuleAndroid.buttonNeutral){
buttonNeutral.onPress&&buttonNeutral.onPress();}else 
if(buttonKey===DialogModuleAndroid.buttonNegative){
buttonNegative.onPress&&buttonNegative.onPress();}else 
if(buttonKey===DialogModuleAndroid.buttonPositive){
buttonPositive.onPress&&buttonPositive.onPress();}});}}]);return AlertAndroid;}();






module.exports=Alert;
});
__d('AlertIOS',function(global, require, module, exports) {  'use strict';












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');var 
































AlertIOS=function(){function AlertIOS(){babelHelpers.classCallCheck(this,AlertIOS);}babelHelpers.createClass(AlertIOS,null,[{key:'alert',value:function alert(

title,
message,
buttons,




type)
{
var callbacks=[];
var buttonsSpec=[];
var cancelButtonKey;
var destructiveButtonKey;
buttons&&buttons.forEach(function(btn,index){
callbacks[index]=btn.onPress;
if(btn.style=='cancel'){
cancelButtonKey=String(index);}else 
if(btn.style=='destructive'){
destructiveButtonKey=String(index);}

if(btn.text||index<(buttons||[]).length-1){
var btnDef={};
btnDef[index]=btn.text||'';
buttonsSpec.push(btnDef);}});


RCTAlertManager.alertWithArgs({
title:title||undefined,
message:message||undefined,
buttons:buttonsSpec,
type:type||undefined,
cancelButtonKey:cancelButtonKey,
destructiveButtonKey:destructiveButtonKey},
function(id,value){
var cb=callbacks[id];
cb&&cb(value);});}},{key:'prompt',value:function prompt(




title,
value,
buttons,




callback)
{
if(arguments.length===2){
if(typeof value==='object'){
buttons=value;
value=undefined;}else 
if(typeof value==='function'){
callback=value;
value=undefined;}}else 

if(arguments.length===3&&typeof buttons==='function'){
callback=buttons;
buttons=undefined;}


invariant(
!(callback&&buttons)&&(callback||buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons=[{onPress:callback}];}

this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;}();



module.exports=AlertIOS;
});
__d('AppRegistry',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var ReactNative=require('ReactNative');

var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};
























var AppRegistry={
registerConfig:function(config){
for(var i=0;i<config.length;++i){
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
invariant(appConfig.component,'No component provider passed in');
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey]={
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey]={run:func};
return appKey;},


getAppKeys:function(){
return Object.keys(runnables);},


runApplication:function(appKey,appParameters){
console.log(
'Running application "'+appKey+'" with appParams: '+
JSON.stringify(appParameters)+'. '+
'__DEV__ === '+String(__DEV__)+
', development-level warning are '+(__DEV__?'ON':'OFF')+
', performance optimizations are '+(__DEV__?'OFF':'ON'));

invariant(
runnables[appKey]&&runnables[appKey].run,
'Application '+appKey+' has not been registered. This '+
'is either due to a require() error during initialization '+
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);},


unmountApplicationComponentAtRootTag:function(rootTag){
ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);}};




BatchedBridge.registerCallableModule(
'AppRegistry',
AppRegistry);


module.exports=AppRegistry;
});
__d('renderApplication',function(global, require, module, exports) {  'use strict';












var Inspector=require('Inspector');
var Portal=require('Portal');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');

var invariant=require('invariant');

var YellowBox=__DEV__?require('YellowBox'):null;


require('BackAndroid');

var AppContainer=React.createClass({displayName:'AppContainer',
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {
enabled:__DEV__,
inspectorVisible:false,
rootNodeHandle:null,
rootImportanceForAccessibility:'auto'};},



toggleElementInspector:function(){
this.setState({
inspectorVisible:!this.state.inspectorVisible,
rootNodeHandle:React.findNodeHandle(this.refs.main)});},



componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);


this._unmounted=false;},


renderInspector:function(){
return this.state.inspectorVisible?
React.createElement(Inspector,{
rootTag:this.props.rootTag,
inspectedViewTag:this.state.rootNodeHandle}):

null;},


componentWillUnmount:function(){
this._unmounted=true;},


setRootAccessibility:function(modalVisible){
if(this._unmounted){
return;}


this.setState({
rootImportanceForAccessibility:modalVisible?'no-hide-descendants':'auto'});},



render:function(){
var RootComponent=this.props.rootComponent;
var appView=
React.createElement(View,{
ref:'main',
collapsable:!this.state.inspectorVisible,
style:styles.appContainer},
React.createElement(RootComponent,babelHelpers.extends({},
this.props.initialProps,{
rootTag:this.props.rootTag,
importantForAccessibility:this.state.rootImportanceForAccessibility})),
React.createElement(Portal,{
onModalVisibilityChanged:this.setRootAccessibility}));

var yellowBox=null;
if(__DEV__){
yellowBox=React.createElement(YellowBox,null);}

return this.state.enabled?
React.createElement(View,{style:styles.appContainer},
appView,
yellowBox,
this.renderInspector()):

appView;}});



function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);

React.render(
React.createElement(AppContainer,{
rootComponent:RootComponent,
initialProps:initialProps,
rootTag:rootTag}),
rootTag);}



var styles=StyleSheet.create({


appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports=renderApplication;
});
__d('Inspector',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle=require('flattenStyle');}var 


Inspector=function(_React$Component){babelHelpers.inherits(Inspector,_React$Component);


function Inspector(props){babelHelpers.classCallCheck(this,Inspector);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Inspector).call(this,
props));

_this.state={
devtoolsAgent:null,
panelPos:'bottom',
inspecting:true,
perfing:false,
inspected:null};return _this;}babelHelpers.createClass(Inspector,[{key:'componentDidMount',value:function componentDidMount()



{
if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
this.attachToDevtools=this.attachToDevtools.bind(this);
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools',this.attachToDevtools);

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent){
this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);}}}},{key:'componentWillUnmount',value:function componentWillUnmount()




{
if(this._subs){
this._subs.map(function(fn){return fn();});}

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools',this.attachToDevtools);}}},{key:'attachToDevtools',value:function attachToDevtools(



agent){var _this2=this;
var _hideWait=null;
var hlSub=agent.sub('highlight',function(_ref){var node=_ref.node;var name=_ref.name;var props=_ref.props;
clearTimeout(_hideWait);
UIManager.measure(node,function(x,y,width,height,left,top){
_this2.setState({
hierarchy:[],
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:props?props.style:{}}});});});




var hideSub=agent.sub('hideHighlight',function(){
if(_this2.state.inspected===null){
return;}


_hideWait=setTimeout(function(){
_this2.setState({
inspected:null});},

100);});

this._subs=[hlSub,hideSub];

agent.on('shutdown',function(){
_this2.setState({devtoolsAgent:null});
_this2._subs=null;});

this.setState({
devtoolsAgent:agent});}},{key:'setSelection',value:function setSelection(



i){var _this3=this;
var instance=this.state.hierarchy[i];


var publicInstance=instance._instance||{};
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this3.setState({
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}},

selection:i});});}},{key:'onTouchInstance',value:function onTouchInstance(




instance,frame,pointerY){
if(this.state.devtoolsAgent){
this.state.devtoolsAgent.selectFromReactInstance(instance,true);}

var hierarchy=InspectorUtils.getOwnerHierarchy(instance);


var publicInstance=instance._instance||{};
var props=publicInstance.props||{};
this.setState({
panelPos:pointerY>Dimensions.get('window').height/2?'top':'bottom',
selection:hierarchy.length-1,
hierarchy:hierarchy,
inspected:{
style:props.style||{},
frame:frame}});}},{key:'setPerfing',value:function setPerfing(




val){
this.setState({
perfing:val,
inspecting:false,
inspected:null});}},{key:'setInspecting',value:function setInspecting(



val){
this.setState({
inspecting:val,
inspected:null});}},{key:'render',value:function render()



{
var panelContainerStyle=this.state.panelPos==='bottom'?{bottom:0}:{top:0};
return (
React.createElement(View,{style:styles.container,pointerEvents:'box-none'},
this.state.inspecting&&
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspected:this.state.inspected,
inspectedViewTag:this.props.inspectedViewTag,
onTouchInstance:this.onTouchInstance.bind(this)}),

React.createElement(View,{style:[styles.panelContainer,panelContainerStyle]},
React.createElement(InspectorPanel,{
devtoolsIsOpen:!!this.state.devtoolsAgent,
inspecting:this.state.inspecting,
perfing:this.state.perfing,
setPerfing:this.setPerfing.bind(this),
setInspecting:this.setInspecting.bind(this),
inspected:this.state.inspected,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;}(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute',
backgroundColor:'transparent',
top:0,
left:0,
right:0,
bottom:0},

panelContainer:{
position:'absolute',
left:0,
right:0}});



module.exports=Inspector;
});
__d('InspectorOverlay',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({displayName:'InspectorOverlay',
propTypes:{
inspected:PropTypes.shape({
frame:PropTypes.object,
style:PropTypes.any}),

inspectedViewTag:PropTypes.number,
onTouchInstance:PropTypes.func.isRequired},


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touche=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touche.locationX;var locationY=_e$nativeEvent$touche.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance,{left:left,top:top,width:width,height:height},locationY);});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=null;
if(this.props.inspected){
content=React.createElement(ElementBox,{frame:this.props.inspected.frame,style:this.props.inspected.style});}


return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{height:Dimensions.get('window').height}]},
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent',
position:'absolute',
left:0,
top:0,
right:0}});



module.exports=InspectorOverlay;
});
__d('ElementBox',function(global, require, module, exports) {  'use strict';












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=function(_React$Component){babelHelpers.inherits(ElementBox,_React$Component);function ElementBox(){babelHelpers.classCallCheck(this,ElementBox);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(ElementBox).apply(this,arguments));}babelHelpers.createClass(ElementBox,[{key:'render',value:function render()
{
var style=flattenStyle(this.props.style)||{};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle={
top:frameStyle.top-margin.top,
left:frameStyle.left-margin.left,
height:frameStyle.height+margin.top+margin.bottom,
width:frameStyle.width+margin.left+margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle={
width:contentStyle.width-padding.left-padding.right,
height:contentStyle.height-padding.top-padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;}(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports=ElementBox;
});
__d('BorderBox',function(global, require, module, exports) {  'use strict';












var React=require('React');
var View=require('View');var 

BorderBox=function(_React$Component){babelHelpers.inherits(BorderBox,_React$Component);function BorderBox(){babelHelpers.classCallCheck(this,BorderBox);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(BorderBox).apply(this,arguments));}babelHelpers.createClass(BorderBox,[{key:'render',value:function render()
{
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;}(React.Component);





module.exports=BorderBox;
});
__d('resolveBoxStyle',function(global, require, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub]=style[prefix]||0;});

if(style[prefix]){
set=true;}

if(style[prefix+'Vertical']){
res.top=res.bottom=style[prefix+'Vertical'];
set=true;}

if(style[prefix+'Horizontal']){
res.left=res.right=style[prefix+'Horizontal'];
set=true;}

subs.forEach(function(sub){
var val=style[prefix+capFirst(sub)];
if(val){
res[sub]=val;
set=true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase()+text.slice(1);}


module.exports=resolveBoxStyle;
});
__d('InspectorPanel',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=function(_React$Component){babelHelpers.inherits(InspectorPanel,_React$Component);function InspectorPanel(){babelHelpers.classCallCheck(this,InspectorPanel);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(InspectorPanel).apply(this,arguments));}babelHelpers.createClass(InspectorPanel,[{key:'renderWaiting',value:function renderWaiting()
{
if(this.props.inspecting){
return (
React.createElement(Text,{style:styles.waitingText},'Tap something to inspect it'));}




return React.createElement(Text,{style:styles.waitingText},'Nothing is inspected');}},{key:'render',value:function render()


{
var contents;
if(this.props.inspected){
contents=
React.createElement(ElementProperties,{
style:this.props.inspected.style,
frame:this.props.inspected.frame,
hierarchy:this.props.hierarchy,
selection:this.props.selection,
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents=
React.createElement(PerformanceOverlay,null);}else 

{
contents=
React.createElement(View,{style:styles.waiting},
this.renderWaiting());}



return (
React.createElement(View,{style:styles.container},
!this.props.devtoolsIsOpen&&contents,
React.createElement(View,{style:styles.buttonRow},
React.createElement(Button,{
title:'Inspect',
pressed:this.props.inspecting,
onClick:this.props.setInspecting}),

React.createElement(Button,{title:'Perf',
pressed:this.props.perfing,
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;}(React.Component);







InspectorPanel.propTypes={
devtoolsIsOpen:PropTypes.bool,
inspecting:PropTypes.bool,
setInspecting:PropTypes.func,
inspected:PropTypes.object,
perfing:PropTypes.bool,
setPerfing:PropTypes.func};var 


Button=function(_React$Component2){babelHelpers.inherits(Button,_React$Component2);function Button(){babelHelpers.classCallCheck(this,Button);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Button).apply(this,arguments));}babelHelpers.createClass(Button,[{key:'render',value:function render()
{var _this3=this;
return (
React.createElement(TouchableHighlight,{onPress:function(){return _this3.props.onClick(!_this3.props.pressed);},style:[
styles.button,
this.props.pressed&&styles.buttonPressed]},

React.createElement(Text,{style:styles.buttonText},this.props.title)));}}]);return Button;}(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'},

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)',
margin:2,
height:30,
justifyContent:'center',
alignItems:'center'},

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'},

buttonText:{
textAlign:'center',
color:'white',
margin:5},

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'},

waiting:{
height:100},

waitingText:{
fontSize:20,
textAlign:'center',
marginVertical:20}});



module.exports=InspectorPanel;
});
__d('ElementProperties',function(global, require, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties',
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.oneOfType([
PropTypes.object,
PropTypes.array,
PropTypes.number])},



render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i===selection&&styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports=ElementProperties;
});
__d('BoxInspector',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=function(_React$Component){babelHelpers.inherits(BoxInspector,_React$Component);function BoxInspector(){babelHelpers.classCallCheck(this,BoxInspector);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(BoxInspector).apply(this,arguments));}babelHelpers.createClass(BoxInspector,[{key:'render',value:function render()
{
var frame=this.props.frame;
var style=this.props.style;
var margin=style&&resolveBoxStyle('margin',style)||blank;
var padding=style&&resolveBoxStyle('padding',style)||blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;}(React.Component);var 








BoxContainer=function(_React$Component2){babelHelpers.inherits(BoxContainer,_React$Component2);function BoxContainer(){babelHelpers.classCallCheck(this,BoxContainer);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(BoxContainer).apply(this,arguments));}babelHelpers.createClass(BoxContainer,[{key:'render',value:function render()
{
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;}(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports=BoxInspector;
});
__d('StyleInspector',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=function(_React$Component){babelHelpers.inherits(StyleInspector,_React$Component);function StyleInspector(){babelHelpers.classCallCheck(this,StyleInspector);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(StyleInspector).apply(this,arguments));}babelHelpers.createClass(StyleInspector,[{key:'render',value:function render()
{var _this2=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this2.props.style[name]);}))));}}]);return StyleInspector;}(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports=StyleInspector;
});
__d('mapWithSeparator',function(global, require, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i<array.length;i++){
results.push(valueFunction(array[i],i,array));
if(i!==array.length-1){
results.push(separatorFunction(i));}}


return results;}


module.exports=mapWithSeparator;
});
__d('PerformanceOverlay',function(global, require, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({displayName:'PerformanceOverlay',
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs){
if(perfLogs[key].totalTime){
items.push(
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[styles.text,styles.label]},key),
React.createElement(Text,{style:[styles.text,styles.totalTime]},
perfLogs[key].totalTime+'ms')));}}






return (
React.createElement(View,{style:styles.container},
items));}});





var styles=StyleSheet.create({
container:{
height:100,
paddingTop:10},

label:{
flex:1},

row:{
flexDirection:'row',
paddingHorizontal:10},

text:{
color:'white',
fontSize:12},

totalTime:{
paddingRight:100}});



module.exports=PerformanceOverlay;
});
__d('Portal',function(global, require, module, exports) {  'use strict';







var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('UIManager');
var View=require('View');

var _portalRef;


var lastUsedTag=0;













var Portal=React.createClass({displayName:'Portal',
statics:{






allocateTag:function(){
return '__modal_'+ ++lastUsedTag;},








showModal:function(tag,component){
if(!_portalRef){
console.error('Calling showModal but no Portal has been rendered.');
return;}

_portalRef._showModal(tag,component);},







closeModal:function(tag){
if(!_portalRef){
console.error('Calling closeModal but no Portal has been rendered.');
return;}

_portalRef._closeModal(tag);},





getOpenModals:function(){
if(!_portalRef){
console.error('Calling getOpenModals but no Portal has been rendered.');
return [];}

return _portalRef._getOpenModals();},


notifyAccessibilityService:function(){
if(!_portalRef){
console.error('Calling closeModal but no Portal has been rendered.');
return;}

_portalRef._notifyAccessibilityService();}},



getInitialState:function(){
return {modals:{}};},


_showModal:function(tag,component){


if(this._getOpenModals().length===0){
this.props.onModalVisibilityChanged(true);}



this.setState(function(state){
var modals=state.modals;
modals[tag]=component;
return {modals:modals};});},



_closeModal:function(tag){
if(!this.state.modals.hasOwnProperty(tag)){
return;}



if(this._getOpenModals().length===1){
this.props.onModalVisibilityChanged(false);}



this.setState(function(state){
var modals=state.modals;
delete modals[tag];
return {modals:modals};});},



_getOpenModals:function(){
return Object.keys(this.state.modals);},


_notifyAccessibilityService:function(){var _this=this;
if(Platform.OS==='android'){


setTimeout(function(){
if(_this._getOpenModals().length>0){
UIManager.sendAccessibilityEvent(
React.findNodeHandle(_this),
UIManager.AccessibilityEventTypes.typeWindowStateChanged);}},

0);}},



render:function(){
_portalRef=this;
if(!this.state.modals){
return null;}

var modals=[];
for(var tag in this.state.modals){
modals.push(this.state.modals[tag]);}

if(modals.length===0){
return null;}

return (
React.createElement(View,{
style:styles.modalsContainer,
importantForAccessibility:'yes'},
modals));}});





var styles=StyleSheet.create({
modalsContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports=Portal;
});
__d('YellowBox',function(global, require, module, exports) {  'use strict';













var EventEmitter=require('EventEmitter');

var Map=require('Map');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');

var _warningEmitter=new EventEmitter();
var _warningMap=new Map();






















if(__DEV__){(function(){var _console=
console;var error=_console.error;var warn=_console.warn;
console.error=function(){
error.apply(console,arguments);

if(typeof arguments[0]==='string'&&
arguments[0].startsWith('Warning: ')){
updateWarningMap.apply(null,arguments);}};


console.warn=function(){
warn.apply(console,arguments);
updateWarningMap.apply(null,arguments);};})();}












function sprintf(format){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}
var index=0;
return format.replace(/%s/g,function(match){return args[index++];});}


function updateWarningMap(format){
var stringifySafe=require('stringifySafe');

format=String(format);
var argCount=(format.match(/%s/g)||[]).length;for(var _len2=arguments.length,args=Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}
var warning=[
sprintf.apply(undefined,[format].concat(babelHelpers.toConsumableArray(args.slice(0,argCount))))].concat(babelHelpers.toConsumableArray(
args.slice(argCount).map(stringifySafe))).
join(' ');

var count=_warningMap.has(warning)?_warningMap.get(warning):0;
_warningMap.set(warning,count+2);
_warningEmitter.emit('warning',_warningMap);}


function isWarningIgnored(warning){
return (
Array.isArray(console.ignoredYellowBox)&&
console.ignoredYellowBox.some(
function(ignorePrefix){return warning.startsWith(ignorePrefix);}));}




var WarningRow=function(_ref){var count=_ref.count;var warning=_ref.warning;var onPress=_ref.onPress;
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var View=require('View');

var countText=count>1?
React.createElement(Text,{style:styles.listRowCount},'('+count+') '):
null;

return (
React.createElement(View,{style:styles.listRow},
React.createElement(TouchableHighlight,{
activeOpacity:0.5,
onPress:onPress,
style:styles.listRowContent,
underlayColor:'transparent'},
React.createElement(Text,{style:styles.listRowText,numberOfLines:2},
countText,
warning))));};






var WarningInspector=function(_ref2)





{var count=_ref2.count;var warning=_ref2.warning;var onClose=_ref2.onClose;var onDismiss=_ref2.onDismiss;var onDismissAll=_ref2.onDismissAll;
var ScrollView=require('ScrollView');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var View=require('View');

var countSentence=
'Warning encountered '+count+' time'+(count-1?'s':'')+'.';

return (
React.createElement(TouchableHighlight,{
activeOpacity:0.95,
underlayColor:backgroundColor(0.8),
onPress:onClose,
style:styles.inspector},
React.createElement(View,{style:styles.inspectorContent},
React.createElement(View,{style:styles.inspectorCount},
React.createElement(Text,{style:styles.inspectorCountText},countSentence)),

React.createElement(ScrollView,{style:styles.inspectorWarning},
React.createElement(Text,{style:styles.inspectorWarningText},warning)),

React.createElement(View,{style:styles.inspectorButtons},
React.createElement(TouchableHighlight,{
activeOpacity:0.5,
onPress:onDismiss,
style:styles.inspectorButton,
underlayColor:'transparent'},
React.createElement(Text,{style:styles.inspectorButtonText},'Dismiss')),



React.createElement(TouchableHighlight,{
activeOpacity:0.5,
onPress:onDismissAll,
style:styles.inspectorButton,
underlayColor:'transparent'},
React.createElement(Text,{style:styles.inspectorButtonText},'Dismiss All'))))));};var 









YellowBox=function(_React$Component){babelHelpers.inherits(YellowBox,_React$Component);






function YellowBox(props,context){babelHelpers.classCallCheck(this,YellowBox);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(YellowBox).call(this,
props,context));
_this.state={
inspecting:null,
warningMap:_warningMap};

_this.dismissWarning=function(warning){var _this$state=
_this.state;var inspecting=_this$state.inspecting;var warningMap=_this$state.warningMap;
if(warning){
warningMap.delete(warning);}else 
{
warningMap.clear();}

_this.setState({
inspecting:warning&&inspecting!==warning?inspecting:null,
warningMap:warningMap});};return _this;}babelHelpers.createClass(YellowBox,[{key:'componentDidMount',value:function componentDidMount()




{var _this2=this;
var scheduled=null;
this._listener=_warningEmitter.addListener('warning',function(warningMap){


scheduled=scheduled||setImmediate(function(){
scheduled=null;
_this2.setState({
warningMap:warningMap});});});}},{key:'componentWillUnmount',value:function componentWillUnmount()





{
if(this._listener){
this._listener.remove();}}},{key:'render',value:function render()



{var _this3=this;
if(console.disableYellowBox||this.state.warningMap.size===0){
return null;}

var ScrollView=require('ScrollView');
var View=require('View');

var inspecting=this.state.inspecting;
var inspector=inspecting!==null?
React.createElement(WarningInspector,{
count:this.state.warningMap.get(inspecting),
warning:inspecting,
onClose:function(){return _this3.setState({inspecting:null});},
onDismiss:function(){return _this3.dismissWarning(inspecting);},
onDismissAll:function(){return _this3.dismissWarning(null);}}):

null;

var rows=[];
this.state.warningMap.forEach(function(count,warning){
if(!isWarningIgnored(warning)){
rows.push(
React.createElement(WarningRow,{
key:warning,
count:count,
warning:warning,
onPress:function(){return _this3.setState({inspecting:warning});},
onDismiss:function(){return _this3.dismissWarning(warning);}}));}});





var listStyle=[
styles.list,

{height:Math.min(rows.length,4.4)*(rowGutter+rowHeight)}];

return (
React.createElement(View,{style:inspector?styles.fullScreen:listStyle},
React.createElement(ScrollView,{style:listStyle},
rows),

inspector));}}]);return YellowBox;}(React.Component);





var backgroundColor=function(opacity){return 'rgba(250, 186, 48, '+opacity+')';};
var textColor='white';
var rowGutter=1;
var rowHeight=46;

var styles=StyleSheet.create({
fullScreen:{
backgroundColor:'transparent',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0},

inspector:{
backgroundColor:backgroundColor(0.95),
flex:1},

inspectorContainer:{
flex:1},

inspectorButtons:{
flexDirection:'row',
position:'absolute',
left:0,
right:0,
bottom:0},

inspectorButton:{
flex:1,
padding:22},

inspectorButtonText:{
color:textColor,
fontSize:14,
opacity:0.8,
textAlign:'center'},

inspectorContent:{
flex:1,
paddingTop:5},

inspectorCount:{
padding:15,
paddingBottom:0},

inspectorCountText:{
color:textColor,
fontSize:14},

inspectorWarning:{
padding:15,
position:'absolute',
top:39,
bottom:60},

inspectorWarningText:{
color:textColor,
fontSize:16,
fontWeight:'600'},

list:{
backgroundColor:'transparent',
position:'absolute',
left:0,
right:0,
bottom:0},

listRow:{
position:'relative',
backgroundColor:backgroundColor(0.95),
flex:1,
height:rowHeight,
marginTop:rowGutter},

listRowContent:{
flex:1},

listRowCount:{
color:'rgba(255, 255, 255, 0.5)'},

listRowText:{
color:textColor,
position:'absolute',
left:0,
top:Platform.OS==='android'?5:7,
marginLeft:15,
marginRight:15}});



module.exports=YellowBox;
});
__d('BackAndroid',function(global, require, module, exports) {  'use strict';












var Set=require('Set');
var DeviceEventManager=require('NativeModules').DeviceEventManager;
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

var DEVICE_BACK_EVENT='hardwareBackPress';





var _backPressSubscriptions=new Set();

RCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT,function(){
var invokeDefault=true;
_backPressSubscriptions.forEach(function(subscription){
if(subscription()){
invokeDefault=false;}});


if(invokeDefault){
BackAndroid.exitApp();}});



















var BackAndroid={

exitApp:function(){
DeviceEventManager.invokeDefaultBackPressHandler();},


addEventListener:function(
eventName,
handler)
{
_backPressSubscriptions.add(handler);},


removeEventListener:function(
eventName,
handler)
{
_backPressSubscriptions.delete(handler);}};




module.exports=BackAndroid;
});
__d('RCTRenderingPerf',function(global, require, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled=true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii<measurements.length;ii++){
var render=measurements[ii].render;
for(var nodeName in render){
totalRender+=render[nodeName];}

totalTime+=measurements[ii].totalTime;}

console.log('Total time spent in render(): '+totalRender+'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start==='function',
'Perf module should have start() function');

invariant(
typeof module.stop==='function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports=RCTRenderingPerf;
});
__d('ReactDefaultPerf',function(global, require, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val*100)/100;}


function addValue(obj,key,val){
obj[key]=(obj[key]||0)+val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length=0;
ReactPerf.enableMeasure=true;},


stop:function(){
ReactPerf.enableMeasure=false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive/item.count),
'Render time per instance (ms)':roundFloat(item.render/item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2)+' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2)+' ms');},



printDOM:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME]=item.id;
result.type=item.type;
result.args=JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2)+' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length-1].
writes;
writes[id]=writes[id]||[];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName==='_renderNewRootComponent'||
fnName==='flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0,
created:{}});

start=performanceNow();
rv=func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length-1].
totalTime=performanceNow()-start;
return rv;}else 
if(fnName==='_mountImageIntoNode'||
moduleName==='ReactBrowserEventEmitter'||
moduleName==='ReactDOMIDOperations'||
moduleName==='CSSPropertyOperations'||
moduleName==='DOMChildrenOperations'||
moduleName==='DOMPropertyOperations'){
start=performanceNow();
rv=func.apply(this,args);
totalTime=performanceNow()-start;

if(fnName==='_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName==='dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex!==null){
writeArgs.fromIndex=update.fromIndex;}

if(update.toIndex!==null){
writeArgs.toIndex=update.toIndex;}

if(update.textContent!==null){
writeArgs.textContent=update.textContent;}

if(update.markupIndex!==null){
writeArgs.markup=args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

var id=args[0];
if(typeof id==='object'){
id=ReactMount.getID(args[0]);}

ReactDefaultPerf._recordWrite(
id,
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName==='ReactCompositeComponent'&&(
fnName==='mountComponent'||
fnName==='updateComponent'||
fnName==='_renderValidatedComponent')){

if(this._currentElement.type===ReactMount.TopLevelWrapper){
return func.apply(this,args);}


var rootNodeID=fnName==='mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName==='_renderValidatedComponent';
var isMount=fnName==='mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length-1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
entry.created[rootNodeID]=true;
mountStack.push(0);}


start=performanceNow();
rv=func.apply(this,args);
totalTime=performanceNow()-start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length-1]+=totalTime;
addValue(entry.exclusive,rootNodeID,totalTime-subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID]={
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports=ReactDefaultPerf;
});
__d('DOMProperty',function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');

function checkMask(value,bitmask){
return (value&bitmask)===bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20|0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,





























injectDOMPropertyConfig:function(domPropertyConfig){
var Injection=DOMPropertyInjection;
var Properties=domPropertyConfig.Properties||{};
var DOMAttributeNamespaces=domPropertyConfig.DOMAttributeNamespaces||{};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames||{};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames||{};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods||{};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties){
invariant(
!DOMProperty.properties.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property '+
'\'%s\' which has already been injected. You may be accidentally '+
'injecting the same DOM property config twice, or you may be '+
'injecting two configs that have conflicting property names.',
propName);


var lowerCased=propName.toLowerCase();
var propConfig=Properties[propName];

var propertyInfo={
attributeName:lowerCased,
attributeNamespace:null,
propertyName:propName,
mutationMethod:null,

mustUseAttribute:checkMask(propConfig,Injection.MUST_USE_ATTRIBUTE),
mustUseProperty:checkMask(propConfig,Injection.MUST_USE_PROPERTY),
hasSideEffects:checkMask(propConfig,Injection.HAS_SIDE_EFFECTS),
hasBooleanValue:checkMask(propConfig,Injection.HAS_BOOLEAN_VALUE),
hasNumericValue:checkMask(propConfig,Injection.HAS_NUMERIC_VALUE),
hasPositiveNumericValue:
checkMask(propConfig,Injection.HAS_POSITIVE_NUMERIC_VALUE),
hasOverloadedBooleanValue:
checkMask(propConfig,Injection.HAS_OVERLOADED_BOOLEAN_VALUE)};


invariant(
!propertyInfo.mustUseAttribute||!propertyInfo.mustUseProperty,
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
propertyInfo.mustUseProperty||!propertyInfo.hasSideEffects,
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
propertyInfo.hasBooleanValue+propertyInfo.hasNumericValue+
propertyInfo.hasOverloadedBooleanValue<=1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or '+
'numeric value, but not a combination: %s',
propName);


if(__DEV__){
DOMProperty.getPossibleStandardName[lowerCased]=propName;}


if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
propertyInfo.attributeName=attributeName;
if(__DEV__){
DOMProperty.getPossibleStandardName[attributeName]=propName;}}



if(DOMAttributeNamespaces.hasOwnProperty(propName)){
propertyInfo.attributeNamespace=DOMAttributeNamespaces[propName];}


if(DOMPropertyNames.hasOwnProperty(propName)){
propertyInfo.propertyName=DOMPropertyNames[propName];}


if(DOMMutationMethods.hasOwnProperty(propName)){
propertyInfo.mutationMethod=DOMMutationMethods[propName];}


DOMProperty.properties[propName]=propertyInfo;}}};



var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





































properties:{},






getPossibleStandardName:__DEV__?{}:null,




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i<DOMProperty._isCustomAttributeFunctions.length;i++){
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName]=nodeDefaults={};}

if(!(prop in nodeDefaults)){
testElement=document.createElement(nodeName);
nodeDefaults[prop]=testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports=DOMProperty;
});
__d('ReactDefaultPerfAnalysis',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
SET_MARKUP:'set innerHTML',
TEXT_CONTENT:'set textContent',
'setValueForProperty':'update attribute',
'setValueForAttribute':'update attribute',
'deleteValueForProperty':'remove attribute',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i<measurements.length;i++){
var measurement=measurements[i];
totalTime+=measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
measurements.forEach(function(measurement){
Object.keys(measurement.writes).forEach(function(id){
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type]||write.type,
args:write.args});});});});




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i<measurements.length;i++){
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs){
displayName=measurement.displayNames[id].current;

candidates[displayName]=candidates[displayName]||{
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render+=measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive+=measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive+=measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count+=measurement.counts[id];}}}





var arr=[];
for(displayName in candidates){
if(candidates[displayName].exclusive>=DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive-a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i<measurements.length;i++){
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents=getUnchangedComponents(measurement);}


for(var id in allIDs){
if(onlyClean&&!cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey=displayName.owner+' > '+displayName.current;

candidates[inclusiveKey]=candidates[inclusiveKey]||{
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time+=measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count+=measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates){
if(candidates[inclusiveKey].time>=DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time-a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs){
var isDirty=false;


for(var i=0;i<dirtyLeafIDs.length;i++){
if(dirtyLeafIDs[i].indexOf(id)===0){
isDirty=true;
break;}}



if(measurement.created[id]){
isDirty=true;}

if(!isDirty&&measurement.counts[id]>0){
cleanComponents[id]=true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports=ReactDefaultPerfAnalysis;
});
__d('ReactMount',function(global, require, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactDOMFeatureFlags=require('ReactDOMFeatureFlags');
var ReactElement=require('ReactElement');
var ReactEmptyComponentRegistry=require('ReactEmptyComponentRegistry');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var validateDOMNesting=require('validateDOMNesting');
var warning=require('warning');

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;
var DOCUMENT_FRAGMENT_NODE_TYPE=11;

var ownerDocumentContextKey=
'__ReactMount_ownerDocument$'+Math.random().toString(36).slice(2);



var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i<minLen;i++){
if(string1.charAt(i)!==string2.charAt(i)){
return i;}}


return string1.length===string2.length?-1:minLen;}







function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType===DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}







function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement&&ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached!==node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id]=node;}}else 

{
nodeCache[id]=node;}}



return id;}


function internalGetID(node){



return node&&node.getAttribute&&node.getAttribute(ATTR_NAME)||'';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID!==id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id]=node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id)||!isValid(nodeCache[id],id)){
nodeCache[id]=ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponentRegistry.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id)||!isValid(nodeCache[id],id)){
nodeCache[id]=ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node)===id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container&&containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor&&isValid(ancestor,ancestorID)){
deepestNodeSoFar=ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar=null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar=null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context)
{
if(ReactDOMFeatureFlags.useCreateElement){
context=assign({},context);
if(container.nodeType===DOC_NODE_TYPE){
context[ownerDocumentContextKey]=container;}else 
{
context[ownerDocumentContextKey]=container.ownerDocument;}}


if(__DEV__){
if(context===emptyObject){
context={};}

var tag=container.nodeName.toLowerCase();
context[validateDOMNesting.ancestorInfoContextKey]=
validateDOMNesting.updatedAncestorInfo(null,tag,null);}

var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,context);

componentInstance._renderedComponent._topLevelWrapper=componentInstance;
ReactMount._mountImageIntoNode(
markup,
container,
shouldReuseMarkup,
transaction);}











function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup,
context)
{
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled(
shouldReuseMarkup);

transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context);

ReactUpdates.ReactReconcileTransaction.release(transaction);}











function unmountComponentFromNode(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType===DOC_NODE_TYPE){
container=container.documentElement;}



while(container.lastChild){
container.removeChild(container.lastChild);}}













function hasNonRootReactChild(node){
var reactRootID=getReactRootID(node);
return reactRootID?reactRootID!==
ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID):false;}






function findFirstReactDOMImpl(node){


for(;node&&node.parentNode!==node;node=node.parentNode){
if(node.nodeType!==1){

continue;}

var nodeID=internalGetID(node);
if(!nodeID){
continue;}

var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);





var current=node;
var lastID;
do {
lastID=internalGetID(current);
current=current.parentNode;
if(current==null){


return null;}}while(

lastID!==reactRootID);

if(current===containersByReactRootID[reactRootID]){
return node;}}


return null;}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.isReactComponent={};
if(__DEV__){
TopLevelWrapper.displayName='TopLevelWrapper';}

TopLevelWrapper.prototype.render=function(){

return this.props;};




















var ReactMount={

TopLevelWrapper:TopLevelWrapper,


_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)]=
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container&&(
container.nodeType===ELEMENT_NODE_TYPE||
container.nodeType===DOC_NODE_TYPE||
container.nodeType===DOCUMENT_FRAGMENT_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID]=nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup,
context)
{



warning(
ReactCurrentOwner.current==null,
'_renderNewRootComponent(): Render methods should be a pure function '+
'of props and state; triggering nested component updates from '+
'render is not allowed. If necessary, trigger nested updates in '+
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current&&ReactCurrentOwner.current.getName()||
'ReactCompositeComponent');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup,
context);


if(__DEV__){

rootElementsByReactRootID[reactRootID]=
getReactRootElementInContainer(container);}


return componentInstance;},















renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
parentComponent!=null&&parentComponent._reactInternalInstance!=null,
'parentComponent must be a valid React Component');

return ReactMount._renderSubtreeIntoContainer(
parentComponent,
nextElement,
container,
callback);},



_renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'ReactDOM.render(): Invalid component element.%s',

typeof nextElement==='string'?
' Instead of passing an element string, make sure to instantiate '+
'it by passing it to React.createElement.':
typeof nextElement==='function'?
' Instead of passing a component class, make sure to instantiate '+
'it by passing it to React.createElement.':

nextElement!=null&&nextElement.props!==undefined?
' This may be caused by unintentionally loading two independent '+
'copies of React.':
'');



warning(
!container||!container.tagName||
container.tagName.toUpperCase()!=='BODY',
'render(): Rendering components directly into document.body is '+
'discouraged, since its children are often manipulated by third-party '+
'scripts and browser extensions. This may lead to subtle '+
'reconciliation issues. Try rendering into a container element created '+
'for your app.');


var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
null,
null,
nextElement);


var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
var publicInst=prevComponent._renderedComponent.getPublicInstance();
var updatedCallback=callback&&function(){
callback.call(publicInst);};

ReactMount._updateRootComponent(
prevComponent,
nextWrappedElement,
container,
updatedCallback);

return publicInst;}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement&&!!internalGetID(reactRootElement);
var containerHasNonRootReactChild=hasNonRootReactChild(container);

if(__DEV__){
warning(
!containerHasNonRootReactChild,
'render(...): Replacing React-rendered children with a new root '+
'component. If you intended to update the children of this node, '+
'you should instead have the existing children update their state '+
'and render the new components instead of calling ReactDOM.render.');


if(!containerHasReactMarkup||reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling){
if(internalGetID(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there '+
'are unrelated nodes as well. This is most commonly caused by '+
'white-space inserted around server-rendered markup.');

break;}

rootElementSibling=rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=
containerHasReactMarkup&&
!prevComponent&&
!containerHasNonRootReactChild;
var component=ReactMount._renderNewRootComponent(
nextWrappedElement,
container,
shouldReuseMarkup,
parentComponent!=null?
parentComponent._reactInternalInstance._processChildContext(
parentComponent._reactInternalInstance._context):

emptyObject).
_renderedComponent.getPublicInstance();
if(callback){
callback.call(component);}

return component;},















render:function(nextElement,container,callback){
return ReactMount._renderSubtreeIntoContainer(null,nextElement,container,callback);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID=ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID]=container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current==null,
'unmountComponentAtNode(): Render methods should be a pure function '+
'of props and state; triggering nested component updates from render '+
'is not allowed. If necessary, trigger nested updates in '+
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current&&ReactCurrentOwner.current.getName()||
'ReactCompositeComponent');


invariant(
container&&(
container.nodeType===ELEMENT_NODE_TYPE||
container.nodeType===DOC_NODE_TYPE||
container.nodeType===DOCUMENT_FRAGMENT_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){


var containerHasNonRootReactChild=hasNonRootReactChild(container);


var containerID=internalGetID(container);
var isContainerReactRoot=
containerID&&
containerID===
ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

if(__DEV__){
warning(
!containerHasNonRootReactChild,
'unmountComponentAtNode(): The node you\'re attempting to unmount '+
'was rendered by React and is not a top-level container. %s',

isContainerReactRoot?
'You may have accidentally passed in a React root node instead '+
'of its container.':
'Instead, have the parent component update its state and '+
'rerender in order to remove this component.');}




return false;}

ReactUpdates.batchedUpdates(
unmountComponentFromNode,
component,
container);

delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},









findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement&&rootElement.parentNode!==container){
warning(


internalGetID(rootElement)===reactRootID,
'ReactMount: Root element ID differed from reactRootID.');

var containerChild=container.firstChild;
if(containerChild&&
reactRootID===internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID]=containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original '+
'container. New container: %s',
rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},










getFirstReactDOM:function(node){
return findFirstReactDOMImpl(node);},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID)||ancestorNode;

if(__DEV__){

warning(
deepestAncestor!=null,
'React can\'t find the root component node for data-reactid value '+
'`%s`. If you\'re seeing this message, it probably means that '+
'you\'ve loaded two copies of React on the page. At this time, only '+
'a single copy of React can be loaded at a time.',
targetID);}



firstChildren[0]=deepestAncestor.firstChild;
firstChildren.length=1;

while(childIndex<firstChildren.length){
var child=firstChildren[childIndex++];
var targetChild;

while(child){
var childID=ReactMount.getID(child);
if(childID){





if(targetID===childID){
targetChild=child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length=childIndex=0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child=child.nextSibling;}


if(targetChild){



firstChildren.length=0;

return targetChild;}}



firstChildren.length=0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably '+
'means the DOM was unexpectedly mutated (e.g., by the browser), '+
'usually due to forgetting a <tbody> when using tables, nesting tags '+
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> '+
'parent. '+
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(
markup,
container,
shouldReuseMarkup,
transaction)
{
invariant(
container&&(
container.nodeType===ELEMENT_NODE_TYPE||
container.nodeType===DOC_NODE_TYPE||
container.nodeType===DOCUMENT_FRAGMENT_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var normalizedMarkup=markup;
if(__DEV__){




var normalizer;
if(container.nodeType===ELEMENT_NODE_TYPE){
normalizer=document.createElement('div');
normalizer.innerHTML=markup;
normalizedMarkup=normalizer.innerHTML;}else 
{
normalizer=document.createElement('iframe');
document.body.appendChild(normalizer);
normalizer.contentDocument.write(markup);
normalizedMarkup=normalizer.contentDocument.documentElement.outerHTML;
document.body.removeChild(normalizer);}}



var diffIndex=firstDifferenceIndex(normalizedMarkup,rootMarkup);
var difference=' (client) '+
normalizedMarkup.substring(diffIndex-20,diffIndex+20)+
'\n (server) '+rootMarkup.substring(diffIndex-20,diffIndex+20);

invariant(
container.nodeType!==DOC_NODE_TYPE,
'You\'re trying to render a component to the document using '+
'server rendering but the checksum was invalid. This usually '+
'means you rendered a different component type or props on '+
'the client from the one on the server, or your render() '+
'methods are impure. React cannot handle this case due to '+
'cross-browser quirks by rendering at the document root. You '+
'should look for environment dependent code in your components '+
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the '+
'checksum was invalid. This generally means that you are '+
'using server rendering and the markup generated on the '+
'server was not what the client was expecting. React injected '+
'new markup to compensate which works but you have lost many '+
'of the benefits of server rendering. Instead, figure out '+
'why the markup being generated is different on the client '+
'or server:\n%s',
difference);}}}





invariant(
container.nodeType!==DOC_NODE_TYPE,
'You\'re trying to render a component to the document but '+
'you didn\'t use server rendering. We can\'t do this '+
'without using server rendering due to cross-browser quirks. '+
'See ReactDOMServer.renderToString() for server rendering.');


if(transaction.useCreateElement){
while(container.lastChild){
container.removeChild(container.lastChild);}

container.appendChild(markup);}else 
{
setInnerHTML(container,markup);}},



ownerDocumentContextKey:ownerDocumentContextKey,





getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

isValid:isValid,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports=ReactMount;
});
__d('ReactBrowserEventEmitter',function(global, require, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactPerf=require('ReactPerf');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topAbort:'abort',
topBlur:'blur',
topCanPlay:'canplay',
topCanPlayThrough:'canplaythrough',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topDurationChange:'durationchange',
topEmptied:'emptied',
topEncrypted:'encrypted',
topEnded:'ended',
topError:'error',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topLoadedData:'loadeddata',
topLoadedMetadata:'loadedmetadata',
topLoadStart:'loadstart',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topPause:'pause',
topPlay:'play',
topPlaying:'playing',
topProgress:'progress',
topRateChange:'ratechange',
topScroll:'scroll',
topSeeked:'seeked',
topSeeking:'seeking',
topSelectionChange:'selectionchange',
topStalled:'stalled',
topSuspend:'suspend',
topTextInput:'textInput',
topTimeUpdate:'timeupdate',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topVolumeChange:'volumechange',
topWaiting:'waiting',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID'+String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey]=reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]]={};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener=ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener&&
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=
EventPluginRegistry.registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0;i<dependencies.length;i++){
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency)&&
isListening[dependency]))
{
if(dependency===topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency===topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency===topLevelTypes.topFocus||
dependency===topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur]=true;
isListening[topLevelTypes.topFocus]=true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency]=true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue=true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



ReactPerf.measureMethods(ReactBrowserEventEmitter,'ReactBrowserEventEmitter',{
putListener:'putListener',
deleteListener:'deleteListener'});


module.exports=ReactBrowserEventEmitter;
});
__d('ViewportMetrics',function(global, require, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft=scrollPosition.x;
ViewportMetrics.currentScrollTop=scrollPosition.y;}};




module.exports=ViewportMetrics;
});
__d('isEventSupported',function(global, require, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature=
document.implementation&&
document.implementation.hasFeature&&


document.implementation.hasFeature('','')!==true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM||
capture&&!('addEventListener' in document)){
return false;}


var eventName='on'+eventNameSuffix;
var isSupported=eventName in document;

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported=typeof element[eventName]==='function';}


if(!isSupported&&useHasFeature&&eventNameSuffix==='wheel'){

isSupported=document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports=isEventSupported;
});
__d('ReactDOMFeatureFlags',function(global, require, module, exports) {  'use strict';












var ReactDOMFeatureFlags={
useCreateElement:false};


module.exports=ReactDOMFeatureFlags;
});
__d('ReactMarkupChecksum',function(global, require, module, exports) {  'use strict';












var adler32=require('adler32');

var TAG_END=/\/?>/;

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);


return markup.replace(
TAG_END,
' '+ReactMarkupChecksum.CHECKSUM_ATTR_NAME+'="'+checksum+'"$&');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum=existingChecksum&&parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum===existingChecksum;}};



module.exports=ReactMarkupChecksum;
});
__d('adler32',function(global, require, module, exports) {  'use strict';












var MOD=65521;






function adler32(data){
var a=1;
var b=0;
var i=0;
var l=data.length;
var m=l&~0x3;
while(i<m){
for(;i<Math.min(i+4096,m);i+=4){
b+=
(a+=data.charCodeAt(i))+(
a+=data.charCodeAt(i+1))+(
a+=data.charCodeAt(i+2))+(
a+=data.charCodeAt(i+3));}


a%=MOD;
b%=MOD;}

for(;i<l;i++){
b+=a+=data.charCodeAt(i);}

a%=MOD;
b%=MOD;
return a|b<<16;}


module.exports=adler32;
});
__d('containsNode',function(global, require, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode||!innerNode){
return false;}else 
if(outerNode===innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode)&16);}else 
{
return false;}}



module.exports=containsNode;
});
__d('isTextNode',function(global, require, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object)&&object.nodeType==3;}


module.exports=isTextNode;
});
__d('setInnerHTML',function(global, require, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML=html;};



if(typeof MSApp!=='undefined'&&MSApp.execUnsafeLocalFunction){
setInnerHTML=function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML=html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML=' ';
if(testElement.innerHTML===''){
setInnerHTML=function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html)||
html[0]==='<'&&NONVISIBLE_TEST.test(html)){






node.innerHTML=String.fromCharCode(0xFEFF)+html;



var textNode=node.firstChild;
if(textNode.data.length===1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML=html;}};}}





module.exports=setInnerHTML;
});
__d('validateDOMNesting',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');

var validateDOMNesting=emptyFunction;

if(__DEV__){












var specialTags=[
'address','applet','area','article','aside','base','basefont',
'bgsound','blockquote','body','br','button','caption','center','col',
'colgroup','dd','details','dir','div','dl','dt','embed','fieldset',
'figcaption','figure','footer','form','frame','frameset','h1','h2',
'h3','h4','h5','h6','head','header','hgroup','hr','html','iframe',
'img','input','isindex','li','link','listing','main','marquee',
'menu','menuitem','meta','nav','noembed','noframes','noscript',
'object','ol','p','param','plaintext','pre','script','section',
'select','source','style','summary','table','tbody','td','template',
'textarea','tfoot','th','thead','title','tr','track','ul','wbr',
'xmp'];



var inScopeTags=[
'applet','caption','html','table','td','th','marquee','object',
'template',




'foreignObject','desc','title'];



var buttonScopeTags=inScopeTags.concat(['button']);


var impliedEndTags=
['dd','dt','li','option','optgroup','p','rp','rt'];

var emptyAncestorInfo={
parentTag:null,

formTag:null,
aTagInScope:null,
buttonTagInScope:null,
nobrTagInScope:null,
pTagInButtonScope:null,

listItemTagAutoclosing:null,
dlItemTagAutoclosing:null};


var updatedAncestorInfo=function(oldInfo,tag,instance){
var ancestorInfo=assign({},oldInfo||emptyAncestorInfo);
var info={tag:tag,instance:instance};

if(inScopeTags.indexOf(tag)!==-1){
ancestorInfo.aTagInScope=null;
ancestorInfo.buttonTagInScope=null;
ancestorInfo.nobrTagInScope=null;}

if(buttonScopeTags.indexOf(tag)!==-1){
ancestorInfo.pTagInButtonScope=null;}




if(
specialTags.indexOf(tag)!==-1&&
tag!=='address'&&tag!=='div'&&tag!=='p')
{
ancestorInfo.listItemTagAutoclosing=null;
ancestorInfo.dlItemTagAutoclosing=null;}


ancestorInfo.parentTag=info;

if(tag==='form'){
ancestorInfo.formTag=info;}

if(tag==='a'){
ancestorInfo.aTagInScope=info;}

if(tag==='button'){
ancestorInfo.buttonTagInScope=info;}

if(tag==='nobr'){
ancestorInfo.nobrTagInScope=info;}

if(tag==='p'){
ancestorInfo.pTagInButtonScope=info;}

if(tag==='li'){
ancestorInfo.listItemTagAutoclosing=info;}

if(tag==='dd'||tag==='dt'){
ancestorInfo.dlItemTagAutoclosing=info;}


return ancestorInfo;};





var isTagValidWithParent=function(tag,parentTag){

switch(parentTag){

case 'select':
return tag==='option'||tag==='optgroup'||tag==='#text';
case 'optgroup':
return tag==='option'||tag==='#text';


case 'option':
return tag==='#text';







case 'tr':
return (
tag==='th'||tag==='td'||tag==='style'||tag==='script'||
tag==='template');



case 'tbody':
case 'thead':
case 'tfoot':
return (
tag==='tr'||tag==='style'||tag==='script'||
tag==='template');



case 'colgroup':
return tag==='col'||tag==='template';


case 'table':
return (
tag==='caption'||tag==='colgroup'||tag==='tbody'||
tag==='tfoot'||tag==='thead'||tag==='style'||
tag==='script'||tag==='template');



case 'head':
return (
tag==='base'||tag==='basefont'||tag==='bgsound'||
tag==='link'||tag==='meta'||tag==='title'||
tag==='noscript'||tag==='noframes'||tag==='style'||
tag==='script'||tag==='template');



case 'html':
return tag==='head'||tag==='body';}





switch(tag){
case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return (
parentTag!=='h1'&&parentTag!=='h2'&&parentTag!=='h3'&&
parentTag!=='h4'&&parentTag!=='h5'&&parentTag!=='h6');


case 'rp':
case 'rt':
return impliedEndTags.indexOf(parentTag)===-1;

case 'caption':
case 'col':
case 'colgroup':
case 'frame':
case 'head':
case 'tbody':
case 'td':
case 'tfoot':
case 'th':
case 'thead':
case 'tr':




return parentTag==null;}


return true;};





var findInvalidAncestorForTag=function(tag,ancestorInfo){
switch(tag){
case 'address':
case 'article':
case 'aside':
case 'blockquote':
case 'center':
case 'details':
case 'dialog':
case 'dir':
case 'div':
case 'dl':
case 'fieldset':
case 'figcaption':
case 'figure':
case 'footer':
case 'header':
case 'hgroup':
case 'main':
case 'menu':
case 'nav':
case 'ol':
case 'p':
case 'section':
case 'summary':
case 'ul':

case 'pre':
case 'listing':

case 'table':

case 'hr':

case 'xmp':

case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return ancestorInfo.pTagInButtonScope;

case 'form':
return ancestorInfo.formTag||ancestorInfo.pTagInButtonScope;

case 'li':
return ancestorInfo.listItemTagAutoclosing;

case 'dd':
case 'dt':
return ancestorInfo.dlItemTagAutoclosing;

case 'button':
return ancestorInfo.buttonTagInScope;

case 'a':


return ancestorInfo.aTagInScope;

case 'nobr':
return ancestorInfo.nobrTagInScope;}


return null;};






var findOwnerStack=function(instance){
if(!instance){
return [];}


var stack=[];

do {

stack.push(instance);}while(
instance=instance._currentElement._owner);
stack.reverse();
return stack;};


var didWarn={};

validateDOMNesting=function(childTag,childInstance,ancestorInfo){
ancestorInfo=ancestorInfo||emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo&&parentInfo.tag;

var invalidParent=
isTagValidWithParent(childTag,parentTag)?null:parentInfo;
var invalidAncestor=
invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);
var problematic=invalidParent||invalidAncestor;

if(problematic){
var ancestorTag=problematic.tag;
var ancestorInstance=problematic.instance;

var childOwner=childInstance&&childInstance._currentElement._owner;
var ancestorOwner=
ancestorInstance&&ancestorInstance._currentElement._owner;

var childOwners=findOwnerStack(childOwner);
var ancestorOwners=findOwnerStack(ancestorOwner);

var minStackLen=Math.min(childOwners.length,ancestorOwners.length);
var i;

var deepestCommon=-1;
for(i=0;i<minStackLen;i++){
if(childOwners[i]===ancestorOwners[i]){
deepestCommon=i;}else 
{
break;}}



var UNKNOWN='(unknown)';
var childOwnerNames=childOwners.slice(deepestCommon+1).map(
function(inst){return inst.getName()||UNKNOWN;});

var ancestorOwnerNames=ancestorOwners.slice(deepestCommon+1).map(
function(inst){return inst.getName()||UNKNOWN;});

var ownerInfo=[].concat(


deepestCommon!==-1?
childOwners[deepestCommon].getName()||UNKNOWN:
[],
ancestorOwnerNames,
ancestorTag,

invalidAncestor?['...']:[],
childOwnerNames,
childTag).
join(' > ');

var warnKey=
!!invalidParent+'|'+childTag+'|'+ancestorTag+'|'+ownerInfo;
if(didWarn[warnKey]){
return;}

didWarn[warnKey]=true;

if(invalidParent){
var info='';
if(ancestorTag==='table'&&childTag==='tr'){
info+=
' Add a <tbody> to your code to match the DOM tree generated by '+
'the browser.';}

warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. '+
'See %s.%s',
childTag,
ancestorTag,
ownerInfo,
info);}else 

{
warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a descendant of '+
'<%s>. See %s.',
childTag,
ancestorTag,
ownerInfo);}}};





validateDOMNesting.ancestorInfoContextKey=
'__validateDOMNesting_ancestorInfo$'+Math.random().toString(36).slice(2);

validateDOMNesting.updatedAncestorInfo=updatedAncestorInfo;


validateDOMNesting.isTagValidInContext=function(tag,ancestorInfo){
ancestorInfo=ancestorInfo||emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo&&parentInfo.tag;
return (
isTagValidWithParent(tag,parentTag)&&
!findInvalidAncestorForTag(tag,ancestorInfo));};}




module.exports=validateDOMNesting;
});
__d('AppStateIOS',function(global, require, module, exports) {  'use strict';












var warning=require('warning');var 

AppStateIOS=function(){function AppStateIOS(){babelHelpers.classCallCheck(this,AppStateIOS);}babelHelpers.createClass(AppStateIOS,null,[{key:'addEventListener',value:function addEventListener(

type,handler){
warning(false,'Cannot listen to AppStateIOS events on Android.');}},{key:'removeEventListener',value:function removeEventListener(


type,handler){
warning(false,'Cannot remove AppStateIOS listener on Android.');}}]);return AppStateIOS;}();




AppStateIOS.currentState=null;

module.exports=AppStateIOS;
});
__d('AsyncStorage',function(global, require, module, exports) {  'use strict';













var NativeModules=require('NativeModules');
var RCTAsyncSQLiteStorage=NativeModules.AsyncSQLiteDBStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;
var RCTAsyncFileStorage=NativeModules.AsyncLocalStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage||RCTAsyncSQLiteStorage||RCTAsyncFileStorage;













var AsyncStorage={
_getRequests:[],
_getKeys:[],
_immediate:null,





getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result&&result[0]&&result[0][1]?result[0][1]:null;
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0],value);
if(errs){
reject(errs[0]);}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0]);
if(errs){
reject(errs[0]);}else 
{
resolve(null);}});});},








removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0]);
if(errs){
reject(errs[0]);}else 
{
resolve(null);}});});},









mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0]);
if(errs){
reject(errs[0]);}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback&&callback(convertError(error));
if(error&&convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback&&callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},
















flushGetRequests:function(){
var getRequests=this._getRequests;
var getKeys=this._getKeys;

this._getRequests=[];
this._getKeys=[];

RCTAsyncStorage.multiGet(getKeys,function(errors,result){



var reqLength=getRequests.length;var _loop=function(
i){
var request=getRequests[i];
var requestKeys=request.keys;
requestResult=result.filter(function(resultPair){
return requestKeys.indexOf(resultPair[0])!==-1;});


request.callback&&request.callback(null,requestResult);
request.resolve&&request.resolve(requestResult);};for(var i=0;i<reqLength;i++){var requestResult;_loop(i);}});},










multiGet:function(
keys,
callback)
{var _this=this;
if(!this._immediate){
this._immediate=setImmediate(function(){
_this._immediate=null;
_this.flushGetRequests();});}



var getRequest={
keys:keys,
callback:callback,
keyIndex:this._getKeys.length,
resolve:null,
reject:null};


var promiseResult=new Promise(function(resolve,reject){
getRequest.resolve=resolve;
getRequest.reject=reject;});


this._getRequests.push(getRequest);
this._getKeys.push.apply(this._getKeys,keys);

return promiseResult;},








multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=convertErrors(errors);
callback&&callback(error);
if(error){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=convertErrors(errors);
callback&&callback(error);
if(error){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=convertErrors(errors);
callback&&callback(error);
if(error){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertErrors(errs){
if(!errs){
return null;}

return (Array.isArray(errs)?errs:[errs]).map(function(e){return convertError(e);});}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key=error.key;
return out;}


module.exports=AsyncStorage;
});
__d('CameraRoll',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 





CameraRoll=function(){function CameraRoll(){babelHelpers.classCallCheck(this,CameraRoll);}babelHelpers.createClass(CameraRoll,null,[{key:'saveImageWithTag',value:function saveImageWithTag(





















tag,successCallback,errorCallback){
invariant(
typeof tag==='string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback&&successCallback(imageTag);},

function(errorMessage){
errorCallback&&errorCallback(errorMessage);});}},{key:'getPhotos',value:function getPhotos(












params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback==='function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback==='function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback=function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;}();



CameraRoll.GroupTypesOptions=GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions=ASSET_TYPE_OPTIONS;

module.exports=CameraRoll;
});
__d('Clipboard',function(global, require, module, exports) {  'use strict';











module.exports=require('NativeModules').Clipboard;
});
__d('ImagePickerIOS',function(global, require, module, exports) {  'use strict';












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config=babelHelpers.extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config=babelHelpers.extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports=ImagePickerIOS;
});
__d('IntentAndroid',function(global, require, module, exports) {  'use strict';











var IntentAndroidModule=require('NativeModules').IntentAndroid;
var invariant=require('invariant');var 























IntentAndroid=function(){function IntentAndroid(){babelHelpers.classCallCheck(this,IntentAndroid);}babelHelpers.createClass(IntentAndroid,null,[{key:'openURL',value:function openURL(















url){
this._validateURL(url);
IntentAndroidModule.openURL(url);}},{key:'canOpenURL',value:function canOpenURL(












url,callback){
this._validateURL(url);
invariant(
typeof callback==='function',
'A valid callback function is required');

IntentAndroidModule.canOpenURL(url,callback);}},{key:'_validateURL',value:function _validateURL(


url){
invariant(
typeof url==='string',
'Invalid URL: should be a string. Was: '+url);

invariant(
url,
'Invalid URL: cannot be empty');}}]);return IntentAndroid;}();




module.exports=IntentAndroid;
});
__d('LayoutAnimation',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var UIManager=require('UIManager');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true,
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd){
configChecker({config:config},'config','LayoutAnimation.configureNext');
UIManager.configureNextLayoutAnimation(
config,onAnimationDidEnd||function(){},function(){});}



function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}};











var LayoutAnimation={














configureNext:configureNext,



create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:Presets,
easeInEaseOut:configureNext.bind(
null,Presets.easeInEaseOut),

linear:configureNext.bind(
null,Presets.linear),

spring:configureNext.bind(
null,Presets.spring)};



module.exports=LayoutAnimation;
});
__d('LinkingIOS',function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager&&
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 










































































LinkingIOS=function(){function LinkingIOS(){babelHelpers.classCallCheck(this,LinkingIOS);}babelHelpers.createClass(LinkingIOS,null,[{key:'addEventListener',value:function addEventListener(




type,handler){
invariant(
type==='url',
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);

_notifHandlers.set(handler,listener);}},{key:'removeEventListener',value:function removeEventListener(





type,handler){
invariant(
type==='url',
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'openURL',value:function openURL(





url){
invariant(
typeof url==='string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:function canOpenURL(









url,callback){
invariant(
typeof url==='string',
'Invalid url: should be a string');

invariant(
typeof callback==='function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:function popInitialURL()






{
var initialURL=_initialURL;
_initialURL=null;
return initialURL;}}]);return LinkingIOS;}();



module.exports=LinkingIOS;
});
__d('NetInfo',function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTNetInfo=NativeModules.NetInfo;

var DEVICE_CONNECTIVITY_EVENT='networkStatusDidChange';




































var _subscriptions=new Map();

var _isConnected=undefined;
if(Platform.OS==='ios'){
_isConnected=function(
reachability)
{
return reachability!=='none'&&reachability!=='unknown';};}else 

if(Platform.OS==='android'){
_isConnected=function(
connectionType)
{
return connectionType!=='NONE'&&connectionType!=='UNKNOWN';};}



var _isConnectedSubscriptions=new Map();


























































































var NetInfo={
addEventListener:function(
eventName,
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_CONNECTIVITY_EVENT,
function(appStateData){
handler(appStateData.network_info);});


_subscriptions.set(handler,listener);},


removeEventListener:function(
eventName,
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentConnectivity(
function(resp){
resolve(resp.network_info);},

reject);});},




isConnected:{
addEventListener:function(
eventName,
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler,listener);
NetInfo.addEventListener(
eventName,
listener);},



removeEventListener:function(
eventName,
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName,
listener);

_isConnectedSubscriptions.delete(handler);},


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}},




isConnectionExpensive:function(callback){
if(Platform.OS==='android'){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});}else 

{

callback(null,"Unsupported");}}};




module.exports=NetInfo;
});
__d('PushNotificationIOS',function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager&&
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 





























PushNotificationIOS=function(){babelHelpers.createClass(PushNotificationIOS,null,[{key:'presentLocalNotification',value:function presentLocalNotification(













details){
RCTPushNotificationManager.presentLocalNotification(details);}},{key:'scheduleLocalNotification',value:function scheduleLocalNotification(











details){
RCTPushNotificationManager.scheduleLocalNotification(details);}},{key:'cancelAllLocalNotifications',value:function cancelAllLocalNotifications()





{
RCTPushNotificationManager.cancelAllLocalNotifications();}},{key:'setApplicationIconBadgeNumber',value:function setApplicationIconBadgeNumber(





number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:function getApplicationIconBadgeNumber(





callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:function addEventListener(













type,handler){
invariant(
type==='notification'||type==='register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener;
if(type==='notification'){
listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}else 


if(type==='register'){
listener=RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_EVENT,
function(registrationInfo){
handler(registrationInfo.deviceToken);});}



_notifHandlers.set(handler,listener);}},{key:'requestPermissions',value:function requestPermissions(
















permissions)



{
var requestedPermissions={};
if(permissions){
requestedPermissions={
alert:!!permissions.alert,
badge:!!permissions.badge,
sound:!!permissions.sound};}else 

{
requestedPermissions={
alert:true,
badge:true,
sound:true};}


RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'abandonPermissions',value:function abandonPermissions()










{
RCTPushNotificationManager.abandonPermissions();}},{key:'checkPermissions',value:function checkPermissions(










callback){
invariant(
typeof callback==='function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:function removeEventListener(






type,handler){
invariant(
type==='notification'||type==='register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'popInitialNotification',value:function popInitialNotification()










{
var initialNotification=_initialNotification&&
new PushNotificationIOS(_initialNotification);
_initialNotification=null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;babelHelpers.classCallCheck(this,PushNotificationIOS);
this._data={};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey==='aps'){
_this._alert=notifVal.alert;
_this._sound=notifVal.sound;
_this._badgeCount=notifVal.badge;}else 
{
_this._data[notifKey]=notifVal;}});}babelHelpers.createClass(PushNotificationIOS,[{key:'getMessage',value:function getMessage()







{

return this._alert;}},{key:'getSound',value:function getSound()





{
return this._sound;}},{key:'getAlert',value:function getAlert()





{
return this._alert;}},{key:'getBadgeCount',value:function getBadgeCount()





{
return this._badgeCount;}},{key:'getData',value:function getData()





{
return this._data;}}]);return PushNotificationIOS;}();



module.exports=PushNotificationIOS;
});
__d('Settings',function(global, require, module, exports) {  'use strict';












var Settings={
get:function(key){
console.warn('Settings is not yet supported on Android');
return null;},


set:function(settings){
console.warn('Settings is not yet supported on Android');},


watchKeys:function(keys,callback){
console.warn('Settings is not yet supported on Android');
return -1;},


clearWatch:function(watchId){
console.warn('Settings is not yet supported on Android');}};



module.exports=Settings;
});
__d('StatusBarIOS',function(global, require, module, exports) {  'use strict';












module.exports=null;
});
__d('VibrationIOS',function(global, require, module, exports) {  'use strict';













var warning=require('warning');

var VibrationIOS={
vibrate:function(){
warning('VibrationIOS is not supported on this platform!');}};



module.exports=VibrationIOS;
});
__d('RCTNativeAppEventEmitter',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

BatchedBridge.registerCallableModule(
'RCTNativeAppEventEmitter',
RCTNativeAppEventEmitter);


module.exports=RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',function(global, require, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports=LinkedStateMixin;
});
__d('ReactLink',function(global, require, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value=value;
this.requestChange=requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType==='undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes={
link:createLinkTypeChecker};


module.exports=ReactLink;
});
__d('ReactStateSetters',function(global, require, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters||(component.__keySetters={});
return cache[key]||(cache[key]=createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key]=value;
component.setState(partialState);};}



ReactStateSetters.Mixin={
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports=ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',function(global, require, module, exports) {  'use strict';












var shallowCompare=require('shallowCompare');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return shallowCompare(this,nextProps,nextState);}};



module.exports=ReactComponentWithPureRenderMixin;
});
__d('shallowCompare',function(global, require, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');





function shallowCompare(instance,nextProps,nextState){
return (
!shallowEqual(instance.props,nextProps)||
!shallowEqual(instance.state,nextState));}



module.exports=shallowCompare;
});
__d('shallowEqual',function(global, require, module, exports) {  'use strict';














var hasOwnProperty=Object.prototype.hasOwnProperty;






function shallowEqual(objA,objB){
if(objA===objB){
return true;}


if(typeof objA!=='object'||objA===null||
typeof objB!=='object'||objB===null){
return false;}


var keysA=Object.keys(objA);
var keysB=Object.keys(objB);

if(keysA.length!==keysB.length){
return false;}



var bHasOwnProperty=hasOwnProperty.bind(objB);
for(var i=0;i<keysA.length;i++){
if(!bHasOwnProperty(keysA[i])||objA[keysA[i]]!==objB[keysA[i]]){
return false;}}



return true;}


module.exports=shallowEqual;
});
__d('cloneWithProps',function(global, require, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});

var didDeprecatedWarn=false;











function cloneWithProps(child,props){
if(__DEV__){
warning(
didDeprecatedWarn,
'cloneWithProps(...) is deprecated. '+
'Please use React.cloneElement instead.');

didDeprecatedWarn=true;
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is '+
'dangerous because you\'re creating a new child which will not be '+
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP)&&
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children=child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports=cloneWithProps;
});
__d('ReactPropTransferer',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key]=value;}else 
{
props[key]=mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps){
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy&&TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey]=newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports=ReactPropTransferer;
});
__d('joinClasses',function(global, require, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className='';}

var nextClass;
var argLength=arguments.length;
if(argLength>1){
for(var ii=1;ii<argLength;ii++){
nextClass=arguments[ii];
if(nextClass){
className=(className?className+' ':'')+nextClass;}}}



return className;}


module.exports=joinClasses;
});
__d('ReactFragment',function(global, require, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactElement=require('ReactElement');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var warning=require('warning');









var numericPropertyRegex=/^\d+$/;

var warnedAboutNumeric=false;

var ReactFragment={


create:function(object){
if(typeof object!=='object'||!object||Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object. Got: %s',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement '+
'without a wrapper object.');

return object;}


invariant(
object.nodeType!==1,
'React.addons.createFragment(...): Encountered an invalid child; DOM '+
'elements are not valid children of React components.');


var result=[];

for(var key in object){
if(__DEV__){
if(!warnedAboutNumeric&&numericPropertyRegex.test(key)){
warning(
false,
'React.addons.createFragment(...): Child objects should have '+
'non-numeric keys so ordering is preserved.');

warnedAboutNumeric=true;}}


ReactChildren.mapIntoWithKeyPrefixInternal(
object[key],
result,
key,
emptyFunction.thatReturnsArgument);}



return result;}};



module.exports=ReactFragment;
});
__d('update',function(global, require, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty={}.hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x&&typeof x==='object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command]=true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. '+
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec==='object',
'update(): You provided a key path to update() that did not contain one '+
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length===1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj&&typeof mergeObj==='object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue&&typeof nextValue==='object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. '+
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. '+
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY]==='function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue=spec[COMMAND_APPLY](nextValue);}


for(var k in spec){
if(!(ALL_COMMANDS_SET.hasOwnProperty(k)&&ALL_COMMANDS_SET[k])){
nextValue[k]=update(value[k],spec[k]);}}



return nextValue;}


module.exports=update;
});
__d('ReactTestUtils',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactDOM=require('ReactDOM');
var ReactElement=require('ReactElement');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var findDOMNode=require('findDOMNode');
var invariant=require('invariant');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}





function findAllInRenderedTreeInternal(inst,test){
if(!inst||!inst.getPublicInstance){
return [];}

var publicInst=inst.getPublicInstance();
var ret=test(publicInst)?[publicInst]:[];
var currentElement=inst._currentElement;
if(ReactTestUtils.isDOMComponent(publicInst)){
var renderedChildren=inst._renderedChildren;
var key;
for(key in renderedChildren){
if(!renderedChildren.hasOwnProperty(key)){
continue;}

ret=ret.concat(
findAllInRenderedTreeInternal(
renderedChildren[key],
test));}}else 



if(
ReactElement.isValidElement(currentElement)&&
typeof currentElement.type==='function')
{
ret=ret.concat(
findAllInRenderedTreeInternal(inst._renderedComponent,test));}


return ret;}







var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return ReactDOM.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst)&&
inst.type===convenienceConstructor);},



isDOMComponent:function(inst){
return !!(inst&&inst.nodeType===1&&inst.tagName);},


isDOMComponentElement:function(inst){
return !!(inst&&
ReactElement.isValidElement(inst)&&
!!inst.tagName);},


isCompositeComponent:function(inst){
if(ReactTestUtils.isDOMComponent(inst)){


return false;}

return inst!=null&&
typeof inst.render==='function'&&
typeof inst.setState==='function';},


isCompositeComponentWithType:function(inst,type){
if(!ReactTestUtils.isCompositeComponent(inst)){
return false;}

var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return constructor===type;},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render==='function'&&
typeof prototype.setState==='function');},



isCompositeComponentElementWithType:function(inst,type){
var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return !!(ReactTestUtils.isCompositeComponentElement(inst)&&
constructor===type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

invariant(
ReactTestUtils.isCompositeComponent(inst),
'findAllInRenderedTree(...): instance must be a composite component');

return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst),test);},







scryRenderedDOMComponentsWithClass:function(root,classNames){
if(!Array.isArray(classNames)){
classNames=classNames.split(/\s+/);}

return ReactTestUtils.findAllInRenderedTree(root,function(inst){
if(ReactTestUtils.isDOMComponent(inst)){
var className=inst.className;
if(typeof className!=='string'){

className=inst.getAttribute('class')||'';}

var classList=className.split(/\s+/);
return classNames.every(function(name){
return classList.indexOf(name)!==-1;});}


return false;});},









findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length!==1){
throw new Error('Did not find exactly one match '+
'(found: '+all.length+') for class:'+className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst)&&
inst.tagName.toUpperCase()===tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length!==1){
throw new Error('Did not find exactly one match for tag:'+tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length!==1){
throw new Error(
'Did not find exactly one match for componentType:'+componentType+
' (found '+all.length+')');}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName=mockTagName||module.mockTagName||'div';

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target=node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
findDOMNode(comp),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance=null;};


ReactShallowRenderer.prototype.getRenderOutput=function(){
return (
this._instance&&this._instance._renderedComponent&&
this._instance._renderedComponent._renderedOutput||
null);};



var NoopInternalComponent=function(element){
this._renderedOutput=element;
this._currentElement=element;};


NoopInternalComponent.prototype={

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput=element;
this._currentElement=element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render=function(element,context){
invariant(
ReactElement.isValidElement(element),
'ReactShallowRenderer render(): Invalid component element.%s',
typeof element==='function'?
' Instead of passing a component class, make sure to instantiate '+
'it by passing it to React.createElement.':
'');

invariant(
typeof element.type!=='string',
'ReactShallowRenderer render(): Shallow rendering works only with custom '+
'components, not primitives (%s). Instead of calling `.render(el)` and '+
'inspecting the rendered output, look at `el.props` directly instead.',
element.type);


if(!context){
context=emptyObject;}

var transaction=ReactUpdates.ReactReconcileTransaction.getPooled(false);
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount=function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render=function(element,transaction,context){
if(this._instance){
this._instance.receiveComponent(element,transaction,context);}else 
{
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance=instance;}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node=findDOMNode(domComponentOrNode);}else 
if(domComponentOrNode.tagName){
node=domComponentOrNode;}


var dispatchConfig=
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

var fakeNativeEvent=new Event();
fakeNativeEvent.target=node;


var event=new SyntheticEvent(
dispatchConfig,
ReactMount.getID(node),
fakeNativeEvent,
node);

assign(event,eventData);

if(dispatchConfig.phasedRegistrationNames){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
{
EventPropagators.accumulateDirectDispatches(event);}


ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue(true);});};}




function buildSimulators(){
ReactTestUtils.Simulate={};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs){




ReactTestUtils.Simulate[eventType]=makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder=function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName=function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





Object.keys(topLevelTypes).forEach(function(eventType){

var convenienceName=eventType.indexOf('top')===0?
eventType.charAt(3).toLowerCase()+eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName]=
makeNativeSimulator(eventType);});


module.exports=ReactTestUtils;
});
__d('ReactDOM',function(global, require, module, exports) {  'use strict';







var ReactUpdates=require('ReactUpdates');


var ReactDOM={
unstable_batchedUpdates:ReactUpdates.batchedUpdates};


module.exports=ReactDOM;
});
__d('findDOMNode',function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner!==null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing getDOMNode or findDOMNode inside its render(). '+
'render() should be a pure function of props and state. It should '+
'never access something that requires stale data from the previous '+
'render, such as refs. Move this logic to componentDidMount and '+
'componentDidUpdate instead.',
owner.getName()||'A component');

owner._warnedAboutRefsInRender=true;}}


if(componentOrElement==null){
return null;}

if(componentOrElement.nodeType===1){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render==null||
typeof componentOrElement.render!=='function',
'findDOMNode was called on an unmounted component.');

invariant(
false,
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
Object.keys(componentOrElement));}



module.exports=findDOMNode;
});
__d('XenformaMobileSync/synchronization.js',function(global, require, module, exports) {  'use strict';

var ForerunnerDB=require("forerunnerdb/js/builds/nodecore.js");
var mobile_utils=require('XenformaMobileSync/mobile_utils.js');
var fs=require("react-native-fs/FS.common.js");
var file_upload=require("NativeModules").FileUpload;
var network=require("XenformaMobileSync/network.js");
var server_auth=require("XenformaMobileSync/server_auth.js");

var fdb=new ForerunnerDB();
var db=fdb.db('xenforma');

var SERVER_URL="http://10.1.10.117:1337/";

var SYNC_RUNNING=false;

var synchronize=function(){
return new Promise(function(resolve,reject){
if(SYNC_RUNNING){
return reject("SYNC_IN_PROGRESS");}


SYNC_RUNNING=true;

network.is_device_online(function(online){
if(online){
get_entity_info(function(err,entity_info,entity_info_collection){
if(err){
SYNC_RUNNING=false;
return reject(err);}



begin_synchronization(entity_info,entity_info_collection,{},function(err){

SYNC_RUNNING=false;
if(err){
return reject(err);}


get_menu_items(entity_info,function(err){
if(err){
return reject(err);}


return resolve();});});});}else 







{
SYNC_RUNNING=false;
return reject("DEVICE_IS_OFFLINE");}});});};





var get_entity_info=function(callback){
var xenforma_entity_info=db.collection('xenforma_entity_info');
xenforma_entity_info.load(function(err){
if(err){
return callback(err);}


var entity_info=xenforma_entity_info.find({});
var entity_info_return_object={};


mobile_utils.for_each_async(entity_info,function(err,args,_state,_callback){
var entity_info_instance=args.data_object;



entity_info_return_object[entity_info_instance.entity_name]={};
entity_info_return_object[entity_info_instance.entity_name].version_number=entity_info_instance.version_number;
entity_info_return_object[entity_info_instance.entity_name].max_version_number=entity_info_instance.max_version_number==null?undefined:entity_info_instance.max_version_number;
entity_info_return_object[entity_info_instance.entity_name].last_id=entity_info_instance.last_id==null?undefined:entity_info_instance.last_id;


get_entity_changes(entity_info_instance,entity_info_return_object[entity_info_instance.entity_name],function(err){
return _callback(err);});},

{parallel:false},null,function(_err){
if(_err){
return callback(_err);}


return callback(false,entity_info_return_object,xenforma_entity_info);});});};




var get_entity_changes=function(entity_info,entity_info_ret,callback){


if((!entity_info.changes||entity_info.changes.length==0)&&(
!entity_info.workflow_changes||entity_info.workflow_changes.length==0)&&(
!entity_info.removals||entity_info.removals.length==0)){
return callback();}

var entity_collection=db.collection(entity_info.entity_name);
entity_collection.load(function(err){
if(err){
return callback(err);}



var get_entity_instance_changes=function(field_changes,push_to_array){
for(var i=0;i<field_changes.length;i++){
var change=field_changes[i];
var _id=change._id;
var single_entity_result={_id:_id};
var entity_instance=entity_collection.find({_id:_id})[0];
for(var j=0;j<change.fields.length;j++){
var field=change.fields[j].split(":");

var get_value_for_field=function(field,data){
var current_field=field[0];
field.splice(0,1);

var data_value={};

if(data===undefined){
data_value[current_field]=data;}else 

if(field.length>0){
if(current_field.substring(0,1)!="["){
data_value[current_field]=get_value_for_field(field,data[current_field]);}else 

{
var data_id=current_field.substring(1,current_field.length-1);
for(var k=0;k<data.length;k++){
if(data[k]._id==data_id){
data_value=get_value_for_field(field,data[k]);
data_value._id=data_id;
data_value=[data_value];}}}}else 




{
if(current_field.substring(0,1)!="["){
data_value[current_field]=data[current_field];}else 

{
var data_id=current_field.substring(1,current_field.length-1);
for(var k=0;k<data.length;k++){
if(data[k]._id==data_id){
data_value=[data[k]];}}}}





if(data_value[current_field]===undefined){
data_value[current_field]=null;}


return data_value;};



mobile_utils.extend_object(single_entity_result,get_value_for_field(field,entity_instance),{ignore_null_and_undefined:false,extend_arrays:true,array_match_field:"_id"});}



push_to_array.push(single_entity_result);}};




if(entity_info.changes&&entity_info.changes.length>0){
if(entity_info_ret.changes===undefined){
entity_info_ret.changes=[];}

get_entity_instance_changes(entity_info.changes,entity_info_ret.changes);}



if(entity_info.workflow_changes&&entity_info.workflow_changes.length>0){
if(entity_info_ret.workflow_changes===undefined){
entity_info_ret.workflow_changes=[];}

get_entity_instance_changes(entity_info.workflow_changes,entity_info_ret.workflow_changes);}



if(entity_info.removals&&entity_info.removals.length>0){
entity_info_ret.removals=entity_info.removals;}


return callback();});};




var send_sync_request=function(entity_data,callback){
var sync_data={data:entity_data};
server_auth.do_authenticated_http_call('api/sync/get_latest_data',{
method:"POST",
headers:{
"Accept":"application/json",
"Content-Type":"application/json"},

body:JSON.stringify(sync_data)}).
then(function(response){

response.json().then(function(json_response){

callback(false,json_response);}).
catch(function(err){
callback(err);});}).

catch(function(err){

callback(err);});};



var begin_synchronization=function(entity_versions,entity_info_collection,shared_object,callback){
send_sync_request(entity_versions,function(err,response_data){
if(err){
return callback(err);}


var entities_to_process=[];
for(var entity_name in response_data){
if(entity_name=="continue"){
continue;}

entities_to_process.push(entity_name);}


var do_continue=response_data.continue;

mobile_utils.for_each_async(entities_to_process,function(err,args,_state,_callback){
var entity_name=args.data_object;

process_entity_changes(entity_versions[entity_name],response_data[entity_name],entity_name,entity_info_collection,function(_err,should_continue){
if(!do_continue){
do_continue=should_continue;}

return _callback(_err);});},

{parallel:false},null,function(_err){
if(_err){

return callback(_err);}




update_entity_info(response_data,entity_info_collection,function(err,entity_info){
if(err){
return callback(err);}


if(do_continue){

return begin_synchronization(entity_info,entity_info_collection,shared_object,callback);}else 

{

return process_file_data(entity_info_collection,function(err){

return callback(err);});}});});});};







var process_entity_changes=function(initial_entity_info,entity_info,entity_name,entity_info_collection,callback){
var entity_collection=db.collection(entity_name);
entity_collection.load(function(err){
if(err){
return callback(err);}


var changes_made=false;


var changes=entity_info.data;
var removals=entity_info.removals;


var successful_changes=entity_info.successful_changes;
var successful_workflow_changes=entity_info.successful_workflow_changes;
var successful_removals=entity_info.successful_removals;
var upload_urls=entity_info.upload_urls;
var sync_errors=entity_info.errors;

if(removals&&removals.length>0){
entity_collection.remove({"_id":{"$in":removals}});
if(entity_name=="file"){
add_file_to_delete_queue(removals,entity_info_collection);}

changes_made=true;}


if(changes&&changes.length>0){
for(var i=0;i<changes.length;i++){
var change=changes[i];

if(entity_name=="file"){
if(change.download_url){
change.downloaded=false;}}



var document=entity_collection.find({"_id":change._id});
if(document.length>0){
document=document[0];


mobile_utils.extend_object(document,change,{replace_shallow_fields:true,ignore_null_and_undefined:false,extend_arrays:true,array_match_field:"_id"});
entity_collection.remove({"_id":document._id});
entity_collection.insert(document);}else 

{
entity_collection.insert(change);}}


changes_made=true;}



if(successful_changes&&successful_changes.length){
entity_info_collection.update({"entity_name":entity_name},{"$pull":{"changes._id":{"$in":successful_changes}}});}


if(successful_workflow_changes&&successful_workflow_changes.length){
entity_info_collection.update({"entity_name":entity_name},{"$pull":{"workflow_changes._id":{"$in":successful_workflow_changes}}});}


if(successful_removals&&successful_removals.length){
entity_info_collection.update({"entity_name":entity_name},{"$pull":{"removals":{"$in":successful_removals}}});}



if(sync_errors&&sync_errors.length>0){
entity_info_collection.update({"entity_name":entity_name},{"$push":{"errors":{"$each":sync_errors}}});}



if(entity_name=="file"&&upload_urls&&upload_urls.length>0){
for(var i=0;i<upload_urls.length;i++){
var upload_info=upload_urls[i];
entity_collection.update({"_id":upload_info.file_id},{"$set":{"upload_url":upload_info.url}});}

changes_made=true;}




if(entity_info.continue){
entity_info.max_version_number=entity_info.version_number;
if(initial_entity_info===undefined){
entity_info.version_number=0;}else 

{
entity_info.version_number=initial_entity_info.version_number;}}



if(entity_info.data){
delete entity_info.data;}


if(entity_info.removals){
delete entity_info.removals;}


if(entity_info.successful_changes){
delete entity_info.successful_changes;}


if(entity_info.successful_workflow_changes){
delete entity_info.successful_workflow_changes;}


if(entity_info.successful_removals){
delete entity_info.successful_removals;}


if(entity_info.upload_urls){
delete entity_info.upload_urls;}


if(entity_info.errors){
delete entity_info.errors;}


if(changes_made){
entity_collection.save(function(err){
return callback(err,entity_info.continue);});}else 


{
return callback();}});};




var update_entity_info=function(entity_info,entity_info_collection,callback){
for(var entity_name in entity_info){
if(entity_name=="continue"){
delete entity_info["continue"];
continue;}

var single_entity_details=entity_info_collection.find({entity_name:entity_name});
if(single_entity_details.length==0){
single_entity_details={entity_name:entity_name};
entity_info_collection.insert(single_entity_details);}



var version_number=entity_info[entity_name].version_number;
var max_version_number=entity_info[entity_name].max_version_number===undefined?null:entity_info[entity_name].max_version_number;
var last_id=entity_info[entity_name].last_id===undefined?null:entity_info[entity_name].last_id;

entity_info_collection.update({entity_name:entity_name},{"$overwrite":{version_number:version_number,max_version_number:max_version_number,last_id:last_id}});}



entity_info_collection.save(function(err){
var updated_entity_info={};
var entity_info_data=entity_info_collection.find({});
for(var i=0;i<entity_info_data.length;i++){
var entity_info_instance=entity_info_data[i];
updated_entity_info[entity_info_instance.entity_name]={version_number:entity_info_instance.version_number,max_version_number:entity_info_instance.max_version_number,last_id:entity_info_instance.last_id};}

return callback(err,updated_entity_info);});};



var process_file_data=function(entity_info_collection,callback){

var file_entity_collection=db.collection("file");

file_entity_collection.load(function(err){
if(err){
return callback(err);}



var file_downloads_complete=false;
var file_uploads_complete=false;
var file_removals_complete=false;

var changes_made=false;

var errors=[];

var files_directory_path=fs.DocumentDirectoryPath+"/xenforma_files";

var complete_process=function(){
if(file_downloads_complete&&file_uploads_complete&&file_removals_complete){
var save_changes=function(){
if(changes_made){
return file_entity_collection.save(function(err){
if(err){
errors.push(err);}


if(errors.length==0){
errors=undefined;}


return callback(errors);});}else 


{
if(errors.length==0){
errors=undefined;}

return callback(errors);}};




var files_to_mark_uploaded=file_entity_collection.find({"mark_as_uploaded":true});
if(files_to_mark_uploaded.length>0){
mobile_utils.for_each_async(files_to_mark_uploaded,function(err,args,_state,_callback){
var file_entity=args.data_object;

var request_data={"entity":"file","method":"mark_as_uploaded","data":{"file_id":file_entity._id}};

server_auth.do_authenticated_http_call("api/entity/invoke_method",{
method:"POST",
headers:{
"Accept":"application/json",
"Content-Type":"application/json"},

body:JSON.stringify(request_data)}).
then(function(response){

response.json().then(function(json_response){
if(json_response.success){
file_entity_collection.update({_id:file_entity._id},{"$unset":{"mark_as_uploaded":""}});
changes_made=true;
_callback();}else 

{

_callback(json_response.error);}}).

catch(function(err){

_callback(err);});}).

catch(function(err){

_callback(err);});},

{parallel:false},null,function(_err){
if(_err){

errors.push(_err);}


return save_changes();});}else 


{
return save_changes();}}};





var files_to_download=file_entity_collection.find({"downloaded":false});
if(files_to_download.length>0){
fs.readDir(fs.DocumentDirectoryPath).then(function(dirs){
var found=false;
for(var i=0;i<dirs.length;i++){
if(dirs[i].name=="xenforma_files"){
found=true;
break;}}



var download_files=function(){
mobile_utils.for_each_async(files_to_download,function(err,args,_state,_callback){
var file_entity=args.data_object;




















file_downloads_complete=true;
return complete_process();});};



if(!found){
console.log("not found");
fs.mkdir(files_directory_path).then(function(){
download_files();}).
catch(function(err){
errors.push(err);
file_downloads_complete=true;
return complete_process();});}else 


{

download_files();}}).

catch(function(err){
errors.push(err);
file_downloads_complete=true;
return complete_process();});}else 


{
file_downloads_complete=true;}


var files_to_upload=file_entity_collection.find({"upload_url":{"$exists":true}});
if(files_to_upload.length>0){
fs.readDir(fs.DocumentDirectoryPath).then(function(dirs){
var found=false;
for(var i=0;i<dirs.length;i++){
if(dirs[i].name=="xenforma_files"){
found=true;
break;}}



if(!found){
errors.push("xenforma_files folder missing");
file_uploads_complete=true;
return complete_process();}else 

{
mobile_utils.for_each_async(files_to_upload,function(err,args,_state,_callback){
var file_entity=args.data_object;

var upload_options={
uploadUrl:file_entity.upload_url,
method:"POST",
headers:{
"Accept":"application/json"},

files:[
{
filename:file_entity.file_name,
filepath:files_directory_path+"/"+file_entity._id}]};




file_upload.upload(upload_options,function(err,result){
if(err){
return _callback(err);}


if(!result.success){
return _callback(result.error);}


file_entity_collection.update({_id:file_entity._id},{"$unset":{"upload_url":""},"$set":{"mark_as_uploaded":true}});

return _callback();});},

{parallel:false},null,function(_err){
if(_err){
errors.push(_err);}


file_uploads_complete=true;
return complete_process();});}}).


catch(function(err){
errors.push(err);
file_uploads_complete=true;
return complete_process();});}else 


{
file_uploads_complete=true;}


var files_to_delete=entity_info_collection.find({"type":"file_delete_queue"});
if(files_to_delete.length>0){
files_to_delete=files_to_delete[0].delete_queue;
if(files_to_delete.length>0){
mobile_utils.for_each_async(files_to_delete,function(err,args,_state,_callback){
var file_id=args.data_object;


fs.unlink(files_directory_path+"/"+file_id).
finally(function(){
entity_info_collection.update({"type":"file_delete_queue"},{"$pull":{"delete_queue":file_id}});});},

{parallel:false},null,function(_err){
if(_err){
errors.push(_err);}


entity_info_collection.save(function(err){
if(err){
errors.push(err);}


file_removals_complete=true;
return complete_process();});});}else 



{
file_removals_complete=true;}}else 


{
file_removals_complete=true;}


return complete_process();});};


var get_menu_items=function(entity_info,callback){
var xenforma_menu_info=db.collection('xenforma_menu_info');
var xenforma_submenu_first=db.collection('xenforma_submenu_first');
var xenforma_submenu_second=db.collection('xenforma_submenu_second');

var request={};
request.entity="app_object";
request.method="get_menu_items";
server_auth.do_authenticated_http_call('api/entity/invoke_method',{
method:"POST",
headers:{
"Content-Type":"application/json"},

body:JSON.stringify(request)}).
then(function(response){
response.json().then(function(json_response){

var id=0;
var menu_item=[];

for(var module_key in json_response.data){
var module=json_response.data[module_key];
var module_name=module.name;

menu_item.idd=id;
menu_item.name=module_name;
var main_menu={idd:id,menuitem:module_name};

xenforma_menu_info.insert(main_menu);
var app_object=[];
for(var k=0;k<module.app_objects.length;k++){
var app_object=module.app_objects[k];

if(app_object.workflow_states&&app_object.workflow_states.length>0){
var workflows=[];
for(var j=0;j<app_object.workflow_states.length;j++){
var workflow_state=app_object.workflow_states[j];
var sub_menu_second={idd:app_object.name,pidd:module_name,submenu:workflow_state.caption,workflow:workflow_state};
xenforma_submenu_second.insert(sub_menu_second);}}



var sub_menu_first={idd:module_name,submenu:app_object.name,app_obj:app_object};
xenforma_submenu_first.insert(sub_menu_first);}}



xenforma_menu_info.save(function(err){
if(err){
return reject(err);}});


xenforma_submenu_first.save(function(err){
if(err){
return reject(err);}});


xenforma_submenu_second.save(function(err){
if(err){
return reject(err);}});




var result=xenforma_menu_info.find({});

return callback(false);}).
catch(function(err){
context.setState({error:err.json_response.message});});}).


catch(function(err){});};




var add_file_to_delete_queue=function(file_ids,entity_info_collection){
var file_delete_queue=entity_info_collection.find({"type":"file_delete_queue"});
if(file_delete_queue.length==0){
file_delete_queue.insert({"type":"file_delete_queue","delete_queue":[]});}


file_delete_queue.update({"type":"file_delete_queue"},{"$push":{"delete_queue":{"$each":file_ids}}});};


var is_sync_running=function(){
return SYNC_RUNNING;};


exports.synchronize=synchronize;
exports.is_sync_running=is_sync_running;
});
__d('forerunnerdb/js/builds/nodecore.js',function(global, require, module, exports) {  var Core=require('forerunnerdb/js/builds/core.js'),
NodePersist=require('forerunnerdb/js/lib/NodePersist.js');

if(typeof window!=='undefined'){
window.ForerunnerDB=Core;}

module.exports=Core;
});
__d('forerunnerdb/js/builds/core.js',function(global, require, module, exports) {  var Core=require('forerunnerdb/js/lib/Core.js'),
ShimIE8=require('forerunnerdb/js/lib/Shim.IE8.js');

if(typeof window!=='undefined'){
window.ForerunnerDB=Core;}

module.exports=Core;
});
__d('forerunnerdb/js/lib/Core.js',function(global, require, module, exports) {  "use strict";











var Shared,
Db,
Metrics,
Overload,
_instances=[];

Shared=require('forerunnerdb/js/lib/Shared.js');
Overload=require('forerunnerdb/js/lib/Overload.js');






var Core=function(name){
this.init.apply(this,arguments);};


Core.prototype.init=function(name){
this._db={};
this._debug={};
this._name=name||'ForerunnerDB';

_instances.push(this);};






Core.prototype.instantiatedCount=function(){
return _instances.length;};








Core.prototype.instances=function(index){
if(index!==undefined){
return _instances[index];}


return _instances;};








Core.prototype.namedInstances=function(name){
var i,
instArr;

if(name!==undefined){
for(i=0;i<_instances.length;i++){
if(_instances[i].name===name){
return _instances[i];}}



return undefined;}


instArr=[];

for(i=0;i<_instances.length;i++){
instArr.push(_instances[i].name);}


return instArr;};


Core.prototype.moduleLoaded=new Overload({







'string':function(moduleName){
if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
return false;}}



return true;}


return false;},










'string, function':function(moduleName,callback){
if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
return false;}}



if(callback){callback();}}},











'array, function':function(moduleNameArr,callback){
var moduleName,
i;

for(i=0;i<moduleNameArr.length;i++){
moduleName=moduleNameArr[i];

if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
return false;}}}}





if(callback){callback();}},











'string, function, function':function(moduleName,success,failure){
if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
failure();
return false;}}



success();}}});











Core.prototype.version=function(val,callback){
if(val!==undefined){
if(Shared.version.indexOf(val)===0){
if(callback){callback();}
return true;}


return false;}


return Shared.version;};



Core.moduleLoaded=Core.prototype.moduleLoaded;


Core.version=Core.prototype.version;


Core.instances=Core.prototype.instances;


Core.instantiatedCount=Core.prototype.instantiatedCount;


Core.shared=Shared;
Core.prototype.shared=Shared;

Shared.addModule('Core',Core);
Shared.mixin(Core.prototype,'Mixin.Common');
Shared.mixin(Core.prototype,'Mixin.Constants');

Db=require('forerunnerdb/js/lib/Db.js');
Metrics=require('forerunnerdb/js/lib/Metrics.js');







Shared.synthesize(Core.prototype,'name');






Shared.synthesize(Core.prototype,'mongoEmulation');


Core.prototype._isServer=false;





Core.prototype.isClient=function(){
return !this._isServer;};






Core.prototype.isServer=function(){
return this._isServer;};







Core.prototype.isClient=function(){
return !this._isServer;};







Core.prototype.isServer=function(){
return this._isServer;};







Core.prototype.collection=function(){
throw "ForerunnerDB's instantiation has changed since version 1.3.36 to support multiple database instances. Please see the readme.md file for the minor change you have to make to get your project back up and running, or see the issue related to this change at https://github.com/Irrelon/ForerunnerDB/issues/44";};


module.exports=Core;
});
__d('forerunnerdb/js/lib/Shared.js',function(global, require, module, exports) {  "use strict";

var Overload=require('forerunnerdb/js/lib/Overload.js');






var Shared={
version:'1.3.465',
modules:{},
plugins:{},

_synth:{},







addModule:function(name,module){

this.modules[name]=module;


this.emit('moduleLoad',[name,module]);},








finishModule:function(name){
if(this.modules[name]){

this.modules[name]._fdbFinished=true;



if(this.modules[name].prototype){
this.modules[name].prototype.className=name;}else 
{
this.modules[name].className=name;}


this.emit('moduleFinished',[name,this.modules[name]]);}else 
{
throw 'ForerunnerDB.Shared: finishModule called on a module that has not been registered with addModule(): '+name;}},










moduleFinished:function(name,callback){
if(this.modules[name]&&this.modules[name]._fdbFinished){
if(callback){callback(name,this.modules[name]);}}else 
{
this.on('moduleFinished',callback);}},









moduleExists:function(name){
return Boolean(this.modules[name]);},








mixin:new Overload({
'object, string':function(obj,mixinName){
var mixinObj;

if(typeof mixinName==='string'){
mixinObj=this.mixins[mixinName];

if(!mixinObj){
throw 'ForerunnerDB.Shared: Cannot find mixin named: '+mixinName;}}



return this.$main.call(this,obj,mixinObj);},


'object, *':function(obj,mixinObj){
return this.$main.call(this,obj,mixinObj);},


'$main':function(obj,mixinObj){
if(mixinObj&&typeof mixinObj==='object'){
for(var i in mixinObj){
if(mixinObj.hasOwnProperty(i)){
obj[i]=mixinObj[i];}}}




return obj;}}),












synthesize:function(obj,name,extend){
this._synth[name]=this._synth[name]||function(val){
if(val!==undefined){
this['_'+name]=val;
return this;}


return this['_'+name];};


if(extend){
var self=this;

obj[name]=function(){
var tmp=this.$super,
ret;

this.$super=self._synth[name];
ret=extend.apply(this,arguments);
this.$super=tmp;

return ret;};}else 

{
obj[name]=this._synth[name];}},










overload:Overload,





mixins:{
'Mixin.Common':require('forerunnerdb/js/lib/Mixin.Common.js'),
'Mixin.Events':require('forerunnerdb/js/lib/Mixin.Events.js'),
'Mixin.ChainReactor':require('forerunnerdb/js/lib/Mixin.ChainReactor.js'),
'Mixin.CRUD':require('forerunnerdb/js/lib/Mixin.CRUD.js'),
'Mixin.Constants':require('forerunnerdb/js/lib/Mixin.Constants.js'),
'Mixin.Triggers':require('forerunnerdb/js/lib/Mixin.Triggers.js'),
'Mixin.Sorting':require('forerunnerdb/js/lib/Mixin.Sorting.js'),
'Mixin.Matching':require('forerunnerdb/js/lib/Mixin.Matching.js'),
'Mixin.Updating':require('forerunnerdb/js/lib/Mixin.Updating.js'),
'Mixin.Tags':require('forerunnerdb/js/lib/Mixin.Tags.js')}};




Shared.mixin(Shared,'Mixin.Events');

module.exports=Shared;
});
__d('forerunnerdb/js/lib/Overload.js',function(global, require, module, exports) {  "use strict";








var Overload=function(def){
if(def){
var self=this,
index,
count,
tmpDef,
defNewKey,
sigIndex,
signatures;

if(!(def instanceof Array)){
tmpDef={};


for(index in def){
if(def.hasOwnProperty(index)){
defNewKey=index.replace(/ /g,'');


if(defNewKey.indexOf('*')===-1){

tmpDef[defNewKey]=def[index];}else 
{


signatures=this.generateSignaturePermutations(defNewKey);

for(sigIndex=0;sigIndex<signatures.length;sigIndex++){
if(!tmpDef[signatures[sigIndex]]){
tmpDef[signatures[sigIndex]]=def[index];}}}}}






def=tmpDef;}


return function(){
var arr=[],
lookup,
type,
name;


if(def instanceof Array){

count=def.length;
for(index=0;index<count;index++){
if(def[index].length===arguments.length){
return self.callExtend(this,'$main',def,def[index],arguments);}}}else 


{


for(index=0;index<arguments.length;index++){
type=typeof arguments[index];


if(type==='object'&&arguments[index] instanceof Array){
type='array';}



if(arguments.length===1&&type==='undefined'){
break;}



arr.push(type);}


lookup=arr.join(',');


if(def[lookup]){
return self.callExtend(this,'$main',def,def[lookup],arguments);}else 
{
for(index=arr.length;index>=0;index--){

lookup=arr.slice(0,index).join(',');

if(def[lookup+',...']){

return self.callExtend(this,'$main',def,def[lookup+',...'],arguments);}}}}





name=typeof this.name==='function'?this.name():'Unknown';
console.log('Overload: ',def);
throw 'ForerunnerDB.Overload "'+name+'": Overloaded method does not have a matching signature for the passed arguments: '+this.jStringify(arr);};}



return function(){};};















Overload.prototype.generateSignaturePermutations=function(str){
var signatures=[],
newSignature,
types=['string','object','number','function','undefined'],
index;

if(str.indexOf('*')>-1){



for(index=0;index<types.length;index++){
newSignature=str.replace('*',types[index]);
signatures=signatures.concat(this.generateSignaturePermutations(newSignature));}}else 

{
signatures.push(str);}


return signatures;};


Overload.prototype.callExtend=function(context,prop,propContext,func,args){
var tmp,
ret;

if(context&&propContext[prop]){
tmp=context[prop];

context[prop]=propContext[prop];
ret=func.apply(context,args);
context[prop]=tmp;

return ret;}else 
{
return func.apply(context,args);}};



module.exports=Overload;
});
__d('forerunnerdb/js/lib/Mixin.Common.js',function(global, require, module, exports) {  "use strict";

var idCounter=0,
Overload=require('forerunnerdb/js/lib/Overload.js'),
Serialiser=require('forerunnerdb/js/lib/Serialiser.js'),
Common,
serialiser=new Serialiser();





Common={

serialiser:serialiser,











store:function(key,val){
if(key!==undefined){
if(val!==undefined){

this._store=this._store||{};
this._store[key]=val;

return this;}


if(this._store){
return this._store[key];}}



return undefined;},








unStore:function(key){
if(key!==undefined){
delete this._store[key];}


return this;},









decouple:function(data,copies){
if(data!==undefined){
if(!copies){
return this.jParse(this.jStringify(data));}else 
{
var i,
json=this.jStringify(data),
copyArr=[];

for(i=0;i<copies;i++){
copyArr.push(this.jParse(json));}


return copyArr;}}



return undefined;},







jParse:function(data){
return serialiser.parse(data);},








jStringify:function(data){
return serialiser.stringify(data);},











objectId:function(str){
var id,
pow=Math.pow(10,17);

if(!str){
idCounter++;

id=(idCounter+(
Math.random()*pow+
Math.random()*pow+
Math.random()*pow+
Math.random()*pow)).
toString(16);}else 
{
var val=0,
count=str.length,
i;

for(i=0;i<count;i++){
val+=str.charCodeAt(i)*pow;}


id=val.toString(16);}


return id;},















debug:new Overload([
function(){
return this._debug&&this._debug.all;},


function(val){
if(val!==undefined){
if(typeof val==='boolean'){
this._debug=this._debug||{};
this._debug.all=val;
this.chainSend('debug',this._debug);
return this;}else 
{
return this._debug&&this._debug[val]||this._db&&this._db._debug&&this._db._debug[val]||this._debug&&this._debug.all;}}



return this._debug&&this._debug.all;},


function(type,val){
if(type!==undefined){
if(val!==undefined){
this._debug=this._debug||{};
this._debug[type]=val;
this.chainSend('debug',this._debug);
return this;}


return this._debug&&this._debug[val]||this._db&&this._db._debug&&this._db._debug[type];}


return this._debug&&this._debug.all;}]),







classIdentifier:function(){
return 'ForerunnerDB.'+this.className;},







instanceIdentifier:function(){
return '['+this.className+']'+this.name();},







logIdentifier:function(){
return this.classIdentifier()+': '+this.instanceIdentifier();},







convertToFdb:function(obj){
var varName,
splitArr,
objCopy,
i;

for(i in obj){
if(obj.hasOwnProperty(i)){
objCopy=obj;

if(i.indexOf('.')>-1){

i=i.replace('.$','[|$|]');
splitArr=i.split('.');

while(varName=splitArr.shift()){

varName=varName.replace('[|$|]','.$');

if(splitArr.length){
objCopy[varName]={};}else 
{
objCopy[varName]=obj[i];}


objCopy=objCopy[varName];}


delete obj[i];}}}},









isDropped:function(){
return this._state==='dropped';}};



module.exports=Common;
});
__d('forerunnerdb/js/lib/Serialiser.js',function(global, require, module, exports) {  "use strict";









var Serialiser=function(){
this.init.apply(this,arguments);};


Serialiser.prototype.init=function(){
this._encoder=[];
this._decoder={};


this.registerEncoder('$date',function(data){
if(data instanceof Date){
return data.toISOString();}});



this.registerDecoder('$date',function(data){
return new Date(data);});};









Serialiser.prototype.registerEncoder=function(handles,method){
this._encoder.push(function(data){
var methodVal=method(data),
returnObj;

if(methodVal!==undefined){
returnObj={};
returnObj[handles]=methodVal;}


return returnObj;});};












Serialiser.prototype.registerDecoder=function(handles,method){
this._decoder[handles]=method;};











Serialiser.prototype._encode=function(data){


var count=this._encoder.length,
retVal;

while(count--&&!retVal){
retVal=this._encoder[count](data);}


return retVal;};








Serialiser.prototype.parse=function(data){
return this._parse(JSON.parse(data));};










Serialiser.prototype._parse=function(data,target){
var i;

if(typeof data==='object'&&data!==null){
if(data instanceof Array){
target=target||[];}else 
{
target=target||{};}




for(i in data){
if(data.hasOwnProperty(i)){
if(i.substr(0,1)==='$'&&this._decoder[i]){


return this._decoder[i](data[i]);}



target[i]=this._parse(data[i],target[i]);}}}else 


{
target=data;}



return target;};






Serialiser.prototype.stringify=function(data){
return JSON.stringify(this._stringify(data));};










Serialiser.prototype._stringify=function(data,target){
var handledData,
i;

if(typeof data==='object'&&data!==null){


handledData=this._encode(data);
if(handledData){

return handledData;}


if(data instanceof Array){
target=target||[];}else 
{
target=target||{};}



for(i in data){
if(data.hasOwnProperty(i)){
target[i]=this._stringify(data[i],target[i]);}}}else 


{
target=data;}



return target;};


module.exports=Serialiser;
});
__d('forerunnerdb/js/lib/Mixin.Events.js',function(global, require, module, exports) {  "use strict";

var Overload=require('forerunnerdb/js/lib/Overload.js');





var Events={
on:new Overload({





'string, function':function(event,listener){
this._listeners=this._listeners||{};
this._listeners[event]=this._listeners[event]||{};
this._listeners[event]['*']=this._listeners[event]['*']||[];
this._listeners[event]['*'].push(listener);

return this;},









'string, *, function':function(event,id,listener){
this._listeners=this._listeners||{};
this._listeners[event]=this._listeners[event]||{};
this._listeners[event][id]=this._listeners[event][id]||[];
this._listeners[event][id].push(listener);

return this;}}),



once:new Overload({
'string, function':function(eventName,callback){
var self=this,
internalCallback=function(){
self.off(eventName,internalCallback);
callback.apply(self,arguments);};


return this.on(eventName,internalCallback);},


'string, *, function':function(eventName,id,callback){
var self=this,
internalCallback=function(){
self.off(eventName,id,internalCallback);
callback.apply(self,arguments);};


return this.on(eventName,id,internalCallback);}}),



off:new Overload({
'string':function(event){
if(this._listeners&&this._listeners[event]&&event in this._listeners){
delete this._listeners[event];}


return this;},


'string, function':function(event,listener){
var arr,
index;

if(typeof listener==='string'){
if(this._listeners&&this._listeners[event]&&this._listeners[event][listener]){
delete this._listeners[event][listener];}}else 

{
if(this._listeners&&event in this._listeners){
arr=this._listeners[event]['*'];
index=arr.indexOf(listener);

if(index>-1){
arr.splice(index,1);}}}




return this;},


'string, *, function':function(event,id,listener){
if(this._listeners&&event in this._listeners&&id in this.listeners[event]){
var arr=this._listeners[event][id],
index=arr.indexOf(listener);

if(index>-1){
arr.splice(index,1);}}},




'string, *':function(event,id){
if(this._listeners&&event in this._listeners&&id in this._listeners[event]){

delete this._listeners[event][id];}}}),




emit:function(event,data){
this._listeners=this._listeners||{};

if(event in this._listeners){
var arrIndex,
arrCount,
tmpFunc,
arr,
listenerIdArr,
listenerIdCount,
listenerIdIndex;


if(this._listeners[event]['*']){
arr=this._listeners[event]['*'];
arrCount=arr.length;

for(arrIndex=0;arrIndex<arrCount;arrIndex++){

tmpFunc=arr[arrIndex];

if(typeof tmpFunc==='function'){
tmpFunc.apply(this,Array.prototype.slice.call(arguments,1));}}}





if(data instanceof Array){

if(data[0]&&data[0][this._primaryKey]){

listenerIdArr=this._listeners[event];
arrCount=data.length;

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
if(listenerIdArr[data[arrIndex][this._primaryKey]]){

listenerIdCount=listenerIdArr[data[arrIndex][this._primaryKey]].length;
for(listenerIdIndex=0;listenerIdIndex<listenerIdCount;listenerIdIndex++){
tmpFunc=listenerIdArr[data[arrIndex][this._primaryKey]][listenerIdIndex];

if(typeof tmpFunc==='function'){
listenerIdArr[data[arrIndex][this._primaryKey]][listenerIdIndex].apply(this,Array.prototype.slice.call(arguments,1));}}}}}}}








return this;},











deferEmit:function(eventName,data){
var self=this,
args;

if(!this._noEmitDefer&&(!this._db||this._db&&!this._db._noEmitDefer)){
args=arguments;


this._deferTimeout=this._deferTimeout||{};
if(this._deferTimeout[eventName]){
clearTimeout(this._deferTimeout[eventName]);}



this._deferTimeout[eventName]=setTimeout(function(){
if(self.debug()){
console.log(self.logIdentifier()+' Emitting '+args[0]);}


self.emit.apply(self,args);},
1);}else 
{
this.emit.apply(this,arguments);}


return this;}};



module.exports=Events;
});
__d('forerunnerdb/js/lib/Mixin.ChainReactor.js',function(global, require, module, exports) {  "use strict";







var ChainReactor={




chain:function(obj){
if(this.debug&&this.debug()){
if(obj._reactorIn&&obj._reactorOut){
console.log(obj._reactorIn.logIdentifier()+' Adding target "'+obj._reactorOut.instanceIdentifier()+'" to the chain reactor target list');}else 
{
console.log(this.logIdentifier()+' Adding target "'+obj.instanceIdentifier()+'" to the chain reactor target list');}}



this._chain=this._chain||[];
var index=this._chain.indexOf(obj);

if(index===-1){
this._chain.push(obj);}},



unChain:function(obj){
if(this.debug&&this.debug()){
if(obj._reactorIn&&obj._reactorOut){
console.log(obj._reactorIn.logIdentifier()+' Removing target "'+obj._reactorOut.instanceIdentifier()+'" from the chain reactor target list');}else 
{
console.log(this.logIdentifier()+' Removing target "'+obj.instanceIdentifier()+'" from the chain reactor target list');}}



if(this._chain){
var index=this._chain.indexOf(obj);

if(index>-1){
this._chain.splice(index,1);}}},




chainSend:function(type,data,options){
if(this._chain){
var arr=this._chain,
arrItem,
count=arr.length,
index;

for(index=0;index<count;index++){
arrItem=arr[index];

if(!arrItem._state||arrItem._state&&!arrItem.isDropped()){
if(this.debug&&this.debug()){
if(arrItem._reactorIn&&arrItem._reactorOut){
console.log(arrItem._reactorIn.logIdentifier()+' Sending data down the chain reactor pipe to "'+arrItem._reactorOut.instanceIdentifier()+'"');}else 
{
console.log(this.logIdentifier()+' Sending data down the chain reactor pipe to "'+arrItem.instanceIdentifier()+'"');}}



arrItem.chainReceive(this,type,data,options);}else 
{
console.log('Reactor Data:',type,data,options);
console.log('Reactor Node:',arrItem);
throw 'Chain reactor attempting to send data to target reactor node that is in a dropped state!';}}}},






chainReceive:function(sender,type,data,options){
var chainPacket={
sender:sender,
type:type,
data:data,
options:options};


if(this.debug&&this.debug()){
console.log(this.logIdentifier()+'Received data from parent reactor node');}



if(!this._chainHandler||this._chainHandler&&!this._chainHandler(chainPacket)){

this.chainSend(chainPacket.type,chainPacket.data,chainPacket.options);}}};




module.exports=ChainReactor;
});
__d('forerunnerdb/js/lib/Mixin.CRUD.js',function(global, require, module, exports) {  "use strict";

var CRUD={
preSetData:function(){},



postSetData:function(){}};




module.exports=CRUD;
});
__d('forerunnerdb/js/lib/Mixin.Constants.js',function(global, require, module, exports) {  "use strict";





var Constants={
TYPE_INSERT:0,
TYPE_UPDATE:1,
TYPE_REMOVE:2,

PHASE_BEFORE:0,
PHASE_AFTER:1};


module.exports=Constants;
});
__d('forerunnerdb/js/lib/Mixin.Triggers.js',function(global, require, module, exports) {  "use strict";

var Overload=require('forerunnerdb/js/lib/Overload.js');





var Triggers={












addTrigger:function(id,type,phase,method){
var self=this,
triggerIndex;


triggerIndex=self._triggerIndexOf(id,type,phase);

if(triggerIndex===-1){

self._trigger=self._trigger||{};
self._trigger[type]=self._trigger[type]||{};
self._trigger[type][phase]=self._trigger[type][phase]||[];

self._trigger[type][phase].push({
id:id,
method:method,
enabled:true});


return true;}


return false;},











removeTrigger:function(id,type,phase){
var self=this,
triggerIndex;


triggerIndex=self._triggerIndexOf(id,type,phase);

if(triggerIndex>-1){

self._trigger[type][phase].splice(triggerIndex,1);}


return false;},


enableTrigger:new Overload({
'string':function(id){

var self=this,
types=self._trigger,
phases,
triggers,
result=false,
i,k,j;

if(types){
for(j in types){
if(types.hasOwnProperty(j)){
phases=types[j];

if(phases){
for(i in phases){
if(phases.hasOwnProperty(i)){
triggers=phases[i];


for(k=0;k<triggers.length;k++){
if(triggers[k].id===id){
triggers[k].enabled=true;
result=true;}}}}}}}}









return result;},


'number':function(type){

var self=this,
phases=self._trigger[type],
triggers,
result=false,
i,k;

if(phases){
for(i in phases){
if(phases.hasOwnProperty(i)){
triggers=phases[i];


for(k=0;k<triggers.length;k++){
triggers[k].enabled=true;
result=true;}}}}





return result;},


'number, number':function(type,phase){

var self=this,
phases=self._trigger[type],
triggers,
result=false,
k;

if(phases){
triggers=phases[phase];

if(triggers){

for(k=0;k<triggers.length;k++){
triggers[k].enabled=true;
result=true;}}}




return result;},


'string, number, number':function(id,type,phase){

var self=this,
triggerIndex=self._triggerIndexOf(id,type,phase);

if(triggerIndex>-1){

self._trigger[type][phase][triggerIndex].enabled=true;

return true;}


return false;}}),



disableTrigger:new Overload({
'string':function(id){

var self=this,
types=self._trigger,
phases,
triggers,
result=false,
i,k,j;

if(types){
for(j in types){
if(types.hasOwnProperty(j)){
phases=types[j];

if(phases){
for(i in phases){
if(phases.hasOwnProperty(i)){
triggers=phases[i];


for(k=0;k<triggers.length;k++){
if(triggers[k].id===id){
triggers[k].enabled=false;
result=true;}}}}}}}}









return result;},


'number':function(type){

var self=this,
phases=self._trigger[type],
triggers,
result=false,
i,k;

if(phases){
for(i in phases){
if(phases.hasOwnProperty(i)){
triggers=phases[i];


for(k=0;k<triggers.length;k++){
triggers[k].enabled=false;
result=true;}}}}





return result;},


'number, number':function(type,phase){

var self=this,
phases=self._trigger[type],
triggers,
result=false,
k;

if(phases){
triggers=phases[phase];

if(triggers){

for(k=0;k<triggers.length;k++){
triggers[k].enabled=false;
result=true;}}}




return result;},


'string, number, number':function(id,type,phase){

var self=this,
triggerIndex=self._triggerIndexOf(id,type,phase);

if(triggerIndex>-1){

self._trigger[type][phase][triggerIndex].enabled=false;

return true;}


return false;}}),











willTrigger:function(type,phase){
if(this._trigger&&this._trigger[type]&&this._trigger[type][phase]&&this._trigger[type][phase].length){

var arr=this._trigger[type][phase],
i;

for(i=0;i<arr.length;i++){
if(arr[i].enabled){
return true;}}}




return false;},















processTrigger:function(operation,type,phase,oldDoc,newDoc){
var self=this,
triggerArr,
triggerIndex,
triggerCount,
triggerItem,
response;

if(self._trigger&&self._trigger[type]&&self._trigger[type][phase]){
triggerArr=self._trigger[type][phase];
triggerCount=triggerArr.length;

for(triggerIndex=0;triggerIndex<triggerCount;triggerIndex++){
triggerItem=triggerArr[triggerIndex];


if(triggerItem.enabled){
if(this.debug()){
var typeName,
phaseName;

switch(type){
case this.TYPE_INSERT:
typeName='insert';
break;

case this.TYPE_UPDATE:
typeName='update';
break;

case this.TYPE_REMOVE:
typeName='remove';
break;

default:
typeName='';
break;}


switch(phase){
case this.PHASE_BEFORE:
phaseName='before';
break;

case this.PHASE_AFTER:
phaseName='after';
break;

default:
phaseName='';
break;}}






response=triggerItem.method.call(self,operation,oldDoc,newDoc);



if(response===false){

return false;}


if(response!==undefined&&response!==true&&response!==false){

throw 'ForerunnerDB.Mixin.Triggers: Trigger error: '+response;}}}





return true;}},













_triggerIndexOf:function(id,type,phase){
var self=this,
triggerArr,
triggerCount,
triggerIndex;

if(self._trigger&&self._trigger[type]&&self._trigger[type][phase]){
triggerArr=self._trigger[type][phase];
triggerCount=triggerArr.length;

for(triggerIndex=0;triggerIndex<triggerCount;triggerIndex++){
if(triggerArr[triggerIndex].id===id){
return triggerIndex;}}}




return -1;}};



module.exports=Triggers;
});
__d('forerunnerdb/js/lib/Mixin.Sorting.js',function(global, require, module, exports) {  "use strict";





var Sorting={






sortAsc:function(a,b){
if(typeof a==='string'&&typeof b==='string'){
return a.localeCompare(b);}else 
{
if(a>b){
return 1;}else 
if(a<b){
return -1;}}



return 0;},








sortDesc:function(a,b){
if(typeof a==='string'&&typeof b==='string'){
return b.localeCompare(a);}else 
{
if(a>b){
return -1;}else 
if(a<b){
return 1;}}



return 0;}};



module.exports=Sorting;
});
__d('forerunnerdb/js/lib/Mixin.Matching.js',function(global, require, module, exports) {  "use strict";





var Matching={












_match:function(source,test,queryOptions,opToApply,options){

var operation,
applyOp=opToApply,
recurseVal,
tmpIndex,
sourceType=typeof source,
testType=typeof test,
matchedAll=true,
opResult,
substringCache,
i;

options=options||{};
queryOptions=queryOptions||{};


if(!options.$rootQuery){

options.$rootQuery=test;}


options.$rootData=options.$rootData||{};


if((sourceType==='string'||sourceType==='number')&&(testType==='string'||testType==='number')){


if(sourceType==='number'){

if(source!==test){
matchedAll=false;}}else 

{



if(source.localeCompare(test)){
matchedAll=false;}}}else 


{
for(i in test){
if(test.hasOwnProperty(i)){

operation=false;

substringCache=i.substr(0,2);


if(substringCache==='//'){

continue;}



if(substringCache.indexOf('$')===0){

opResult=this._matchOp(i,source,test[i],queryOptions,options);




if(opResult>-1){
if(opResult){
if(opToApply==='or'){
return true;}}else 

{


matchedAll=opResult;}



operation=true;}}




if(!operation&&test[i] instanceof RegExp){
operation=true;

if(sourceType==='object'&&source[i]!==undefined&&test[i].test(source[i])){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}



if(!operation){

if(typeof test[i]==='object'){




if(source[i]!==undefined){
if(source[i] instanceof Array&&!(test[i] instanceof Array)){


recurseVal=false;
for(tmpIndex=0;tmpIndex<source[i].length;tmpIndex++){
recurseVal=this._match(source[i][tmpIndex],test[i],queryOptions,applyOp,options);

if(recurseVal){


break;}}



if(recurseVal){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}else 

if(!(source[i] instanceof Array)&&test[i] instanceof Array){



recurseVal=false;

for(tmpIndex=0;tmpIndex<test[i].length;tmpIndex++){
recurseVal=this._match(source[i],test[i][tmpIndex],queryOptions,applyOp,options);

if(recurseVal){


break;}}



if(recurseVal){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}else 

if(typeof source==='object'){

recurseVal=this._match(source[i],test[i],queryOptions,applyOp,options);

if(recurseVal){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}else 

{
recurseVal=this._match(undefined,test[i],queryOptions,applyOp,options);

if(recurseVal){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}}else 


{

if(test[i]&&test[i].$exists!==undefined){

recurseVal=this._match(undefined,test[i],queryOptions,applyOp,options);

if(recurseVal){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}else 

{
matchedAll=false;}}}else 


{

if(source&&source[i]===test[i]){
if(opToApply==='or'){
return true;}}else 

if(source&&source[i]&&source[i] instanceof Array&&test[i]&&typeof test[i]!=="object"){




recurseVal=false;
for(tmpIndex=0;tmpIndex<source[i].length;tmpIndex++){
recurseVal=this._match(source[i][tmpIndex],test[i],queryOptions,applyOp,options);

if(recurseVal){


break;}}



if(recurseVal){
if(opToApply==='or'){
return true;}}else 

{
matchedAll=false;}}else 

{
matchedAll=false;}}}




if(opToApply==='and'&&!matchedAll){
return false;}}}}





return matchedAll;},













_matchOp:function(key,source,test,queryOptions,options){

switch(key){
case '$gt':

return source>test;

case '$gte':

return source>=test;

case '$lt':

return source<test;

case '$lte':

return source<=test;

case '$exists':

return source===undefined!==test;

case '$eq':
return source==test;

case '$eeq':
return source===test;

case '$ne':
return source!=test;

case '$nee':
return source!==test;

case '$or':

for(var orIndex=0;orIndex<test.length;orIndex++){
if(this._match(source,test[orIndex],queryOptions,'and',options)){
return true;}}



return false;

case '$and':

for(var andIndex=0;andIndex<test.length;andIndex++){
if(!this._match(source,test[andIndex],queryOptions,'and',options)){
return false;}}



return true;

case '$in':

if(test instanceof Array){
var inArr=test,
inArrCount=inArr.length,
inArrIndex;

for(inArrIndex=0;inArrIndex<inArrCount;inArrIndex++){
if(inArr[inArrIndex] instanceof RegExp&&inArr[inArrIndex].test(source)){
return true;}else 
if(inArr[inArrIndex]===source){
return true;}}



return false;}else 
{
throw this.logIdentifier()+' Cannot use an $in operator on a non-array key: '+key;}

break;

case '$nin':

if(test instanceof Array){
var notInArr=test,
notInArrCount=notInArr.length,
notInArrIndex;

for(notInArrIndex=0;notInArrIndex<notInArrCount;notInArrIndex++){
if(notInArr[notInArrIndex]===source){
return false;}}



return true;}else 
{
throw this.logIdentifier()+' Cannot use a $nin operator on a non-array key: '+key;}

break;

case '$distinct':

options.$rootData['//distinctLookup']=options.$rootData['//distinctLookup']||{};

for(var distinctProp in test){
if(test.hasOwnProperty(distinctProp)){
options.$rootData['//distinctLookup'][distinctProp]=options.$rootData['//distinctLookup'][distinctProp]||{};

if(options.$rootData['//distinctLookup'][distinctProp][source[distinctProp]]){

return false;}else 
{

options.$rootData['//distinctLookup'][distinctProp][source[distinctProp]]=true;


return true;}}}



break;

case '$count':
var countKey,
countArr,
countVal;


for(countKey in test){
if(test.hasOwnProperty(countKey)){


countArr=source[countKey];
if(typeof countArr==='object'&&countArr instanceof Array){
countVal=countArr.length;}else 
{
countVal=0;}



if(!this._match(countVal,test[countKey],queryOptions,'and',options)){
return false;}}}





return true;}


return -1;}};



module.exports=Matching;
});
__d('forerunnerdb/js/lib/Mixin.Updating.js',function(global, require, module, exports) {  "use strict";





var Updating={







_updateProperty:function(doc,prop,val){
doc[prop]=val;

if(this.debug()){
console.log(this.logIdentifier()+' Setting non-data-bound document property "'+prop+'"');}},










_updateIncrement:function(doc,prop,val){
doc[prop]+=val;},









_updateSpliceMove:function(arr,indexFrom,indexTo){
arr.splice(indexTo,0,arr.splice(indexFrom,1)[0]);

if(this.debug()){
console.log(this.logIdentifier()+' Moving non-data-bound document array index from "'+indexFrom+'" to "'+indexTo+'"');}},










_updateSplicePush:function(arr,index,doc){
if(arr.length>index){
arr.splice(index,0,doc);}else 
{
arr.push(doc);}},









_updatePush:function(arr,doc){
arr.push(doc);},








_updatePull:function(arr,index){
arr.splice(index,1);},









_updateMultiply:function(doc,prop,val){
doc[prop]*=val;},









_updateRename:function(doc,prop,val){
doc[val]=doc[prop];
delete doc[prop];},









_updateOverwrite:function(doc,prop,val){
doc[prop]=val;},








_updateUnset:function(doc,prop){
delete doc[prop];},









_updateClear:function(doc,prop){
var obj=doc[prop],
i;

if(obj&&typeof obj==='object'){
for(i in obj){
if(obj.hasOwnProperty(i)){
this._updateUnset(obj,i);}}}},














_updatePop:function(doc,val){
var updated=false,
i;

if(doc.length>0){
if(val>0){
for(i=0;i<val;i++){
doc.pop();}

updated=true;}else 
if(val<0){
for(i=0;i>val;i--){
doc.shift();}

updated=true;}}



return updated;}};



module.exports=Updating;
});
__d('forerunnerdb/js/lib/Mixin.Tags.js',function(global, require, module, exports) {  "use strict";

var Tags,
tagMap={};





Tags={





tagAdd:function(name){
var i,
self=this,
mapArr=tagMap[name]=tagMap[name]||[];

for(i=0;i<mapArr.length;i++){
if(mapArr[i]===self){
return true;}}



mapArr.push(self);


if(self.on){
self.on('drop',function(){

self.tagRemove(name);});}



return true;},







tagRemove:function(name){
var i,
mapArr=tagMap[name];

if(mapArr){
for(i=0;i<mapArr.length;i++){
if(mapArr[i]===this){
mapArr.splice(i,1);
return true;}}}




return false;},







tagLookup:function(name){
return tagMap[name]||[];},









tagDrop:function(name,callback){
var arr=this.tagLookup(name),
dropCb,
dropCount,
i;

dropCb=function(){
dropCount--;

if(callback&&dropCount===0){
callback(false);}};



if(arr.length){
dropCount=arr.length;


for(i=arr.length-1;i>=0;i--){
arr[i].drop(dropCb);}}



return true;}};



module.exports=Tags;
});
__d('forerunnerdb/js/lib/Db.js',function(global, require, module, exports) {  "use strict";

var Shared,
Core,
Collection,
Metrics,
Crc,
Overload;

Shared=require('forerunnerdb/js/lib/Shared.js');
Overload=require('forerunnerdb/js/lib/Overload.js');





var Db=function(name,core){
this.init.apply(this,arguments);};


Db.prototype.init=function(name,core){
this.core(core);
this._primaryKey='_id';
this._name=name;
this._collection={};
this._debug={};};


Shared.addModule('Db',Db);

Db.prototype.moduleLoaded=new Overload({







'string':function(moduleName){
if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
return false;}}



return true;}


return false;},










'string, function':function(moduleName,callback){
if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
return false;}}



if(callback){callback();}}},












'string, function, function':function(moduleName,success,failure){
if(moduleName!==undefined){
moduleName=moduleName.replace(/ /g,'');

var modules=moduleName.split(','),
index;

for(index=0;index<modules.length;index++){
if(!Shared.modules[modules[index]]){
failure();
return false;}}



success();}}});











Db.prototype.version=function(val,callback){
if(val!==undefined){
if(Shared.version.indexOf(val)===0){
if(callback){callback();}
return true;}


return false;}


return Shared.version;};



Db.moduleLoaded=Db.prototype.moduleLoaded;


Db.version=Db.prototype.version;


Db.shared=Shared;
Db.prototype.shared=Shared;

Shared.addModule('Db',Db);
Shared.mixin(Db.prototype,'Mixin.Common');
Shared.mixin(Db.prototype,'Mixin.ChainReactor');
Shared.mixin(Db.prototype,'Mixin.Constants');
Shared.mixin(Db.prototype,'Mixin.Tags');

Core=Shared.modules.Core;
Collection=require('forerunnerdb/js/lib/Collection.js');
Metrics=require('forerunnerdb/js/lib/Metrics.js');
Crc=require('forerunnerdb/js/lib/Crc.js');

Db.prototype._isServer=false;




Shared.synthesize(Db.prototype,'core');






Shared.synthesize(Db.prototype,'primaryKey');






Shared.synthesize(Db.prototype,'state');






Shared.synthesize(Db.prototype,'name');






Shared.synthesize(Db.prototype,'mongoEmulation');





Db.prototype.isClient=function(){
return !this._isServer;};






Db.prototype.isServer=function(){
return this._isServer;};







Db.prototype.crc=Crc;






Db.prototype.isClient=function(){
return !this._isServer;};







Db.prototype.isServer=function(){
return this._isServer;};








Db.prototype.arrayToCollection=function(arr){
return new Collection().setData(arr);};









Db.prototype.on=function(event,listener){
this._listeners=this._listeners||{};
this._listeners[event]=this._listeners[event]||[];
this._listeners[event].push(listener);

return this;};









Db.prototype.off=function(event,listener){
if(event in this._listeners){
var arr=this._listeners[event],
index=arr.indexOf(listener);

if(index>-1){
arr.splice(index,1);}}



return this;};








Db.prototype.emit=function(event,data){
this._listeners=this._listeners||{};

if(event in this._listeners){
var arr=this._listeners[event],
arrCount=arr.length,
arrIndex;

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
arr[arrIndex].apply(this,Array.prototype.slice.call(arguments,1));}}



return this;};


Db.prototype.peek=function(search){
var i,
coll,
arr=[],
typeOfSearch=typeof search;


for(i in this._collection){
if(this._collection.hasOwnProperty(i)){
coll=this._collection[i];

if(typeOfSearch==='string'){
arr=arr.concat(coll.peek(search));}else 
{
arr=arr.concat(coll.find(search));}}}




return arr;};








Db.prototype.peek=function(search){
var i,
coll,
arr=[],
typeOfSearch=typeof search;


for(i in this._collection){
if(this._collection.hasOwnProperty(i)){
coll=this._collection[i];

if(typeOfSearch==='string'){
arr=arr.concat(coll.peek(search));}else 
{
arr=arr.concat(coll.find(search));}}}




return arr;};









Db.prototype.peekCat=function(search){
var i,
coll,
cat={},
arr,
typeOfSearch=typeof search;


for(i in this._collection){
if(this._collection.hasOwnProperty(i)){
coll=this._collection[i];

if(typeOfSearch==='string'){
arr=coll.peek(search);

if(arr&&arr.length){
cat[coll.name()]=arr;}}else 

{
arr=coll.find(search);

if(arr&&arr.length){
cat[coll.name()]=arr;}}}}





return cat;};


Db.prototype.drop=new Overload({





'':function(){
if(!this.isDropped()){
var arr=this.collections(),
arrCount=arr.length,
arrIndex;

this._state='dropped';

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
this.collection(arr[arrIndex].name).drop();
delete this._collection[arr[arrIndex].name];}


this.emit('drop',this);

delete this._core._db[this._name];}


return true;},








'function':function(callback){
if(!this.isDropped()){
var arr=this.collections(),
arrCount=arr.length,
arrIndex,
finishCount=0,
afterDrop=function(){
finishCount++;

if(finishCount===arrCount){
if(callback){callback();}}};



this._state='dropped';

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
this.collection(arr[arrIndex].name).drop(afterDrop);

delete this._collection[arr[arrIndex].name];}


this.emit('drop',this);

delete this._core._db[this._name];}


return true;},









'boolean':function(removePersist){
if(!this.isDropped()){
var arr=this.collections(),
arrCount=arr.length,
arrIndex;

this._state='dropped';

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
this.collection(arr[arrIndex].name).drop(removePersist);
delete this._collection[arr[arrIndex].name];}


this.emit('drop',this);

delete this._core._db[this._name];}


return true;},










'boolean, function':function(removePersist,callback){
if(!this.isDropped()){
var arr=this.collections(),
arrCount=arr.length,
arrIndex,
finishCount=0,
afterDrop=function(){
finishCount++;

if(finishCount===arrCount){
if(callback){callback();}}};



this._state='dropped';

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
this.collection(arr[arrIndex].name).drop(removePersist,afterDrop);
delete this._collection[arr[arrIndex].name];}


this.emit('drop',this);

delete this._core._db[this._name];}


return true;}});










Core.prototype.db=function(name){

if(name instanceof Db){
return name;}


if(!name){
name=this.objectId();}


this._db[name]=this._db[name]||new Db(name,this);

this._db[name].mongoEmulation(this.mongoEmulation());

return this._db[name];};










Core.prototype.databases=function(search){
var arr=[],
tmpObj,
addDb,
i;

if(search){
if(!(search instanceof RegExp)){

search=new RegExp(search);}}



for(i in this._db){
if(this._db.hasOwnProperty(i)){
addDb=true;

if(search){
if(!search.exec(i)){
addDb=false;}}



if(addDb){
tmpObj={
name:i,
children:[]};


if(this.shared.moduleExists('Collection')){
tmpObj.children.push({
module:'collection',
moduleName:'Collections',
count:this._db[i].collections().length});}



if(this.shared.moduleExists('CollectionGroup')){
tmpObj.children.push({
module:'collectionGroup',
moduleName:'Collection Groups',
count:this._db[i].collectionGroups().length});}



if(this.shared.moduleExists('Document')){
tmpObj.children.push({
module:'document',
moduleName:'Documents',
count:this._db[i].documents().length});}



if(this.shared.moduleExists('Grid')){
tmpObj.children.push({
module:'grid',
moduleName:'Grids',
count:this._db[i].grids().length});}



if(this.shared.moduleExists('Overview')){
tmpObj.children.push({
module:'overview',
moduleName:'Overviews',
count:this._db[i].overviews().length});}



if(this.shared.moduleExists('View')){
tmpObj.children.push({
module:'view',
moduleName:'Views',
count:this._db[i].views().length});}



arr.push(tmpObj);}}}




arr.sort(function(a,b){
return a.name.localeCompare(b.name);});


return arr;};


Shared.finishModule('Db');
module.exports=Db;
});
__d('forerunnerdb/js/lib/Collection.js',function(global, require, module, exports) {  "use strict";

var Shared,
Db,
Metrics,
KeyValueStore,
Path,
IndexHashMap,
IndexBinaryTree,
Crc,
Overload,
ReactorIO;

Shared=require('forerunnerdb/js/lib/Shared.js');






var Collection=function(name){
this.init.apply(this,arguments);};


Collection.prototype.init=function(name,options){
this._primaryKey='_id';
this._primaryIndex=new KeyValueStore('primary');
this._primaryCrc=new KeyValueStore('primaryCrc');
this._crcLookup=new KeyValueStore('crcLookup');
this._name=name;
this._data=[];
this._metrics=new Metrics();

this._options=options||{
changeTimestamp:false};



this._metaData={};

this._deferQueue={
insert:[],
update:[],
remove:[],
upsert:[]};


this._deferThreshold={
insert:100,
update:100,
remove:100,
upsert:100};


this._deferTime={
insert:1,
update:1,
remove:1,
upsert:1};


this._deferredCalls=true;


this.subsetOf(this);};


Shared.addModule('Collection',Collection);
Shared.mixin(Collection.prototype,'Mixin.Common');
Shared.mixin(Collection.prototype,'Mixin.Events');
Shared.mixin(Collection.prototype,'Mixin.ChainReactor');
Shared.mixin(Collection.prototype,'Mixin.CRUD');
Shared.mixin(Collection.prototype,'Mixin.Constants');
Shared.mixin(Collection.prototype,'Mixin.Triggers');
Shared.mixin(Collection.prototype,'Mixin.Sorting');
Shared.mixin(Collection.prototype,'Mixin.Matching');
Shared.mixin(Collection.prototype,'Mixin.Updating');
Shared.mixin(Collection.prototype,'Mixin.Tags');

Metrics=require('forerunnerdb/js/lib/Metrics.js');
KeyValueStore=require('forerunnerdb/js/lib/KeyValueStore.js');
Path=require('forerunnerdb/js/lib/Path.js');
IndexHashMap=require('forerunnerdb/js/lib/IndexHashMap.js');
IndexBinaryTree=require('forerunnerdb/js/lib/IndexBinaryTree.js');
Crc=require('forerunnerdb/js/lib/Crc.js');
Db=Shared.modules.Db;
Overload=require('forerunnerdb/js/lib/Overload.js');
ReactorIO=require('forerunnerdb/js/lib/ReactorIO.js');






Collection.prototype.crc=Crc;









Shared.synthesize(Collection.prototype,'deferredCalls');






Shared.synthesize(Collection.prototype,'state');






Shared.synthesize(Collection.prototype,'name');




Shared.synthesize(Collection.prototype,'metaData');





Shared.synthesize(Collection.prototype,'capped');





Shared.synthesize(Collection.prototype,'cappedSize');








Collection.prototype.data=function(){
return this._data;};






Collection.prototype.drop=function(callback){
var key;

if(!this.isDropped()){
if(this._db&&this._db._collection&&this._name){
if(this.debug()){
console.log(this.logIdentifier()+' Dropping');}


this._state='dropped';

this.emit('drop',this);

delete this._db._collection[this._name];


if(this._collate){
for(key in this._collate){
if(this._collate.hasOwnProperty(key)){
this.collateRemove(key);}}}




delete this._primaryKey;
delete this._primaryIndex;
delete this._primaryCrc;
delete this._crcLookup;
delete this._name;
delete this._data;
delete this._metrics;

if(callback){callback(false,true);}

return true;}}else 

{
if(callback){callback(false,true);}

return true;}


if(callback){callback(false,true);}
return false;};







Collection.prototype.primaryKey=function(keyName){
if(keyName!==undefined){
if(this._primaryKey!==keyName){
var oldKey=this._primaryKey;
this._primaryKey=keyName;


this._primaryIndex.primaryKey(keyName);


this.rebuildPrimaryKeyIndex();


this.chainSend('primaryKey',keyName,{oldData:oldKey});}

return this;}


return this._primaryKey;};








Collection.prototype._onInsert=function(inserted,failed){
this.emit('insert',inserted,failed);};







Collection.prototype._onUpdate=function(items){
this.emit('update',items);};







Collection.prototype._onRemove=function(items){
this.emit('remove',items);};






Collection.prototype._onChange=function(){
if(this._options.changeTimestamp){

this._metaData.lastChange=new Date();}};








Shared.synthesize(Collection.prototype,'db',function(db){
if(db){
if(this.primaryKey()==='_id'){

this.primaryKey(db.primaryKey());


this.debug(db.debug());}}



return this.$super.apply(this,arguments);});







Shared.synthesize(Collection.prototype,'mongoEmulation');










Collection.prototype.setData=function(data,options,callback){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


if(data){
var op=this._metrics.create('setData');
op.start();

options=this.options(options);
this.preSetData(data,options,callback);

if(options.$decouple){
data=this.decouple(data);}


if(!(data instanceof Array)){
data=[data];}


op.time('transformIn');
data=this.transformIn(data);
op.time('transformIn');

var oldData=[].concat(this._data);

this._dataReplace(data);


op.time('Rebuild Primary Key Index');
this.rebuildPrimaryKeyIndex(options);
op.time('Rebuild Primary Key Index');


op.time('Rebuild All Other Indexes');
this._rebuildIndexes();
op.time('Rebuild All Other Indexes');

op.time('Resolve chains');
this.chainSend('setData',data,{oldData:oldData});
op.time('Resolve chains');

op.stop();

this._onChange();
this.emit('setData',this._data,oldData);}


if(callback){callback(false);}

return this;};







Collection.prototype.rebuildPrimaryKeyIndex=function(options){
options=options||{
$ensureKeys:undefined,
$violationCheck:undefined};


var ensureKeys=options&&options.$ensureKeys!==undefined?options.$ensureKeys:true,
violationCheck=options&&options.$violationCheck!==undefined?options.$violationCheck:true,
arr,
arrCount,
arrItem,
pIndex=this._primaryIndex,
crcIndex=this._primaryCrc,
crcLookup=this._crcLookup,
pKey=this._primaryKey,
jString;


pIndex.truncate();
crcIndex.truncate();
crcLookup.truncate();


arr=this._data;
arrCount=arr.length;

while(arrCount--){
arrItem=arr[arrCount];

if(ensureKeys){

this.ensurePrimaryKey(arrItem);}


if(violationCheck){

if(!pIndex.uniqueSet(arrItem[pKey],arrItem)){

throw this.logIdentifier()+' Call to setData on collection failed because your data violates the primary key unique constraint. One or more documents are using the same primary key: '+arrItem[this._primaryKey];}}else 

{
pIndex.set(arrItem[pKey],arrItem);}



jString=this.jStringify(arrItem);

crcIndex.set(arrItem[pKey],jString);
crcLookup.set(jString,arrItem);}};









Collection.prototype.ensurePrimaryKey=function(obj){
if(obj[this._primaryKey]===undefined){

obj[this._primaryKey]=this.objectId();}};







Collection.prototype.truncate=function(){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


this.emit('truncate',this._data);


this._data.length=0;


this._primaryIndex=new KeyValueStore('primary');
this._primaryCrc=new KeyValueStore('primaryCrc');
this._crcLookup=new KeyValueStore('crcLookup');

this._onChange();
this.deferEmit('change',{type:'truncate'});
return this;};

























Collection.prototype.upsert=function(obj,callback){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


if(obj){
var queue=this._deferQueue.upsert,
deferThreshold=this._deferThreshold.upsert,
returnData={},
query,
i;


if(obj instanceof Array){
if(this._deferredCalls&&obj.length>deferThreshold){

this._deferQueue.upsert=queue.concat(obj);


this.processQueue('upsert',callback);

return {};}else 
{

returnData=[];

for(i=0;i<obj.length;i++){
returnData.push(this.upsert(obj[i]));}


if(callback){callback();}

return returnData;}}




if(obj[this._primaryKey]){

query={};
query[this._primaryKey]=obj[this._primaryKey];

if(this._primaryIndex.lookup(query)[0]){

returnData.op='update';}else 
{

returnData.op='insert';}}else 

{

returnData.op='insert';}


switch(returnData.op){
case 'insert':
returnData.result=this.insert(obj);
break;

case 'update':
returnData.result=this.update(query,obj);
break;

default:
break;}


return returnData;}else 
{
if(callback){callback();}}


return {};};











Collection.prototype.filter=function(query,func,options){
return this.find(query,options).filter(func);};











Collection.prototype.filterUpdate=function(query,func,options){
var items=this.find(query,options),
results=[],
singleItem,
singleQuery,
singleUpdate,
pk=this.primaryKey(),
i;

for(i=0;i<items.length;i++){
singleItem=items[i];
singleUpdate=func(singleItem);

if(singleUpdate){
singleQuery={};
singleQuery[pk]=singleItem[pk];

results.push(this.update(singleQuery,singleUpdate));}}



return results;};















Collection.prototype.update=function(query,update,options){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}



update=this.decouple(update);


if(this.mongoEmulation()){
this.convertToFdb(query);
this.convertToFdb(update);}



update=this.transformIn(update);

if(this.debug()){
console.log(this.logIdentifier()+' Updating some data');}


var self=this,
op=this._metrics.create('update'),
dataSet,
updated,
updateCall=function(referencedDoc){
var oldDoc=self.decouple(referencedDoc),
newDoc,
triggerOperation,
result;

if(self.willTrigger(self.TYPE_UPDATE,self.PHASE_BEFORE)||self.willTrigger(self.TYPE_UPDATE,self.PHASE_AFTER)){
newDoc=self.decouple(referencedDoc);

triggerOperation={
type:'update',
query:self.decouple(query),
update:self.decouple(update),
options:self.decouple(options),
op:op};




result=self.updateObject(newDoc,triggerOperation.update,triggerOperation.query,triggerOperation.options,'');

if(self.processTrigger(triggerOperation,self.TYPE_UPDATE,self.PHASE_BEFORE,referencedDoc,newDoc)!==false){


result=self.updateObject(referencedDoc,newDoc,triggerOperation.query,triggerOperation.options,'');



self.processTrigger(triggerOperation,self.TYPE_UPDATE,self.PHASE_AFTER,oldDoc,newDoc);}else 
{

result=false;}}else 

{


result=self.updateObject(referencedDoc,update,query,options,'');}



self._updateIndexes(oldDoc,referencedDoc);

return result;};


op.start();
op.time('Retrieve documents to update');
dataSet=this.find(query,{$decouple:false});
op.time('Retrieve documents to update');

if(dataSet.length){
op.time('Update documents');
updated=dataSet.filter(updateCall);
op.time('Update documents');

if(updated.length){
op.time('Resolve chains');
this.chainSend('update',{
query:query,
update:update,
dataSet:updated},
options);
op.time('Resolve chains');

this._onUpdate(updated);
this._onChange();
this.deferEmit('change',{type:'update',data:updated});}}



op.stop();


return updated||[];};










Collection.prototype._replaceObj=function(currentObj,newObj){
var i;



this._removeFromIndexes(currentObj);


for(i in currentObj){
if(currentObj.hasOwnProperty(i)){
delete currentObj[i];}}




for(i in newObj){
if(newObj.hasOwnProperty(i)){
currentObj[i]=newObj[i];}}




if(!this._insertIntoIndexes(currentObj)){
throw this.logIdentifier()+' Primary key violation in update! Key violated: '+currentObj[this._primaryKey];}





return this;};








Collection.prototype.updateById=function(id,update){
var searchObj={};
searchObj[this._primaryKey]=id;
return this.update(searchObj,update);};















Collection.prototype.updateObject=function(doc,update,query,options,path,opType){

update=this.decouple(update);


path=path||'';
if(path.substr(0,1)==='.'){path=path.substr(1,path.length-1);}


var updated=false,
recurseUpdated=false,
operation,
tmpArray,
tmpIndex,
tmpCount,
tempIndex,
pathInstance,
sourceIsArray,
updateIsArray,
i;


for(i in update){
if(update.hasOwnProperty(i)){

operation=false;


if(i.substr(0,1)==='$'){

switch(i){
case '$key':
case '$index':
case '$data':
case '$min':
case '$max':

operation=true;
break;

case '$each':
operation=true;


tmpCount=update.$each.length;
for(tmpIndex=0;tmpIndex<tmpCount;tmpIndex++){
recurseUpdated=this.updateObject(doc,update.$each[tmpIndex],query,options,path);

if(recurseUpdated){
updated=true;}}



updated=updated||recurseUpdated;
break;

default:
operation=true;


recurseUpdated=this.updateObject(doc,update[i],query,options,path,i);
updated=updated||recurseUpdated;
break;}}




if(this._isPositionalKey(i)){
operation=true;


i=i.substr(0,i.length-2);

pathInstance=new Path(path+'.'+i);


if(doc[i]&&doc[i] instanceof Array&&doc[i].length){
tmpArray=[];


for(tmpIndex=0;tmpIndex<doc[i].length;tmpIndex++){
if(this._match(doc[i][tmpIndex],pathInstance.value(query)[0],options,'',{})){
tmpArray.push(tmpIndex);}}




for(tmpIndex=0;tmpIndex<tmpArray.length;tmpIndex++){
recurseUpdated=this.updateObject(doc[i][tmpArray[tmpIndex]],update[i+'.$'],query,options,path+'.'+i,opType);
updated=updated||recurseUpdated;}}}




if(!operation){
if(!opType&&typeof update[i]==='object'){
if(doc[i]!==null&&typeof doc[i]==='object'){

sourceIsArray=doc[i] instanceof Array;
updateIsArray=update[i] instanceof Array;

if(sourceIsArray||updateIsArray){

if(!updateIsArray&&sourceIsArray){




for(tmpIndex=0;tmpIndex<doc[i].length;tmpIndex++){
recurseUpdated=this.updateObject(doc[i][tmpIndex],update[i],query,options,path+'.'+i,opType);
updated=updated||recurseUpdated;}}else 

{


if(doc[i]!==update[i]){
this._updateProperty(doc,i,update[i]);
updated=true;}}}else 


{


recurseUpdated=this.updateObject(doc[i],update[i],query,options,path+'.'+i,opType);
updated=updated||recurseUpdated;}}else 

{
if(doc[i]!==update[i]){
this._updateProperty(doc,i,update[i]);
updated=true;}}}else 


{
switch(opType){
case '$inc':
var doUpdate=true;


if(update[i]>0){
if(update.$max){

if(doc[i]>=update.$max){

doUpdate=false;}}}else 


if(update[i]<0){
if(update.$min){

if(doc[i]<=update.$min){

doUpdate=false;}}}




if(doUpdate){
this._updateIncrement(doc,i,update[i]);
updated=true;}

break;

case '$cast':




switch(update[i]){
case 'array':
if(!(doc[i] instanceof Array)){

this._updateProperty(doc,i,update.$data||[]);
updated=true;}

break;

case 'object':
if(!(doc[i] instanceof Object)||doc[i] instanceof Array){

this._updateProperty(doc,i,update.$data||{});
updated=true;}

break;

case 'number':
if(typeof doc[i]!=='number'){

this._updateProperty(doc,i,Number(doc[i]));
updated=true;}

break;

case 'string':
if(typeof doc[i]!=='string'){

this._updateProperty(doc,i,String(doc[i]));
updated=true;}

break;

default:
throw this.logIdentifier()+' Cannot update cast to unknown type: '+update[i];}


break;

case '$push':

if(doc[i]===undefined){

this._updateProperty(doc,i,[]);}



if(doc[i] instanceof Array){

if(update[i].$position!==undefined&&update[i].$each instanceof Array){

tempIndex=update[i].$position;


tmpCount=update[i].$each.length;
for(tmpIndex=0;tmpIndex<tmpCount;tmpIndex++){
this._updateSplicePush(doc[i],tempIndex+tmpIndex,update[i].$each[tmpIndex]);}}else 

if(update[i].$each instanceof Array){

tmpCount=update[i].$each.length;
for(tmpIndex=0;tmpIndex<tmpCount;tmpIndex++){
this._updatePush(doc[i],update[i].$each[tmpIndex]);}}else 

{

this._updatePush(doc[i],update[i]);}

updated=true;}else 
{
throw this.logIdentifier()+' Cannot push to a key that is not an array! ('+i+')';}

break;

case '$pull':
if(doc[i] instanceof Array){
tmpArray=[];


for(tmpIndex=0;tmpIndex<doc[i].length;tmpIndex++){
if(this._match(doc[i][tmpIndex],update[i],options,'',{})){
tmpArray.push(tmpIndex);}}



tmpCount=tmpArray.length;


while(tmpCount--){
this._updatePull(doc[i],tmpArray[tmpCount]);
updated=true;}}


break;

case '$pullAll':
if(doc[i] instanceof Array){
if(update[i] instanceof Array){
tmpArray=doc[i];
tmpCount=tmpArray.length;

if(tmpCount>0){

while(tmpCount--){
for(tempIndex=0;tempIndex<update[i].length;tempIndex++){
if(tmpArray[tmpCount]===update[i][tempIndex]){
this._updatePull(doc[i],tmpCount);
tmpCount--;
updated=true;}}



if(tmpCount<0){
break;}}}}else 



{
throw this.logIdentifier()+' Cannot pullAll without being given an array of values to pull! ('+i+')';}}


break;

case '$addToSet':

if(doc[i]===undefined){

this._updateProperty(doc,i,[]);}



if(doc[i] instanceof Array){

var targetArr=doc[i],
targetArrIndex,
targetArrCount=targetArr.length,
objHash,
addObj=true,
optionObj=options&&options.$addToSet,
hashMode,
pathSolver;


if(update[i].$key){
hashMode=false;
pathSolver=new Path(update[i].$key);
objHash=pathSolver.value(update[i])[0];


delete update[i].$key;}else 
if(optionObj&&optionObj.key){
hashMode=false;
pathSolver=new Path(optionObj.key);
objHash=pathSolver.value(update[i])[0];}else 
{
objHash=this.jStringify(update[i]);
hashMode=true;}


for(targetArrIndex=0;targetArrIndex<targetArrCount;targetArrIndex++){
if(hashMode){

if(this.jStringify(targetArr[targetArrIndex])===objHash){

addObj=false;
break;}}else 

{

if(objHash===pathSolver.value(targetArr[targetArrIndex])[0]){

addObj=false;
break;}}}




if(addObj){
this._updatePush(doc[i],update[i]);
updated=true;}}else 

{
throw this.logIdentifier()+' Cannot addToSet on a key that is not an array! ('+i+')';}

break;

case '$splicePush':

if(doc[i]===undefined){

this._updateProperty(doc,i,[]);}



if(doc[i] instanceof Array){
tempIndex=update.$index;

if(tempIndex!==undefined){
delete update.$index;


if(tempIndex>doc[i].length){
tempIndex=doc[i].length;}


this._updateSplicePush(doc[i],tempIndex,update[i]);
updated=true;}else 
{
throw this.logIdentifier()+' Cannot splicePush without a $index integer value!';}}else 

{
throw this.logIdentifier()+' Cannot splicePush with a key that is not an array! ('+i+')';}

break;

case '$move':
if(doc[i] instanceof Array){

for(tmpIndex=0;tmpIndex<doc[i].length;tmpIndex++){
if(this._match(doc[i][tmpIndex],update[i],options,'',{})){
var moveToIndex=update.$index;

if(moveToIndex!==undefined){
delete update.$index;

this._updateSpliceMove(doc[i],tmpIndex,moveToIndex);
updated=true;}else 
{
throw this.logIdentifier()+' Cannot move without a $index integer value!';}

break;}}}else 


{
throw this.logIdentifier()+' Cannot move on a key that is not an array! ('+i+')';}

break;

case '$mul':
this._updateMultiply(doc,i,update[i]);
updated=true;
break;

case '$rename':
this._updateRename(doc,i,update[i]);
updated=true;
break;

case '$overwrite':
this._updateOverwrite(doc,i,update[i]);
updated=true;
break;

case '$unset':
this._updateUnset(doc,i);
updated=true;
break;

case '$clear':
this._updateClear(doc,i);
updated=true;
break;

case '$pop':
if(doc[i] instanceof Array){
if(this._updatePop(doc[i],update[i])){
updated=true;}}else 

{
throw this.logIdentifier()+' Cannot pop from a key that is not an array! ('+i+')';}

break;

case '$toggle':

this._updateProperty(doc,i,!doc[i]);
updated=true;
break;

default:
if(doc[i]!==update[i]){
this._updateProperty(doc,i,update[i]);
updated=true;}

break;}}}}}






return updated;};









Collection.prototype._isPositionalKey=function(key){
return key.substr(key.length-2,2)==='.$';};










Collection.prototype.remove=function(query,options,callback){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


var self=this,
dataSet,
index,
arrIndex,
returnArr,
removeMethod,
triggerOperation,
doc,
newDoc;

if(typeof options==='function'){
callback=options;
options={};}



if(this.mongoEmulation()){
this.convertToFdb(query);}


if(query instanceof Array){
returnArr=[];

for(arrIndex=0;arrIndex<query.length;arrIndex++){
returnArr.push(this.remove(query[arrIndex],{noEmit:true}));}


if(!options||options&&!options.noEmit){
this._onRemove(returnArr);}


if(callback){callback(false,returnArr);}
return returnArr;}else 
{
returnArr=[];
dataSet=this.find(query,{$decouple:false});

if(dataSet.length){
removeMethod=function(dataItem){

self._removeFromIndexes(dataItem);


index=self._data.indexOf(dataItem);
self._dataRemoveAtIndex(index);

returnArr.push(dataItem);};



for(var i=0;i<dataSet.length;i++){
doc=dataSet[i];

if(self.willTrigger(self.TYPE_REMOVE,self.PHASE_BEFORE)||self.willTrigger(self.TYPE_REMOVE,self.PHASE_AFTER)){
triggerOperation={
type:'remove'};


newDoc=self.decouple(doc);

if(self.processTrigger(triggerOperation,self.TYPE_REMOVE,self.PHASE_BEFORE,newDoc,newDoc)!==false){

removeMethod(doc);

self.processTrigger(triggerOperation,self.TYPE_REMOVE,self.PHASE_AFTER,newDoc,newDoc);}}else 

{

removeMethod(doc);}}



if(returnArr.length){

self.chainSend('remove',{
query:query,
dataSet:returnArr},
options);


if(!options||options&&!options.noEmit){
this._onRemove(returnArr);}


this._onChange();
this.deferEmit('change',{type:'remove',data:returnArr});}}



if(callback){callback(false,returnArr);}
return returnArr;}};








Collection.prototype.removeById=function(id){
var searchObj={};
searchObj[this._primaryKey]=id;
return this.remove(searchObj);};








Collection.prototype.processQueue=function(type,callback,resultObj){
var self=this,
queue=this._deferQueue[type],
deferThreshold=this._deferThreshold[type],
deferTime=this._deferTime[type],
dataArr,
result;

resultObj=resultObj||{
deferred:true};


if(queue.length){

if(queue.length){
if(queue.length>deferThreshold){

dataArr=queue.splice(0,deferThreshold);}else 
{

dataArr=queue.splice(0,queue.length);}


result=self[type](dataArr);

switch(type){
case 'insert':
resultObj.inserted=resultObj.inserted||[];
resultObj.failed=resultObj.failed||[];

resultObj.inserted=resultObj.inserted.concat(result.inserted);
resultObj.failed=resultObj.failed.concat(result.failed);
break;}}




setTimeout(function(){
self.processQueue.call(self,type,callback,resultObj);},
deferTime);}else 
{
if(callback){callback(resultObj);}}



if(!this.isProcessingQueue()){
this.emit('queuesComplete');}};









Collection.prototype.isProcessingQueue=function(){
var i;

for(i in this._deferQueue){
if(this._deferQueue.hasOwnProperty(i)){
if(this._deferQueue[i].length){
return true;}}}




return false;};









Collection.prototype.insert=function(data,index,callback){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


if(typeof index==='function'){
callback=index;
index=this._data.length;}else 
if(index===undefined){
index=this._data.length;}


data=this.transformIn(data);
return this._insertHandle(data,index,callback);};









Collection.prototype._insertHandle=function(data,index,callback){
var 
queue=this._deferQueue.insert,
deferThreshold=this._deferThreshold.insert,

inserted=[],
failed=[],
insertResult,
resultObj,
i;

if(data instanceof Array){



if(this._deferredCalls&&data.length>deferThreshold){

this._deferQueue.insert=queue.concat(data);


this.processQueue('insert',callback);

return;}else 
{

for(i=0;i<data.length;i++){
insertResult=this._insert(data[i],index+i);

if(insertResult===true){
inserted.push(data[i]);}else 
{
failed.push({
doc:data[i],
reason:insertResult});}}}}else 




{

insertResult=this._insert(data,index);

if(insertResult===true){
inserted.push(data);}else 
{
failed.push({
doc:data,
reason:insertResult});}}




resultObj={
deferred:false,
inserted:inserted,
failed:failed};


this._onInsert(inserted,failed);
if(callback){callback(resultObj);}

this._onChange();
this.deferEmit('change',{type:'insert',data:inserted});

return resultObj;};












Collection.prototype._insert=function(doc,index){
if(doc){
var self=this,
indexViolation,
triggerOperation,
insertMethod,
newDoc,
capped=this.capped(),
cappedSize=this.cappedSize();

this.ensurePrimaryKey(doc);


indexViolation=this.insertIndexViolation(doc);

insertMethod=function(doc){

self._insertIntoIndexes(doc);


if(index>self._data.length){
index=self._data.length;}



self._dataInsertAtIndex(index,doc);



if(capped&&self._data.length>cappedSize){

self.removeById(self._data[0][self._primaryKey]);}



self.chainSend('insert',doc,{index:index});};



if(!indexViolation){
if(self.willTrigger(self.TYPE_INSERT,self.PHASE_BEFORE)||self.willTrigger(self.TYPE_INSERT,self.PHASE_AFTER)){
triggerOperation={
type:'insert'};


if(self.processTrigger(triggerOperation,self.TYPE_INSERT,self.PHASE_BEFORE,{},doc)!==false){
insertMethod(doc);

if(self.willTrigger(self.TYPE_INSERT,self.PHASE_AFTER)){


newDoc=self.decouple(doc);

self.processTrigger(triggerOperation,self.TYPE_INSERT,self.PHASE_AFTER,{},newDoc);}}else 

{

return 'Trigger cancelled operation';}}else 

{

insertMethod(doc);}


return true;}else 
{
return 'Index violation in index: '+indexViolation;}}



return 'No document passed to insert';};










Collection.prototype._dataInsertAtIndex=function(index,doc){
this._data.splice(index,0,doc);};








Collection.prototype._dataRemoveAtIndex=function(index){
this._data.splice(index,1);};








Collection.prototype._dataReplace=function(data){


while(this._data.length){
this._data.pop();}



this._data=this._data.concat(data);};







Collection.prototype._insertIntoIndexes=function(doc){
var arr=this._indexByName,
arrIndex,
violated,
jString=this.jStringify(doc);


violated=this._primaryIndex.uniqueSet(doc[this._primaryKey],doc);
this._primaryCrc.uniqueSet(doc[this._primaryKey],jString);
this._crcLookup.uniqueSet(jString,doc);


for(arrIndex in arr){
if(arr.hasOwnProperty(arrIndex)){
arr[arrIndex].insert(doc);}}



return violated;};







Collection.prototype._removeFromIndexes=function(doc){
var arr=this._indexByName,
arrIndex,
jString=this.jStringify(doc);


this._primaryIndex.unSet(doc[this._primaryKey]);
this._primaryCrc.unSet(doc[this._primaryKey]);
this._crcLookup.unSet(jString);


for(arrIndex in arr){
if(arr.hasOwnProperty(arrIndex)){
arr[arrIndex].remove(doc);}}};










Collection.prototype._updateIndexes=function(oldDoc,newDoc){
this._removeFromIndexes(oldDoc);
this._insertIntoIndexes(newDoc);};






Collection.prototype._rebuildIndexes=function(){
var arr=this._indexByName,
arrIndex;


for(arrIndex in arr){
if(arr.hasOwnProperty(arrIndex)){
arr[arrIndex].rebuild();}}};












Collection.prototype.subset=function(query,options){
var result=this.find(query,options);

return new Collection().
subsetOf(this).
primaryKey(this._primaryKey).
setData(result);};







Shared.synthesize(Collection.prototype,'subsetOf');







Collection.prototype.isSubsetOf=function(collection){
return this._subsetOf===collection;};










Collection.prototype.distinct=function(key,query,options){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


var data=this.find(query,options),
pathSolver=new Path(key),
valueUsed={},
distinctValues=[],
value,
i;


for(i=0;i<data.length;i++){
value=pathSolver.value(data[i])[0];

if(value&&!valueUsed[value]){
valueUsed[value]=true;
distinctValues.push(value);}}



return distinctValues;};








Collection.prototype.findById=function(id,options){
var searchObj={};
searchObj[this._primaryKey]=id;
return this.find(searchObj,options)[0];};











Collection.prototype.peek=function(search,options){

var arr=this._data,
arrCount=arr.length,
arrIndex,
arrItem,
tempColl=new Collection(),
typeOfSearch=typeof search;

if(typeOfSearch==='string'){
for(arrIndex=0;arrIndex<arrCount;arrIndex++){

arrItem=this.jStringify(arr[arrIndex]);


if(arrItem.indexOf(search)>-1){

tempColl.insert(arr[arrIndex]);}}



return tempColl.find({},options);}else 
{
return this.find(search,options);}};









Collection.prototype.explain=function(query,options){
var result=this.find(query,options);
return result.__fdbOp._data;};









Collection.prototype.options=function(obj){
obj=obj||{};
obj.$decouple=obj.$decouple!==undefined?obj.$decouple:true;
obj.$explain=obj.$explain!==undefined?obj.$explain:false;

return obj;};


















Collection.prototype.find=function(query,options,callback){

if(this.mongoEmulation()){
this.convertToFdb(query);}


if(callback){



callback('Callbacks for the find() operation are not yet implemented!',[]);
return [];}


return this._find.apply(this,arguments);};


Collection.prototype._find=function(query,options){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}



query=query||{};
options=this.options(options);

var op=this._metrics.create('find'),
pk=this.primaryKey(),
self=this,
analysis,
scanLength,
requiresTableScan=true,
resultArr,
joinCollectionIndex,
joinIndex,
joinCollection={},
joinQuery,
joinPath,
joinCollectionName,
joinCollectionInstance,
joinMatch,
joinMatchIndex,
joinSearchQuery,
joinSearchOptions,
joinMulti,
joinRequire,
joinFindResults,
joinFindResult,
joinItem,
joinPrefix,
resultCollectionName,
resultIndex,
resultRemove=[],
index,
i,j,k,l,
fieldListOn=[],
fieldListOff=[],
elemMatchPathSolver,
elemMatchSubArr,
elemMatchSpliceArr,
matcherTmpOptions={},
result,
cursor={},


matcher=function(doc){
return self._match(doc,query,options,'and',matcherTmpOptions);};


op.start();
if(query){

op.time('analyseQuery');
analysis=this._analyseQuery(self.decouple(query),options,op);
op.time('analyseQuery');
op.data('analysis',analysis);

if(analysis.hasJoin&&analysis.queriesJoin){


op.time('joinReferences');
for(joinIndex=0;joinIndex<analysis.joinsOn.length;joinIndex++){
joinCollectionName=analysis.joinsOn[joinIndex];
joinPath=new Path(analysis.joinQueries[joinCollectionName]);
joinQuery=joinPath.value(query)[0];
joinCollection[analysis.joinsOn[joinIndex]]=this._db.collection(analysis.joinsOn[joinIndex]).subset(joinQuery);


delete query[analysis.joinQueries[joinCollectionName]];}

op.time('joinReferences');}



if(analysis.indexMatch.length&&(!options||options&&!options.$skipIndex)){
op.data('index.potential',analysis.indexMatch);
op.data('index.used',analysis.indexMatch[0].index);


op.time('indexLookup');
resultArr=analysis.indexMatch[0].lookup||[];
op.time('indexLookup');


if(analysis.indexMatch[0].keyData.totalKeyCount===analysis.indexMatch[0].keyData.score){

requiresTableScan=false;}}else 

{
op.flag('usedIndex',false);}


if(requiresTableScan){
if(resultArr&&resultArr.length){
scanLength=resultArr.length;
op.time('tableScan: '+scanLength);

resultArr=resultArr.filter(matcher);}else 
{

scanLength=this._data.length;
op.time('tableScan: '+scanLength);
resultArr=this._data.filter(matcher);}



op.time('tableScan: '+scanLength);}



if(options.$orderBy){
op.time('sort');
resultArr=this.sort(options.$orderBy,resultArr);
op.time('sort');}


if(options.$page!==undefined&&options.$limit!==undefined){

cursor.page=options.$page;
cursor.pages=Math.ceil(resultArr.length/options.$limit);
cursor.records=resultArr.length;


if(options.$page&&options.$limit>0){
op.data('cursor',cursor);


resultArr.splice(0,options.$page*options.$limit);}}



if(options.$skip){
cursor.skip=options.$skip;


resultArr.splice(0,options.$skip);
op.data('skip',options.$skip);}


if(options.$limit&&resultArr&&resultArr.length>options.$limit){
cursor.limit=options.$limit;

resultArr.length=options.$limit;
op.data('limit',options.$limit);}


if(options.$decouple){

op.time('decouple');
resultArr=this.decouple(resultArr);
op.time('decouple');
op.data('flag.decouple',true);}



if(options.$join){
for(joinCollectionIndex=0;joinCollectionIndex<options.$join.length;joinCollectionIndex++){
for(joinCollectionName in options.$join[joinCollectionIndex]){
if(options.$join[joinCollectionIndex].hasOwnProperty(joinCollectionName)){

resultCollectionName=joinCollectionName;


if(joinCollection[joinCollectionName]){
joinCollectionInstance=joinCollection[joinCollectionName];}else 
{
joinCollectionInstance=this._db.collection(joinCollectionName);}



joinMatch=options.$join[joinCollectionIndex][joinCollectionName];


for(resultIndex=0;resultIndex<resultArr.length;resultIndex++){

joinSearchQuery={};
joinMulti=false;
joinRequire=false;
joinPrefix='';

for(joinMatchIndex in joinMatch){
if(joinMatch.hasOwnProperty(joinMatchIndex)){

if(joinMatchIndex.substr(0,1)==='$'){

switch(joinMatchIndex){
case '$where':
if(joinMatch[joinMatchIndex].query){


joinSearchQuery=self._resolveDynamicQuery(joinMatch[joinMatchIndex].query,resultArr[resultIndex]);}

if(joinMatch[joinMatchIndex].options){joinSearchOptions=joinMatch[joinMatchIndex].options;}
break;

case '$as':

resultCollectionName=joinMatch[joinMatchIndex];
break;

case '$multi':

joinMulti=joinMatch[joinMatchIndex];
break;

case '$require':

joinRequire=joinMatch[joinMatchIndex];
break;

case '$prefix':

joinPrefix=joinMatch[joinMatchIndex];
break;

default:
break;}}else 

{


joinSearchQuery[joinMatchIndex]=self._resolveDynamicQuery(joinMatch[joinMatchIndex],resultArr[resultIndex]);}}}





joinFindResults=joinCollectionInstance.find(joinSearchQuery,joinSearchOptions);


if(!joinRequire||joinRequire&&joinFindResults[0]){

if(resultCollectionName==='$root'){



if(joinMulti!==false){

throw this.logIdentifier()+' Cannot combine [$as: "$root"] with [$multi: true] in $join clause!';}



joinFindResult=joinFindResults[0];
joinItem=resultArr[resultIndex];

for(l in joinFindResult){
if(joinFindResult.hasOwnProperty(l)&&joinItem[joinPrefix+l]===undefined){



joinItem[joinPrefix+l]=joinFindResult[l];}}}else 


{
resultArr[resultIndex][resultCollectionName]=joinMulti===false?joinFindResults[0]:joinFindResults;}}else 

{

resultRemove.push(resultArr[resultIndex]);}}}}}






op.data('flag.join',true);}



if(resultRemove.length){
op.time('removalQueue');
for(i=0;i<resultRemove.length;i++){
index=resultArr.indexOf(resultRemove[i]);

if(index>-1){
resultArr.splice(index,1);}}


op.time('removalQueue');}


if(options.$transform){
op.time('transform');
for(i=0;i<resultArr.length;i++){
resultArr.splice(i,1,options.$transform(resultArr[i]));}

op.time('transform');
op.data('flag.transform',true);}



if(this._transformEnabled&&this._transformOut){
op.time('transformOut');
resultArr=this.transformOut(resultArr);
op.time('transformOut');}


op.data('results',resultArr.length);}else 
{
resultArr=[];}



























op.time('scanFields');
for(i in options){
if(options.hasOwnProperty(i)&&i.indexOf('$')!==0){
if(options[i]===1){
fieldListOn.push(i);}else 
if(options[i]===0){
fieldListOff.push(i);}}}



op.time('scanFields');


if(fieldListOn.length||fieldListOff.length){
op.data('flag.limitFields',true);
op.data('limitFields.on',fieldListOn);
op.data('limitFields.off',fieldListOff);

op.time('limitFields');


for(i=0;i<resultArr.length;i++){
result=resultArr[i];

for(j in result){
if(result.hasOwnProperty(j)){
if(fieldListOn.length){




if(j!==pk){
if(fieldListOn.indexOf(j)===-1){

delete result[j];}}}




if(fieldListOff.length){


if(fieldListOff.indexOf(j)>-1){

delete result[j];}}}}}






op.time('limitFields');}



if(options.$elemMatch){
op.data('flag.elemMatch',true);
op.time('projection-elemMatch');

for(i in options.$elemMatch){
if(options.$elemMatch.hasOwnProperty(i)){
elemMatchPathSolver=new Path(i);


for(j=0;j<resultArr.length;j++){
elemMatchSubArr=elemMatchPathSolver.value(resultArr[j])[0];


if(elemMatchSubArr&&elemMatchSubArr.length){


for(k=0;k<elemMatchSubArr.length;k++){


if(self._match(elemMatchSubArr[k],options.$elemMatch[i],options,'',{})){



elemMatchPathSolver.set(resultArr[j],i,[elemMatchSubArr[k]]);
break;}}}}}}







op.time('projection-elemMatch');}


if(options.$elemsMatch){
op.data('flag.elemsMatch',true);
op.time('projection-elemsMatch');

for(i in options.$elemsMatch){
if(options.$elemsMatch.hasOwnProperty(i)){
elemMatchPathSolver=new Path(i);


for(j=0;j<resultArr.length;j++){
elemMatchSubArr=elemMatchPathSolver.value(resultArr[j])[0];


if(elemMatchSubArr&&elemMatchSubArr.length){
elemMatchSpliceArr=[];


for(k=0;k<elemMatchSubArr.length;k++){


if(self._match(elemMatchSubArr[k],options.$elemsMatch[i],options,'',{})){

elemMatchSpliceArr.push(elemMatchSubArr[k]);}}




elemMatchPathSolver.set(resultArr[j],i,elemMatchSpliceArr);}}}}





op.time('projection-elemsMatch');}


op.stop();
resultArr.__fdbOp=op;
resultArr.$cursor=cursor;
return resultArr;};


Collection.prototype._resolveDynamicQuery=function(query,item){
var self=this,
newQuery,
propType,
propVal,
pathResult,
i;

if(typeof query==='string'){

if(query.substr(0,3)==='$$.'){

pathResult=new Path(query.substr(3,query.length-3)).value(item);}else 
{
pathResult=new Path(query).value(item);}


if(pathResult.length>1){
return {$in:pathResult};}else 
{
return pathResult[0];}}



newQuery={};

for(i in query){
if(query.hasOwnProperty(i)){
propType=typeof query[i];
propVal=query[i];

switch(propType){
case 'string':

if(propVal.substr(0,3)==='$$.'){

newQuery[i]=new Path(propVal.substr(3,propVal.length-3)).value(item)[0];}else 
{
newQuery[i]=propVal;}

break;

case 'object':
newQuery[i]=self._resolveDynamicQuery(propVal,item);
break;

default:
newQuery[i]=propVal;
break;}}}




return newQuery;};








Collection.prototype.findOne=function(){
return this.find.apply(this,arguments)[0];};









Collection.prototype.indexOf=function(query,options){
var item=this.find(query,{$decouple:false})[0],
sortedData;

if(item){
if(!options||options&&!options.$orderBy){

return this._data.indexOf(item);}else 
{

options.$decouple=false;
sortedData=this.find(query,options);

return sortedData.indexOf(item);}}



return -1;};









Collection.prototype.indexOfDocById=function(itemLookup,options){
var item,
sortedData;

if(typeof itemLookup!=='object'){
item=this._primaryIndex.get(itemLookup);}else 
{
item=this._primaryIndex.get(itemLookup[this._primaryKey]);}


if(item){
if(!options||options&&!options.$orderBy){

return this._data.indexOf(item);}else 
{

options.$decouple=false;
sortedData=this.find({},options);

return sortedData.indexOf(item);}}



return -1;};









Collection.prototype.removeByIndex=function(index){
var doc,
docId;

doc=this._data[index];

if(doc!==undefined){
doc=this.decouple(doc);
docId=doc[this.primaryKey()];

return this.removeById(docId);}


return false;};







Collection.prototype.transform=function(obj){
if(obj!==undefined){
if(typeof obj==="object"){
if(obj.enabled!==undefined){
this._transformEnabled=obj.enabled;}


if(obj.dataIn!==undefined){
this._transformIn=obj.dataIn;}


if(obj.dataOut!==undefined){
this._transformOut=obj.dataOut;}}else 

{
this._transformEnabled=obj!==false;}


return this;}


return {
enabled:this._transformEnabled,
dataIn:this._transformIn,
dataOut:this._transformOut};};








Collection.prototype.transformIn=function(data){
if(this._transformEnabled&&this._transformIn){
if(data instanceof Array){
var finalArr=[],i;

for(i=0;i<data.length;i++){
finalArr[i]=this._transformIn(data[i]);}


return finalArr;}else 
{
return this._transformIn(data);}}



return data;};







Collection.prototype.transformOut=function(data){
if(this._transformEnabled&&this._transformOut){
if(data instanceof Array){
var finalArr=[],i;

for(i=0;i<data.length;i++){
finalArr[i]=this._transformOut(data[i]);}


return finalArr;}else 
{
return this._transformOut(data);}}



return data;};








Collection.prototype.sort=function(sortObj,arr){

arr=arr||[];

var sortArr=[],
sortKey,
sortSingleObj;

for(sortKey in sortObj){
if(sortObj.hasOwnProperty(sortKey)){
sortSingleObj={};
sortSingleObj[sortKey]=sortObj[sortKey];
sortSingleObj.___fdbKey=String(sortKey);
sortArr.push(sortSingleObj);}}



if(sortArr.length<2){

return this._sort(sortObj,arr);}else 
{
return this._bucketSort(sortArr,arr);}};











Collection.prototype._bucketSort=function(keyArr,arr){
var keyObj=keyArr.shift(),
arrCopy,
bucketData,
bucketOrder,
bucketKey,
buckets,
i,
finalArr=[];

if(keyArr.length>0){

arr=this._sort(keyObj,arr);


bucketData=this.bucket(keyObj.___fdbKey,arr);
bucketOrder=bucketData.order;
buckets=bucketData.buckets;


for(i=0;i<bucketOrder.length;i++){
bucketKey=bucketOrder[i];

arrCopy=[].concat(keyArr);
finalArr=finalArr.concat(this._bucketSort(arrCopy,buckets[bucketKey]));}


return finalArr;}else 
{
return this._sort(keyObj,arr);}};










Collection.prototype._sort=function(key,arr){
var self=this,
sorterMethod,
pathSolver=new Path(),
dataPath=pathSolver.parse(key,true)[0];

pathSolver.path(dataPath.path);

if(dataPath.value===1){

sorterMethod=function(a,b){
var valA=pathSolver.value(a)[0],
valB=pathSolver.value(b)[0];

return self.sortAsc(valA,valB);};}else 

if(dataPath.value===-1){

sorterMethod=function(a,b){
var valA=pathSolver.value(a)[0],
valB=pathSolver.value(b)[0];

return self.sortDesc(valA,valB);};}else 

{
throw this.logIdentifier()+' $orderBy clause has invalid direction: '+dataPath.value+', accepted values are 1 or -1 for ascending or descending!';}


return arr.sort(sorterMethod);};









Collection.prototype.bucket=function(key,arr){
var i,
oldField,
field,
fieldArr=[],
buckets={};

for(i=0;i<arr.length;i++){
field=String(arr[i][key]);

if(oldField!==field){
fieldArr.push(field);
oldField=field;}


buckets[field]=buckets[field]||[];
buckets[field].push(arr[i]);}


return {
buckets:buckets,
order:fieldArr};};













Collection.prototype._analyseQuery=function(query,options,op){
var analysis={
queriesOn:[this._name],
indexMatch:[],
hasJoin:false,
queriesJoin:false,
joinQueries:{},
query:query,
options:options},

joinCollectionIndex,
joinCollectionName,
joinCollections=[],
joinCollectionReferences=[],
queryPath,
index,
indexMatchData,
indexRef,
indexRefName,
indexLookup,
pathSolver,
queryKeyCount,
i;


op.time('checkIndexes');
pathSolver=new Path();
queryKeyCount=pathSolver.countKeys(query);

if(queryKeyCount){
if(query[this._primaryKey]!==undefined){

op.time('checkIndexMatch: Primary Key');
analysis.indexMatch.push({
lookup:this._primaryIndex.lookup(query,options),
keyData:{
matchedKeys:[this._primaryKey],
totalKeyCount:queryKeyCount,
score:1},

index:this._primaryIndex});

op.time('checkIndexMatch: Primary Key');}



for(i in this._indexById){
if(this._indexById.hasOwnProperty(i)){
indexRef=this._indexById[i];
indexRefName=indexRef.name();

op.time('checkIndexMatch: '+indexRefName);
indexMatchData=indexRef.match(query,options);

if(indexMatchData.score>0){

indexLookup=indexRef.lookup(query,options);

analysis.indexMatch.push({
lookup:indexLookup,
keyData:indexMatchData,
index:indexRef});}


op.time('checkIndexMatch: '+indexRefName);

if(indexMatchData.score===queryKeyCount){

break;}}}



op.time('checkIndexes');


if(analysis.indexMatch.length>1){
op.time('findOptimalIndex');
analysis.indexMatch.sort(function(a,b){
if(a.keyData.score>b.keyData.score){

return -1;}


if(a.keyData.score<b.keyData.score){

return 1;}





if(a.keyData.score===b.keyData.score){
return a.lookup.length-b.lookup.length;}});


op.time('findOptimalIndex');}}




if(options.$join){
analysis.hasJoin=true;


for(joinCollectionIndex=0;joinCollectionIndex<options.$join.length;joinCollectionIndex++){

for(joinCollectionName in options.$join[joinCollectionIndex]){
if(options.$join[joinCollectionIndex].hasOwnProperty(joinCollectionName)){
joinCollections.push(joinCollectionName);


if('$as' in options.$join[joinCollectionIndex][joinCollectionName]){
joinCollectionReferences.push(options.$join[joinCollectionIndex][joinCollectionName].$as);}else 
{
joinCollectionReferences.push(joinCollectionName);}}}}










for(index=0;index<joinCollectionReferences.length;index++){

queryPath=this._queryReferencesCollection(query,joinCollectionReferences[index],'');

if(queryPath){
analysis.joinQueries[joinCollections[index]]=queryPath;
analysis.queriesJoin=true;}}



analysis.joinsOn=joinCollections;
analysis.queriesOn=analysis.queriesOn.concat(joinCollections);}


return analysis;};










Collection.prototype._queryReferencesCollection=function(query,collection,path){
var i;

for(i in query){
if(query.hasOwnProperty(i)){

if(i===collection){
if(path){path+='.';}
return path+i;}else 
{
if(typeof query[i]==='object'){

if(path){path+='.';}
path+=i;
return this._queryReferencesCollection(query[i],collection,path);}}}}





return false;};






Collection.prototype.count=function(query,options){
if(!query){
return this._data.length;}else 
{

return this.find(query,options).length;}};















Collection.prototype.findSub=function(match,path,subDocQuery,subDocOptions){
var pathHandler=new Path(path),
docArr=this.find(match),
docCount=docArr.length,
docIndex,
subDocArr,
subDocCollection=this._db.collection('__FDB_temp_'+this.objectId()),
subDocResults,
resultObj={
parents:docCount,
subDocTotal:0,
subDocs:[],
pathFound:false,
err:''};


subDocOptions=subDocOptions||{};

for(docIndex=0;docIndex<docCount;docIndex++){
subDocArr=pathHandler.value(docArr[docIndex])[0];
if(subDocArr){
subDocCollection.setData(subDocArr);
subDocResults=subDocCollection.find(subDocQuery,subDocOptions);
if(subDocOptions.returnFirst&&subDocResults.length){
return subDocResults[0];}


if(subDocOptions.$split){
resultObj.subDocs.push(subDocResults);}else 
{
resultObj.subDocs=resultObj.subDocs.concat(subDocResults);}


resultObj.subDocTotal+=subDocResults.length;
resultObj.pathFound=true;}}




subDocCollection.drop();


if(subDocOptions.$stats){
return resultObj;}else 
{
return resultObj.subDocs;}


if(!resultObj.pathFound){
resultObj.err='No objects found in the parent documents with a matching path of: '+path;}


return resultObj;};















Collection.prototype.findSubOne=function(match,path,subDocQuery,subDocOptions){
return this.findSub(match,path,subDocQuery,subDocOptions)[0];};









Collection.prototype.insertIndexViolation=function(doc){
var indexViolated,
arr=this._indexByName,
arrIndex,
arrItem;


if(this._primaryIndex.get(doc[this._primaryKey])){
indexViolated=this._primaryIndex;}else 
{

for(arrIndex in arr){
if(arr.hasOwnProperty(arrIndex)){
arrItem=arr[arrIndex];

if(arrItem.unique()){
if(arrItem.violation(doc)){
indexViolated=arrItem;
break;}}}}}






return indexViolated?indexViolated.name():false;};








Collection.prototype.ensureIndex=function(keys,options){
if(this.isDropped()){
throw this.logIdentifier()+' Cannot operate in a dropped state!';}


this._indexByName=this._indexByName||{};
this._indexById=this._indexById||{};

var index,
time={
start:new Date().getTime()};


if(options){
switch(options.type){
case 'hashed':
index=new IndexHashMap(keys,options,this);
break;

case 'btree':
index=new IndexBinaryTree(keys,options,this);
break;

default:

index=new IndexHashMap(keys,options,this);
break;}}else 

{

index=new IndexHashMap(keys,options,this);}



if(this._indexByName[index.name()]){

return {
err:'Index with that name already exists'};}



if(this._indexById[index.id()]){

return {
err:'Index with those keys already exists'};}




index.rebuild();


this._indexByName[index.name()]=index;
this._indexById[index.id()]=index;

time.end=new Date().getTime();
time.total=time.end-time.start;

this._lastOp={
type:'ensureIndex',
stats:{
time:time}};



return {
index:index,
id:index.id(),
name:index.name(),
state:index.state()};};








Collection.prototype.index=function(name){
if(this._indexByName){
return this._indexByName[name];}};







Collection.prototype.lastOp=function(){
return this._metrics.list();};









Collection.prototype.diff=function(collection){
var diff={
insert:[],
update:[],
remove:[]};


var pm=this.primaryKey(),
arr,
arrIndex,
arrItem,
arrCount;


if(pm!==collection.primaryKey()){
throw this.logIdentifier()+' Diffing requires that both collections have the same primary key!';}



arr=collection._data;


while(arr&&!(arr instanceof Array)){

collection=arr;
arr=collection._data;}


arrCount=arr.length;


for(arrIndex=0;arrIndex<arrCount;arrIndex++){
arrItem=arr[arrIndex];


if(this._primaryIndex.get(arrItem[pm])){

if(this._primaryCrc.get(arrItem[pm])!==collection._primaryCrc.get(arrItem[pm])){

diff.update.push(arrItem);}}else 

{

diff.insert.push(arrItem);}}




arr=this._data;
arrCount=arr.length;

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
arrItem=arr[arrIndex];

if(!collection._primaryIndex.get(arrItem[pm])){

diff.remove.push(arrItem);}}



return diff;};


Collection.prototype.collateAdd=new Overload({










'object, string':function(collection,keyName){
var self=this;

self.collateAdd(collection,function(packet){
var obj1,
obj2;

switch(packet.type){
case 'insert':
if(keyName){
obj1={
$push:{}};


obj1.$push[keyName]=self.decouple(packet.data);
self.update({},obj1);}else 
{
self.insert(packet.data);}

break;

case 'update':
if(keyName){
obj1={};
obj2={};

obj1[keyName]=packet.data.query;
obj2[keyName+'.$']=packet.data.update;

self.update(obj1,obj2);}else 
{
self.update(packet.data.query,packet.data.update);}

break;

case 'remove':
if(keyName){
obj1={
$pull:{}};


obj1.$pull[keyName]={};
obj1.$pull[keyName][self.primaryKey()]=packet.data.dataSet[0][collection.primaryKey()];

self.update({},obj1);}else 
{
self.remove(packet.data);}

break;

default:}});},













'object, function':function(collection,process){
if(typeof collection==='string'){


collection=this._db.collection(collection,{
autoCreate:false,
throwError:false});}



if(collection){
this._collate=this._collate||{};
this._collate[collection.name()]=new ReactorIO(collection,this,process);

return this;}else 
{
throw 'Cannot collate from a non-existent collection!';}}});




Collection.prototype.collateRemove=function(collection){
if(typeof collection==='object'){

collection=collection.name();}


if(collection){

this._collate[collection].drop();


delete this._collate[collection];

return this;}else 
{
throw 'No collection name passed to collateRemove() or collection not found!';}};



Db.prototype.collection=new Overload({









'':function(){
return this.$main.call(this,{
name:this.objectId()});},











'object':function(data){

if(data instanceof Collection){
if(data.state()!=='droppped'){
return data;}else 
{
return this.$main.call(this,{
name:data.name()});}}




return this.$main.call(this,data);},










'string':function(collectionName){
return this.$main.call(this,{
name:collectionName});},













'string, string':function(collectionName,primaryKey){
return this.$main.call(this,{
name:collectionName,
primaryKey:primaryKey});},












'string, object':function(collectionName,options){
options.name=collectionName;

return this.$main.call(this,options);},













'string, string, object':function(collectionName,primaryKey,options){
options.name=collectionName;
options.primaryKey=primaryKey;

return this.$main.call(this,options);},










'$main':function(options){
var name=options.name;

if(name){
if(!this._collection[name]){
if(options&&options.autoCreate===false){
if(options&&options.throwError!==false){
throw this.logIdentifier()+' Cannot get collection '+name+' because it does not exist and auto-create has been disabled!';}}



if(this.debug()){
console.log(this.logIdentifier()+' Creating collection '+name);}}



this._collection[name]=this._collection[name]||new Collection(name,options).db(this);
this._collection[name].mongoEmulation(this.mongoEmulation());

if(options.primaryKey!==undefined){
this._collection[name].primaryKey(options.primaryKey);}


if(options.capped!==undefined){

if(options.size!==undefined){
this._collection[name].capped(options.capped);
this._collection[name].cappedSize(options.size);}else 
{
throw this.logIdentifier()+' Cannot create a capped collection without specifying a size!';}}



return this._collection[name];}else 
{
if(!options||options&&options.throwError!==false){
throw this.logIdentifier()+' Cannot get collection with undefined name!';}}}});











Db.prototype.collectionExists=function(viewName){
return Boolean(this._collection[viewName]);};










Db.prototype.collections=function(search){
var arr=[],
collections=this._collection,
collection,
i;

if(search){
if(!(search instanceof RegExp)){

search=new RegExp(search);}}



for(i in collections){
if(collections.hasOwnProperty(i)){
collection=collections[i];

if(search){
if(search.exec(i)){
arr.push({
name:i,
count:collection.count(),
linked:collection.isLinked!==undefined?collection.isLinked():false});}}else 


{
arr.push({
name:i,
count:collection.count(),
linked:collection.isLinked!==undefined?collection.isLinked():false});}}}





arr.sort(function(a,b){
return a.name.localeCompare(b.name);});


return arr;};


Shared.finishModule('Collection');
module.exports=Collection;
});
__d('forerunnerdb/js/lib/Metrics.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js'),
Operation=require('forerunnerdb/js/lib/Operation.js');





var Metrics=function(){
this.init.apply(this,arguments);};


Metrics.prototype.init=function(){
this._data=[];};


Shared.addModule('Metrics',Metrics);
Shared.mixin(Metrics.prototype,'Mixin.ChainReactor');








Metrics.prototype.create=function(name){
var op=new Operation(name);

if(this._enabled){
this._data.push(op);}


return op;};






Metrics.prototype.start=function(){
this._enabled=true;
return this;};






Metrics.prototype.stop=function(){
this._enabled=false;
return this;};






Metrics.prototype.clear=function(){
this._data=[];
return this;};






Metrics.prototype.list=function(){
return this._data;};


Shared.finishModule('Metrics');
module.exports=Metrics;
});
__d('forerunnerdb/js/lib/Operation.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js'),
Path=require('forerunnerdb/js/lib/Path.js');







var Operation=function(name){
this.pathSolver=new Path();
this.counter=0;
this.init.apply(this,arguments);};


Operation.prototype.init=function(name){
this._data={
operation:name,
index:{
potential:[],
used:false},

steps:[],
time:{
startMs:0,
stopMs:0,
totalMs:0,
process:{}},

flag:{},
log:[]};};



Shared.addModule('Operation',Operation);
Shared.mixin(Operation.prototype,'Mixin.ChainReactor');




Operation.prototype.start=function(){
this._data.time.startMs=new Date().getTime();};







Operation.prototype.log=function(event){
if(event){
var lastLogTime=this._log.length>0?this._data.log[this._data.log.length-1].time:0,
logObj={
event:event,
time:new Date().getTime(),
delta:0};


this._data.log.push(logObj);

if(lastLogTime){
logObj.delta=logObj.time-lastLogTime;}


return this;}


return this._data.log;};








Operation.prototype.time=function(section){
if(section!==undefined){
var process=this._data.time.process,
processObj=process[section]=process[section]||{};

if(!processObj.startMs){

processObj.startMs=new Date().getTime();
processObj.stepObj={
name:section};


this._data.steps.push(processObj.stepObj);}else 
{
processObj.stopMs=new Date().getTime();
processObj.totalMs=processObj.stopMs-processObj.startMs;
processObj.stepObj.totalMs=processObj.totalMs;
delete processObj.stepObj;}


return this;}


return this._data.time;};








Operation.prototype.flag=function(key,val){
if(key!==undefined&&val!==undefined){
this._data.flag[key]=val;}else 
if(key!==undefined){
return this._data.flag[key];}else 
{
return this._data.flag;}};



Operation.prototype.data=function(path,val,noTime){
if(val!==undefined){

this.pathSolver.set(this._data,path,val);

return this;}


return this.pathSolver.get(this._data,path);};


Operation.prototype.pushData=function(path,val,noTime){

this.pathSolver.push(this._data,path,val);};





Operation.prototype.stop=function(){
this._data.time.stopMs=new Date().getTime();
this._data.time.totalMs=this._data.time.stopMs-this._data.time.startMs;};


Shared.finishModule('Operation');
module.exports=Operation;
});
__d('forerunnerdb/js/lib/Path.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js');







var Path=function(path){
this.init.apply(this,arguments);};


Path.prototype.init=function(path){
if(path){
this.path(path);}};



Shared.addModule('Path',Path);
Shared.mixin(Path.prototype,'Mixin.Common');
Shared.mixin(Path.prototype,'Mixin.ChainReactor');





Path.prototype.path=function(path){
if(path!==undefined){
this._path=this.clean(path);
this._pathParts=this._path.split('.');
return this;}


return this._path;};









Path.prototype.hasObjectPaths=function(testKeys,testObj){
var result=true,
i;

for(i in testKeys){
if(testKeys.hasOwnProperty(i)){
if(testObj[i]===undefined){
return false;}


if(typeof testKeys[i]==='object'){

result=this.hasObjectPaths(testKeys[i],testObj[i]);


if(!result){
return false;}}}}





return result;};







Path.prototype.countKeys=function(testObj){
var totalKeys=0,
i;

for(i in testObj){
if(testObj.hasOwnProperty(i)){
if(testObj[i]!==undefined){
if(typeof testObj[i]!=='object'){
totalKeys++;}else 
{
totalKeys+=this.countKeys(testObj[i]);}}}}





return totalKeys;};









Path.prototype.countObjectPaths=function(testKeys,testObj){
var matchData,
matchedKeys={},
matchedKeyCount=0,
totalKeyCount=0,
i;

for(i in testObj){
if(testObj.hasOwnProperty(i)){
if(typeof testObj[i]==='object'){

matchData=this.countObjectPaths(testKeys[i],testObj[i]);

matchedKeys[i]=matchData.matchedKeys;
totalKeyCount+=matchData.totalKeyCount;
matchedKeyCount+=matchData.matchedKeyCount;}else 
{

totalKeyCount++;


if(testKeys&&testKeys[i]&&typeof testKeys[i]!=='object'){
matchedKeys[i]=true;
matchedKeyCount++;}else 
{
matchedKeys[i]=false;}}}}





return {
matchedKeys:matchedKeys,
matchedKeyCount:matchedKeyCount,
totalKeyCount:totalKeyCount};};











Path.prototype.parse=function(obj,withValue){
var paths=[],
path='',
resultData,
i,k;

for(i in obj){
if(obj.hasOwnProperty(i)){

path=i;

if(typeof obj[i]==='object'){
if(withValue){
resultData=this.parse(obj[i],withValue);

for(k=0;k<resultData.length;k++){
paths.push({
path:path+'.'+resultData[k].path,
value:resultData[k].value});}}else 


{
resultData=this.parse(obj[i]);

for(k=0;k<resultData.length;k++){
paths.push({
path:path+'.'+resultData[k].path});}}}else 



{
if(withValue){
paths.push({
path:path,
value:obj[i]});}else 

{
paths.push({
path:path});}}}}






return paths;};

















Path.prototype.parseArr=function(obj,options){
options=options||{};
return this._parseArr(obj,'',[],options);};


Path.prototype._parseArr=function(obj,path,paths,options){
var i,
newPath='';

path=path||'';
paths=paths||[];

for(i in obj){
if(obj.hasOwnProperty(i)){
if(!options.ignore||options.ignore&&!options.ignore.test(i)){
if(path){
newPath=path+'.'+i;}else 
{
newPath=i;}


if(typeof obj[i]==='object'){
if(options.verbose){
paths.push(newPath);}


this._parseArr(obj[i],newPath,paths,options);}else 
{
paths.push(newPath);}}}}





return paths;};








Path.prototype.value=function(obj,path){
if(obj!==undefined&&typeof obj==='object'){
var pathParts,
arr,
arrCount,
objPart,
objPartParent,
valuesArr=[],
i,k;

if(path!==undefined){
path=this.clean(path);
pathParts=path.split('.');}


arr=pathParts||this._pathParts;
arrCount=arr.length;
objPart=obj;

for(i=0;i<arrCount;i++){
objPart=objPart[arr[i]];

if(objPartParent instanceof Array){

for(k=0;k<objPartParent.length;k++){
valuesArr=valuesArr.concat(this.value(objPartParent,k+'.'+arr[i]));}


return valuesArr;}else 
{
if(!objPart||typeof objPart!=='object'){
break;}}



objPartParent=objPart;}


return [objPart];}else 
{
return [];}};










Path.prototype.set=function(obj,path,val){
if(obj!==undefined&&path!==undefined){
var pathParts,
part;

path=this.clean(path);
pathParts=path.split('.');

part=pathParts.shift();

if(pathParts.length){

obj[part]=obj[part]||{};


this.set(obj[part],pathParts.join('.'),val);}else 
{

obj[part]=val;}}



return obj;};


Path.prototype.get=function(obj,path){
return this.value(obj,path)[0];};









Path.prototype.push=function(obj,path,val){
if(obj!==undefined&&path!==undefined){
var pathParts,
part;

path=this.clean(path);
pathParts=path.split('.');

part=pathParts.shift();

if(pathParts.length){

obj[part]=obj[part]||{};


this.set(obj[part],pathParts.join('.'),val);}else 
{

obj[part]=obj[part]||[];

if(obj[part] instanceof Array){
obj[part].push(val);}else 
{
throw 'ForerunnerDB.Path: Cannot push to a path whose endpoint is not an array!';}}}




return obj;};









Path.prototype.keyValue=function(obj,path){
var pathParts,
arr,
arrCount,
objPart,
objPartParent,
objPartHash,
i;

if(path!==undefined){
path=this.clean(path);
pathParts=path.split('.');}


arr=pathParts||this._pathParts;
arrCount=arr.length;
objPart=obj;

for(i=0;i<arrCount;i++){
objPart=objPart[arr[i]];

if(!objPart||typeof objPart!=='object'){
objPartHash=arr[i]+':'+objPart;
break;}


objPartParent=objPart;}


return objPartHash;};









Path.prototype.set=function(obj,path,val){
if(obj!==undefined&&path!==undefined){
var pathParts,
part;

path=this.clean(path);
pathParts=path.split('.');

part=pathParts.shift();

if(pathParts.length){

obj[part]=obj[part]||{};


this.set(obj[part],pathParts.join('.'),val);}else 
{

obj[part]=val;}}



return obj;};







Path.prototype.clean=function(str){
if(str.substr(0,1)==='.'){
str=str.substr(1,str.length-1);}


return str;};


Shared.finishModule('Path');
module.exports=Path;
});
__d('forerunnerdb/js/lib/KeyValueStore.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js');








var KeyValueStore=function(name){
this.init.apply(this,arguments);};


KeyValueStore.prototype.init=function(name){
this._name=name;
this._data={};
this._primaryKey='_id';};


Shared.addModule('KeyValueStore',KeyValueStore);
Shared.mixin(KeyValueStore.prototype,'Mixin.ChainReactor');






Shared.synthesize(KeyValueStore.prototype,'name');






KeyValueStore.prototype.primaryKey=function(key){
if(key!==undefined){
this._primaryKey=key;
return this;}


return this._primaryKey;};






KeyValueStore.prototype.truncate=function(){
this._data={};
return this;};








KeyValueStore.prototype.set=function(key,value){
this._data[key]=value?value:true;
return this;};







KeyValueStore.prototype.get=function(key){
return this._data[key];};









KeyValueStore.prototype.lookup=function(obj){
var pKeyVal=obj[this._primaryKey],
arrIndex,
arrCount,
lookupItem,
result;

if(pKeyVal instanceof Array){

arrCount=pKeyVal.length;
result=[];

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
lookupItem=this._data[pKeyVal[arrIndex]];

if(lookupItem){
result.push(lookupItem);}}



return result;}else 
if(pKeyVal instanceof RegExp){

result=[];

for(arrIndex in this._data){
if(this._data.hasOwnProperty(arrIndex)){
if(pKeyVal.test(arrIndex)){
result.push(this._data[arrIndex]);}}}




return result;}else 
if(typeof pKeyVal==='object'){


if(pKeyVal.$ne){

result=[];

for(arrIndex in this._data){
if(this._data.hasOwnProperty(arrIndex)){
if(arrIndex!==pKeyVal.$ne){
result.push(this._data[arrIndex]);}}}




return result;}


if(pKeyVal.$in&&pKeyVal.$in instanceof Array){

result=[];

for(arrIndex in this._data){
if(this._data.hasOwnProperty(arrIndex)){
if(pKeyVal.$in.indexOf(arrIndex)>-1){
result.push(this._data[arrIndex]);}}}




return result;}


if(pKeyVal.$nin&&pKeyVal.$nin instanceof Array){

result=[];

for(arrIndex in this._data){
if(this._data.hasOwnProperty(arrIndex)){
if(pKeyVal.$nin.indexOf(arrIndex)===-1){
result.push(this._data[arrIndex]);}}}




return result;}


if(pKeyVal.$or&&pKeyVal.$or instanceof Array){

result=[];

for(arrIndex=0;arrIndex<pKeyVal.$or.length;arrIndex++){
result=result.concat(this.lookup(pKeyVal.$or[arrIndex]));}


return result;}}else 

{

lookupItem=this._data[pKeyVal];

if(lookupItem!==undefined){
return [lookupItem];}else 
{
return [];}}};









KeyValueStore.prototype.unSet=function(key){
delete this._data[key];
return this;};










KeyValueStore.prototype.uniqueSet=function(key,value){
if(this._data[key]===undefined){
this._data[key]=value;
return true;}


return false;};


Shared.finishModule('KeyValueStore');
module.exports=KeyValueStore;
});
__d('forerunnerdb/js/lib/IndexHashMap.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js'),
Path=require('forerunnerdb/js/lib/Path.js');






var IndexHashMap=function(){
this.init.apply(this,arguments);};


IndexHashMap.prototype.init=function(keys,options,collection){
this._crossRef={};
this._size=0;
this._id=this._itemKeyHash(keys,keys);

this.data({});
this.unique(options&&options.unique?options.unique:false);

if(keys!==undefined){
this.keys(keys);}


if(collection!==undefined){
this.collection(collection);}


this.name(options&&options.name?options.name:this._id);};


Shared.addModule('IndexHashMap',IndexHashMap);
Shared.mixin(IndexHashMap.prototype,'Mixin.ChainReactor');

IndexHashMap.prototype.id=function(){
return this._id;};


IndexHashMap.prototype.state=function(){
return this._state;};


IndexHashMap.prototype.size=function(){
return this._size;};


Shared.synthesize(IndexHashMap.prototype,'data');
Shared.synthesize(IndexHashMap.prototype,'name');
Shared.synthesize(IndexHashMap.prototype,'collection');
Shared.synthesize(IndexHashMap.prototype,'type');
Shared.synthesize(IndexHashMap.prototype,'unique');

IndexHashMap.prototype.keys=function(val){
if(val!==undefined){
this._keys=val;


this._keyCount=new Path().parse(this._keys).length;
return this;}


return this._keys;};


IndexHashMap.prototype.rebuild=function(){

if(this._collection){

var collection=this._collection.subset({},{
$decouple:false,
$orderBy:this._keys}),

collectionData=collection.find(),
dataIndex,
dataCount=collectionData.length;


this._data={};

if(this._unique){
this._uniqueLookup={};}



for(dataIndex=0;dataIndex<dataCount;dataIndex++){
this.insert(collectionData[dataIndex]);}}



this._state={
name:this._name,
keys:this._keys,
indexSize:this._size,
built:new Date(),
updated:new Date(),
ok:true};};



IndexHashMap.prototype.insert=function(dataItem,options){
var uniqueFlag=this._unique,
uniqueHash,
itemHashArr,
hashIndex;

if(uniqueFlag){
uniqueHash=this._itemHash(dataItem,this._keys);
this._uniqueLookup[uniqueHash]=dataItem;}



itemHashArr=this._itemHashArr(dataItem,this._keys);


for(hashIndex=0;hashIndex<itemHashArr.length;hashIndex++){
this.pushToPathValue(itemHashArr[hashIndex],dataItem);}};



IndexHashMap.prototype.update=function(dataItem,options){};







IndexHashMap.prototype.remove=function(dataItem,options){
var uniqueFlag=this._unique,
uniqueHash,
itemHashArr,
hashIndex;

if(uniqueFlag){
uniqueHash=this._itemHash(dataItem,this._keys);
delete this._uniqueLookup[uniqueHash];}



itemHashArr=this._itemHashArr(dataItem,this._keys);


for(hashIndex=0;hashIndex<itemHashArr.length;hashIndex++){
this.pullFromPathValue(itemHashArr[hashIndex],dataItem);}};



IndexHashMap.prototype.violation=function(dataItem){

var uniqueHash=this._itemHash(dataItem,this._keys);


return Boolean(this._uniqueLookup[uniqueHash]);};


IndexHashMap.prototype.hashViolation=function(uniqueHash){

return Boolean(this._uniqueLookup[uniqueHash]);};


IndexHashMap.prototype.pushToPathValue=function(hash,obj){
var pathValArr=this._data[hash]=this._data[hash]||[];


if(pathValArr.indexOf(obj)===-1){

pathValArr.push(obj);


this._size++;


this.pushToCrossRef(obj,pathValArr);}};



IndexHashMap.prototype.pullFromPathValue=function(hash,obj){
var pathValArr=this._data[hash],
indexOfObject;


indexOfObject=pathValArr.indexOf(obj);

if(indexOfObject>-1){

pathValArr.splice(indexOfObject,1);


this._size--;


this.pullFromCrossRef(obj,pathValArr);}



if(!pathValArr.length){

delete this._data[hash];}};



IndexHashMap.prototype.pull=function(obj){

var id=obj[this._collection.primaryKey()],
crossRefArr=this._crossRef[id],
arrIndex,
arrCount=crossRefArr.length,
arrItem;

for(arrIndex=0;arrIndex<arrCount;arrIndex++){
arrItem=crossRefArr[arrIndex];


this._pullFromArray(arrItem,obj);}



this._size--;


delete this._crossRef[id];};


IndexHashMap.prototype._pullFromArray=function(arr,obj){
var arrCount=arr.length;

while(arrCount--){
if(arr[arrCount]===obj){
arr.splice(arrCount,1);}}};




IndexHashMap.prototype.pushToCrossRef=function(obj,pathValArr){
var id=obj[this._collection.primaryKey()],
crObj;

this._crossRef[id]=this._crossRef[id]||[];


crObj=this._crossRef[id];

if(crObj.indexOf(pathValArr)===-1){

crObj.push(pathValArr);}};



IndexHashMap.prototype.pullFromCrossRef=function(obj,pathValArr){
var id=obj[this._collection.primaryKey()];

delete this._crossRef[id];};


IndexHashMap.prototype.lookup=function(query){
return this._data[this._itemHash(query,this._keys)]||[];};


IndexHashMap.prototype.match=function(query,options){


var pathSolver=new Path();
var indexKeyArr=pathSolver.parseArr(this._keys),
queryArr=pathSolver.parseArr(query),
matchedKeys=[],
matchedKeyCount=0,
i;



for(i=0;i<indexKeyArr.length;i++){
if(queryArr[i]===indexKeyArr[i]){
matchedKeyCount++;
matchedKeys.push(queryArr[i]);}else 
{

return {
matchedKeys:[],
totalKeyCount:queryArr.length,
score:0};}}




return {
matchedKeys:matchedKeys,
totalKeyCount:queryArr.length,
score:matchedKeyCount};};





IndexHashMap.prototype._itemHash=function(item,keys){
var path=new Path(),
pathData,
hash='',
k;

pathData=path.parse(keys);

for(k=0;k<pathData.length;k++){
if(hash){hash+='_';}
hash+=path.value(item,pathData[k].path).join(':');}


return hash;};


IndexHashMap.prototype._itemKeyHash=function(item,keys){
var path=new Path(),
pathData,
hash='',
k;

pathData=path.parse(keys);

for(k=0;k<pathData.length;k++){
if(hash){hash+='_';}
hash+=path.keyValue(item,pathData[k].path);}


return hash;};


IndexHashMap.prototype._itemHashArr=function(item,keys){
var path=new Path(),
pathData,

hashArr=[],
valArr,
i,k,j;

pathData=path.parse(keys);

for(k=0;k<pathData.length;k++){
valArr=path.value(item,pathData[k].path);

for(i=0;i<valArr.length;i++){
if(k===0){

hashArr.push(valArr[i]);}else 
{

for(j=0;j<hashArr.length;j++){
hashArr[j]=hashArr[j]+'_'+valArr[i];}}}}





return hashArr;};


Shared.finishModule('IndexHashMap');
module.exports=IndexHashMap;
});
__d('forerunnerdb/js/lib/IndexBinaryTree.js',function(global, require, module, exports) {  "use strict";










var Shared=require('forerunnerdb/js/lib/Shared.js'),
Path=require('forerunnerdb/js/lib/Path.js'),
BinaryTree=require('forerunnerdb/js/lib/BinaryTree.js'),
treeInstance=new BinaryTree(),
btree=function(){};

treeInstance.inOrder('hash');






var IndexBinaryTree=function(){
this.init.apply(this,arguments);};


IndexBinaryTree.prototype.init=function(keys,options,collection){
this._btree=new (btree.create(2,this.sortAsc))();
this._size=0;
this._id=this._itemKeyHash(keys,keys);

this.unique(options&&options.unique?options.unique:false);

if(keys!==undefined){
this.keys(keys);}


if(collection!==undefined){
this.collection(collection);}


this.name(options&&options.name?options.name:this._id);};


Shared.addModule('IndexBinaryTree',IndexBinaryTree);
Shared.mixin(IndexBinaryTree.prototype,'Mixin.ChainReactor');
Shared.mixin(IndexBinaryTree.prototype,'Mixin.Sorting');

IndexBinaryTree.prototype.id=function(){
return this._id;};


IndexBinaryTree.prototype.state=function(){
return this._state;};


IndexBinaryTree.prototype.size=function(){
return this._size;};


Shared.synthesize(IndexBinaryTree.prototype,'data');
Shared.synthesize(IndexBinaryTree.prototype,'name');
Shared.synthesize(IndexBinaryTree.prototype,'collection');
Shared.synthesize(IndexBinaryTree.prototype,'type');
Shared.synthesize(IndexBinaryTree.prototype,'unique');

IndexBinaryTree.prototype.keys=function(val){
if(val!==undefined){
this._keys=val;


this._keyCount=new Path().parse(this._keys).length;
return this;}


return this._keys;};


IndexBinaryTree.prototype.rebuild=function(){

if(this._collection){

var collection=this._collection.subset({},{
$decouple:false,
$orderBy:this._keys}),

collectionData=collection.find(),
dataIndex,
dataCount=collectionData.length;


this._btree=new (btree.create(2,this.sortAsc))();

if(this._unique){
this._uniqueLookup={};}



for(dataIndex=0;dataIndex<dataCount;dataIndex++){
this.insert(collectionData[dataIndex]);}}



this._state={
name:this._name,
keys:this._keys,
indexSize:this._size,
built:new Date(),
updated:new Date(),
ok:true};};



IndexBinaryTree.prototype.insert=function(dataItem,options){
var uniqueFlag=this._unique,
uniqueHash,
dataItemHash=this._itemKeyHash(dataItem,this._keys),
keyArr;

if(uniqueFlag){
uniqueHash=this._itemHash(dataItem,this._keys);
this._uniqueLookup[uniqueHash]=dataItem;}






keyArr=this._btree.get(dataItemHash);


if(keyArr===undefined){

keyArr=[];


this._btree.put(dataItemHash,keyArr);}



keyArr.push(dataItem);

this._size++;};


IndexBinaryTree.prototype.remove=function(dataItem,options){
var uniqueFlag=this._unique,
uniqueHash,
dataItemHash=this._itemKeyHash(dataItem,this._keys),
keyArr,
itemIndex;

if(uniqueFlag){
uniqueHash=this._itemHash(dataItem,this._keys);
delete this._uniqueLookup[uniqueHash];}



keyArr=this._btree.get(dataItemHash);

if(keyArr!==undefined){

itemIndex=keyArr.indexOf(dataItem);

if(itemIndex>-1){

if(keyArr.length===1){

this._btree.del(dataItemHash);}else 
{

keyArr.splice(itemIndex,1);}


this._size--;}}};




IndexBinaryTree.prototype.violation=function(dataItem){

var uniqueHash=this._itemHash(dataItem,this._keys);


return Boolean(this._uniqueLookup[uniqueHash]);};


IndexBinaryTree.prototype.hashViolation=function(uniqueHash){

return Boolean(this._uniqueLookup[uniqueHash]);};


IndexBinaryTree.prototype.lookup=function(query){
return this._data[this._itemHash(query,this._keys)]||[];};


IndexBinaryTree.prototype.match=function(query,options){


var pathSolver=new Path();
var indexKeyArr=pathSolver.parseArr(this._keys),
queryArr=pathSolver.parseArr(query),
matchedKeys=[],
matchedKeyCount=0,
i;



for(i=0;i<indexKeyArr.length;i++){
if(queryArr[i]===indexKeyArr[i]){
matchedKeyCount++;
matchedKeys.push(queryArr[i]);}else 
{

return {
matchedKeys:[],
totalKeyCount:queryArr.length,
score:0};}}




return {
matchedKeys:matchedKeys,
totalKeyCount:queryArr.length,
score:matchedKeyCount};};





IndexBinaryTree.prototype._itemHash=function(item,keys){
var path=new Path(),
pathData,
hash='',
k;

pathData=path.parse(keys);

for(k=0;k<pathData.length;k++){
if(hash){hash+='_';}
hash+=path.value(item,pathData[k].path).join(':');}


return hash;};


IndexBinaryTree.prototype._itemKeyHash=function(item,keys){
var path=new Path(),
pathData,
hash='',
k;

pathData=path.parse(keys);

for(k=0;k<pathData.length;k++){
if(hash){hash+='_';}
hash+=path.keyValue(item,pathData[k].path);}


return hash;};


IndexBinaryTree.prototype._itemHashArr=function(item,keys){
var path=new Path(),
pathData,

hashArr=[],
valArr,
i,k,j;

pathData=path.parse(keys);

for(k=0;k<pathData.length;k++){
valArr=path.value(item,pathData[k].path);

for(i=0;i<valArr.length;i++){
if(k===0){

hashArr.push(valArr[i]);}else 
{

for(j=0;j<hashArr.length;j++){
hashArr[j]=hashArr[j]+'_'+valArr[i];}}}}





return hashArr;};


Shared.finishModule('IndexBinaryTree');
module.exports=IndexBinaryTree;
});
__d('forerunnerdb/js/lib/BinaryTree.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js'),
Path=require('forerunnerdb/js/lib/Path.js');

var BinaryTree=function(data,compareFunc,hashFunc){
this.init.apply(this,arguments);};


BinaryTree.prototype.init=function(data,index,compareFunc,hashFunc){
this._store=[];
this._keys=[];

if(index!==undefined){this.index(index);}
if(compareFunc!==undefined){this.compareFunc(compareFunc);}
if(hashFunc!==undefined){this.hashFunc(hashFunc);}
if(data!==undefined){this.data(data);}};


Shared.addModule('BinaryTree',BinaryTree);
Shared.mixin(BinaryTree.prototype,'Mixin.ChainReactor');
Shared.mixin(BinaryTree.prototype,'Mixin.Sorting');
Shared.mixin(BinaryTree.prototype,'Mixin.Common');

Shared.synthesize(BinaryTree.prototype,'compareFunc');
Shared.synthesize(BinaryTree.prototype,'hashFunc');
Shared.synthesize(BinaryTree.prototype,'indexDir');
Shared.synthesize(BinaryTree.prototype,'keys');
Shared.synthesize(BinaryTree.prototype,'index',function(index){
if(index!==undefined){

this.keys(this.extractKeys(index));}


return this.$super.call(this,index);});


BinaryTree.prototype.extractKeys=function(obj){
var i,
keys=[];

for(i in obj){
if(obj.hasOwnProperty(i)){
keys.push({
key:i,
val:obj[i]});}}




return keys;};


BinaryTree.prototype.data=function(val){
if(val!==undefined){
this._data=val;

if(this._hashFunc){this._hash=this._hashFunc(val);}
return this;}


return this._data;};







BinaryTree.prototype.push=function(val){
if(val!==undefined){
this._store.push(val);
return this;}


return false;};







BinaryTree.prototype.pull=function(val){
if(val!==undefined){
var index=this._store.indexOf(val);

if(index>-1){
this._store.splice(index,1);
return this;}}



return false;};









BinaryTree.prototype._compareFunc=function(a,b){

var i,
indexData,
result=0;

for(i=0;i<this._keys.length;i++){
indexData=this._keys[i];

if(indexData.val===1){
result=this.sortAsc(a[indexData.key],b[indexData.key]);}else 
if(indexData.val===-1){
result=this.sortDesc(a[indexData.key],b[indexData.key]);}


if(result!==0){
return result;}}



return result;};







BinaryTree.prototype._hashFunc=function(obj){













return obj[this._keys[0].key];};


BinaryTree.prototype.insert=function(data){
var result,
inserted,
failed,
i;

if(data instanceof Array){

inserted=[];
failed=[];

for(i=0;i<data.length;i++){
if(this.insert(data[i])){
inserted.push(data[i]);}else 
{
failed.push(data[i]);}}



return {
inserted:inserted,
failed:failed};}



if(!this._data){

this.data(data);

return true;}


result=this._compareFunc(this._data,data);

if(result===0){
this.push(data);


if(this._left){

this._left.insert(data);}else 
{

this._left=new BinaryTree(data,this._index,this._compareFunc,this._hashFunc);}


return true;}


if(result===-1){

if(this._right){

this._right.insert(data);}else 
{

this._right=new BinaryTree(data,this._index,this._compareFunc,this._hashFunc);}


return true;}


if(result===1){

if(this._left){

this._left.insert(data);}else 
{

this._left=new BinaryTree(data,this._index,this._compareFunc,this._hashFunc);}


return true;}


return false;};


BinaryTree.prototype.lookup=function(data,resultArr){
var result=this._compareFunc(this._data,data);

resultArr=resultArr||[];

if(result===0){
if(this._left){this._left.lookup(data,resultArr);}
resultArr.push(this._data);
if(this._right){this._right.lookup(data,resultArr);}}


if(result===-1){
if(this._right){this._right.lookup(data,resultArr);}}


if(result===1){
if(this._left){this._left.lookup(data,resultArr);}}


return resultArr;};


BinaryTree.prototype.inOrder=function(type,resultArr){
resultArr=resultArr||[];

if(this._left){
this._left.inOrder(type,resultArr);}


switch(type){
case 'hash':
resultArr.push(this._hash);
break;

case 'data':
resultArr.push(this._data);
break;

default:
resultArr.push({
key:this._data,
arr:this._store});

break;}


if(this._right){
this._right.inOrder(type,resultArr);}


return resultArr;};






















































BinaryTree.prototype.findRange=function(type,key,from,to,resultArr,pathResolver){
resultArr=resultArr||[];
pathResolver=pathResolver||new Path(key);

if(this._left){
this._left.findRange(type,key,from,to,resultArr,pathResolver);}



var pathVal=pathResolver.value(this._data),
fromResult=this.sortAsc(pathVal,from),
toResult=this.sortAsc(pathVal,to);

if((fromResult===0||fromResult===1)&&(toResult===0||toResult===-1)){


switch(type){
case 'hash':
resultArr.push(this._hash);
break;

case 'data':
resultArr.push(this._data);
break;

default:
resultArr.push({
key:this._data,
arr:this._store});

break;}}



if(this._right){
this._right.findRange(type,key,from,to,resultArr,pathResolver);}


return resultArr;};









































BinaryTree.prototype.match=function(query,options){


var pathSolver=new Path(),
indexKeyArr,
queryArr,
matchedKeys=[],
matchedKeyCount=0,
i;

indexKeyArr=pathSolver.parseArr(this._index,{
verbose:true});


queryArr=pathSolver.parseArr(query,{
ignore:/\$/,
verbose:true});




for(i=0;i<indexKeyArr.length;i++){
if(queryArr[i]===indexKeyArr[i]){
matchedKeyCount++;
matchedKeys.push(queryArr[i]);}}



return {
matchedKeys:matchedKeys,
totalKeyCount:queryArr.length,
score:matchedKeyCount};};





Shared.finishModule('BinaryTree');
module.exports=BinaryTree;
});
__d('forerunnerdb/js/lib/Crc.js',function(global, require, module, exports) {  "use strict";




var crcTable=function(){
var crcTable=[],
c,n,k;

for(n=0;n<256;n++){
c=n;

for(k=0;k<8;k++){
c=c&1?0xEDB88320^c>>>1:c>>>1;}


crcTable[n]=c;}


return crcTable;}();


module.exports=function(str){
var crc=0^-1,
i;

for(i=0;i<str.length;i++){
crc=crc>>>8^crcTable[(crc^str.charCodeAt(i))&0xFF];}


return (crc^-1)>>>0;};
});
__d('forerunnerdb/js/lib/ReactorIO.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js');


















var ReactorIO=function(reactorIn,reactorOut,reactorProcess){
if(reactorIn&&reactorOut&&reactorProcess){
this._reactorIn=reactorIn;
this._reactorOut=reactorOut;
this._chainHandler=reactorProcess;

if(!reactorIn.chain||!reactorOut.chainReceive){
throw 'ForerunnerDB.ReactorIO: ReactorIO requires passed in and out objects to implement the ChainReactor mixin!';}



reactorIn.chain(this);


this.chain(reactorOut);}else 
{
throw 'ForerunnerDB.ReactorIO: ReactorIO requires in, out and process arguments to instantiate!';}};



Shared.addModule('ReactorIO',ReactorIO);






ReactorIO.prototype.drop=function(){
if(!this.isDropped()){
this._state='dropped';


if(this._reactorIn){
this._reactorIn.unChain(this);}


if(this._reactorOut){
this.unChain(this._reactorOut);}


delete this._reactorIn;
delete this._reactorOut;
delete this._chainHandler;

this.emit('drop',this);}


return true;};







Shared.synthesize(ReactorIO.prototype,'state');

Shared.mixin(ReactorIO.prototype,'Mixin.Common');
Shared.mixin(ReactorIO.prototype,'Mixin.ChainReactor');
Shared.mixin(ReactorIO.prototype,'Mixin.Events');

Shared.finishModule('ReactorIO');
module.exports=ReactorIO;
});
__d('forerunnerdb/js/lib/Shim.IE8.js',function(global, require, module, exports) {  if(
!Array.prototype.filter){
Array.prototype.filter=function(fun){

if(this===void 0||this===null){
throw new TypeError();}


var t=Object(this);
var len=t.length>>>0;
if(typeof fun!=='function'){
throw new TypeError();}


var res=[];
var thisArg=arguments.length>=2?arguments[1]:void 0;
for(var i=0;i<len;i++){
if(i in t){
var val=t[i];






if(fun.call(thisArg,val,i,t)){
res.push(val);}}}




return res;};}



if(typeof Object.create!=='function'){
Object.create=function(){
var Temp=function(){};
return function(prototype){
if(arguments.length>1){
throw Error('Second argument not supported');}

if(typeof prototype!=='object'){
throw TypeError('Argument must be an object');}

Temp.prototype=prototype;
var result=new Temp();
Temp.prototype=null;
return result;};}();}






if(!Array.prototype.indexOf){
Array.prototype.indexOf=function(searchElement,fromIndex){
var k;



if(this===null){
throw new TypeError('"this" is null or not defined');}


var O=Object(this);




var len=O.length>>>0;


if(len===0){
return -1;}




var n=+fromIndex||0;

if(Math.abs(n)===Infinity){
n=0;}



if(n>=len){
return -1;}





k=Math.max(n>=0?n:len-Math.abs(n),0);


while(k<len){












if(k in O&&O[k]===searchElement){
return k;}

k++;}

return -1;};}



module.exports={};
});
__d('forerunnerdb/js/lib/NodePersist.js',function(global, require, module, exports) {  "use strict";


var Shared=require('forerunnerdb/js/lib/Shared.js'),
fs=require('react-native-fs/FS.common.js'),
async=require('async/lib/async.js'),
FdbCompress=require('forerunnerdb/js/lib/PersistCompress.js'),
FdbCrypto=require('forerunnerdb/js/lib/PersistCrypto.js'),
Db,
Collection,
CollectionDrop,
CollectionGroup,
CollectionInit,
DbInit,
DbDrop,
NodePersist,
Overload;

NodePersist=function(){
this.init.apply(this,arguments);};






NodePersist.prototype.init=function(db){
var self=this;


this.mode('file');

this._encodeSteps=[
function(){return self._encode.apply(self,arguments);}];

this._decodeSteps=[
function(){return self._decode.apply(self,arguments);}];};



Shared.addModule('NodePersist',NodePersist);
Shared.mixin(NodePersist.prototype,'Mixin.Common');
Shared.mixin(NodePersist.prototype,'Mixin.ChainReactor');

Db=Shared.modules.Db;
Collection=require('forerunnerdb/js/lib/Collection.js');
CollectionDrop=Collection.prototype.drop;
CollectionGroup=require('forerunnerdb/js/lib/CollectionGroup.js');
CollectionInit=Collection.prototype.init;
DbInit=Db.prototype.init;
DbDrop=Db.prototype.drop;
Overload=Shared.overload;







NodePersist.prototype.mode=function(type){
if(type!==undefined){
this._mode=type;
return this;}


return this._mode;};







NodePersist.prototype.decode=function(val,finished){
async.waterfall([function(callback){
if(callback){callback(false,val,{});}}].
concat(this._decodeSteps),finished);};







NodePersist.prototype.encode=function(val,finished){
async.waterfall([function(callback){
if(callback){callback(false,val,{});}}].
concat(this._encodeSteps),finished);};


Shared.synthesize(NodePersist.prototype,'encodeSteps');
Shared.synthesize(NodePersist.prototype,'decodeSteps');



















NodePersist.prototype.addStep=new Overload({
'object':function(obj){
this.$main.call(this,function objEncode(){obj.encode.apply(obj,arguments);},function objDecode(){obj.decode.apply(obj,arguments);},0);},


'function, function':function(encode,decode){
this.$main.call(this,encode,decode,0);},


'function, function, number':function(encode,decode,index){
this.$main.call(this,encode,decode,index);},


$main:function(encode,decode,index){
if(index===0||index===undefined){
this._encodeSteps.push(encode);
this._decodeSteps.unshift(decode);}else 
{


this._encodeSteps.splice(index,0,encode);
this._decodeSteps.splice(this._decodeSteps.length-index,0,decode);}}});




NodePersist.prototype.unwrap=function(dataStr){
var parts=dataStr.split('::fdb::'),
data;

switch(parts[0]){
case 'json':
data=this.jParse(parts[1]);
break;

case 'raw':
data=parts[1];
break;

default:
break;}};












NodePersist.prototype._decode=function(val,meta,finished){
var parts,
data;

if(val){
parts=val.split('::fdb::');

switch(parts[0]){
case 'json':
data=this.jParse(parts[1]);
break;

case 'raw':
data=parts[1];
break;

default:
break;}


if(data){
meta.foundData=true;
meta.rowCount=data.length;}else 
{
meta.foundData=false;}


if(finished){
finished(false,data,meta);}}else 

{
meta.foundData=false;
meta.rowCount=0;

if(finished){
finished(false,val,meta);}}};













NodePersist.prototype._encode=function(val,meta,finished){
var data=val;

if(typeof val==='object'){
val='json::fdb::'+this.jStringify(val);}else 
{
val='raw::fdb::'+val;}


if(data){
meta.foundData=true;
meta.rowCount=data.length;}else 
{
meta.foundData=false;}


if(finished){
finished(false,val,meta);}};












NodePersist.prototype.save=function(key,data,callback){
var self=this;

switch(this.mode()){
case 'file':
this.encode(data,function(err,data,tableStats){
self.saveDataFile(key,data,function(err,data){
if(!err){
if(callback){
callback(false,data,tableStats);}}else 

{
if(callback){callback(err);}}});});



break;

default:
if(callback){callback('No data handler.');}
break;}};










NodePersist.prototype.load=function(key,callback){
var self=this;

switch(this.mode()){
case 'file':
self.loadDataFile(key,function(err,val){
if(!err){
self.decode(val,callback);}else 
{
if(callback){callback(err);}}});


break;

default:
if(callback){callback('No data handler or unrecognised data type.');}
break;}};








NodePersist.prototype.drop=function(key,callback){
var self=this;

switch(this.mode()){
case 'file':
self.removeDataFile(key,function(err){
if(callback){callback(err);}});

break;

default:
if(callback){callback('No data handler or unrecognised data type.');}
break;}};




Shared.synthesize(NodePersist.prototype,'dataDir',function(val){
if(val!==undefined){













;}


return this.$super.call(this,val);});


NodePersist.prototype.saveDataFile=function(key,data,callback){
var path=fs.DocumentDirectoryPath+'/'+key+'.fdb';
fs.writeFile(path,data,'utf8').
then(function(success){
callback(false,data);}).

catch(function(err){
callback(err);});};



NodePersist.prototype.loadDataFile=function(key,callback){
var path=fs.DocumentDirectoryPath+'/'+key+'.fdb';
fs.readDir(fs.DocumentDirectoryPath).then(function(files){
for(var i=0;i<files.length;i++){
var file=files[i].name;
if(file==key+'.fdb'){
return fs.readFile(path,'utf8').
then(function(data){
callback(false,data);}).

catch(function(err){
callback(err);});}}



callback(false);});};



NodePersist.prototype.removeDataFile=function(key,callback){
fs.unlink(this.dataDir()+"/"+key+'.fdb',callback);};



Collection.prototype.drop=new Overload({



'':function(){
if(!this.isDropped()){
this.drop(true);}},







'function':function(callback){
if(!this.isDropped()){
this.drop(true,callback);}},







'boolean':function(removePersistent){
if(!this.isDropped()){

if(removePersistent){
if(this._name){
if(this._db){

this._db.persist.drop(this._db._name+'-'+this._name);
this._db.persist.drop(this._db._name+'-'+this._name+'-metaData');}}else 

{
throw 'ForerunnerDB.NodePersist: Cannot drop a collection\'s persistent storage when no name assigned to collection!';}}




CollectionDrop.apply(this);}},








'boolean, function':function(removePersistent,callback){
var self=this;

if(!this.isDropped()){

if(removePersistent){
if(this._name){
if(this._db){

this._db.persist.drop(this._db._name+'-'+this._name,function(){
self._db.persist.drop(self._db._name+'-'+self._name+'-metaData',callback);});}else 

{
if(callback){callback('Cannot drop a collection\'s persistent storage when the collection is not attached to a database!');}}}else 

{
if(callback){callback('Cannot drop a collection\'s persistent storage when no name assigned to collection!');}}}




CollectionDrop.apply(this,callback);}}});









Collection.prototype.save=function(callback){
var self=this,
processSave;

if(self._name){
if(self._db){
processSave=function(){

self._db.persist.save(self._db._name+'-'+self._name,self._data,function(err,data,tableStats){
if(!err){
self._db.persist.save(self._db._name+'-'+self._name+'-metaData',self.metaData(),function(err,data,metaStats){
if(callback){callback(err,data,tableStats,metaStats);}});}else 

{
if(callback){callback(err);}}});};





if(self.isProcessingQueue()){

self.on('queuesComplete',function(){
processSave();});}else 

{

processSave();}}else 

{
if(callback){callback('Cannot save a collection that is not attached to a database!');}}}else 

{
if(callback){callback('Cannot save a collection with no assigned name!');}}};








Collection.prototype.load=function(callback){
var self=this;

if(self._name){
if(self._db){

self._db.persist.load(self._db._name+'-'+self._name,function(err,data,tableStats){
if(!err){
if(data){
self.remove({});
self.insert(data);}




self._db.persist.load(self._db._name+'-'+self._name+'-metaData',function(err,data,metaStats){
if(!err){
if(data){
self.metaData(data);}}



if(callback){callback(err,tableStats,metaStats);}});}else 

{
if(callback){callback(err);}}});}else 


{
if(callback){callback('Cannot load a collection that is not attached to a database!');}}}else 

{
if(callback){callback('Cannot load a collection with no assigned name!');}}};




Db.prototype.init=function(){
DbInit.apply(this,arguments);
this.persist=new NodePersist(this);};







Db.prototype.load=function(callback){

var obj=this._collection,
keys=obj.keys(),
keyCount=keys.length,
loadCallback,
index;

loadCallback=function(err){
if(!err){
keyCount--;

if(keyCount===0){
if(callback){callback(false);}}}else 

{
if(callback){callback(err);}}};



for(index in obj){
if(obj.hasOwnProperty(index)){

obj[index].load(loadCallback);}}};









Db.prototype.save=function(callback){

var obj=this._collection,
keys=obj.keys(),
keyCount=keys.length,
saveCallback,
index;

saveCallback=function(err){
if(!err){
keyCount--;

if(keyCount===0){
if(callback){callback(false);}}}else 

{
if(callback){callback(err);}}};



for(index in obj){
if(obj.hasOwnProperty(index)){

obj[index].save(saveCallback);}}};




Shared.finishModule('NodePersist');

module.exports=NodePersist;
});
__d('react-native-fs/FS.common.js',function(global, require, module, exports) {  'use strict';




if(typeof self==='undefined'){
global.self=global;}


var RNFSManager=require('react-native/Libraries/react-native/react-native.js').NativeModules.RNFSManager;
var NativeAppEventEmitter=require('react-native/Libraries/react-native/react-native.js').NativeAppEventEmitter;
var DeviceEventEmitter=require('react-native/Libraries/react-native/react-native.js').DeviceEventEmitter;
var Promise=require('bluebird/js/browser/bluebird.js');
var base64=require('base-64/base64.js');
var utf8=require('utf8/utf8.js');

var _readDir=Promise.promisify(RNFSManager.readDir);
var _stat=Promise.promisify(RNFSManager.stat);
var _readFile=Promise.promisify(RNFSManager.readFile);
var _writeFile=Promise.promisify(RNFSManager.writeFile);
var _unlink=Promise.promisify(RNFSManager.unlink);
var _mkdir=Promise.promisify(RNFSManager.mkdir);
var _downloadFile=Promise.promisify(RNFSManager.downloadFile);
var _pathForBundle=Promise.promisify(RNFSManager.pathForBundle);

var convertError=function(err){
if(err.isOperational&&err.cause){
err=err.cause;}


var error=new Error(err.description||err.message);
error.code=err.code;
throw error;};


var NSFileTypeRegular=RNFSManager.NSFileTypeRegular;
var NSFileTypeDirectory=RNFSManager.NSFileTypeDirectory;

var jobId=0;

var getJobId=function(){
jobId+=1;
return jobId;};


var RNFS={

readDir:function(dirpath){
return _readDir(dirpath).
then(function(files){
return files.map(function(file){return {
name:file.name,
path:file.path,
size:file.size,
isFile:function(){return file.type===NSFileTypeRegular;},
isDirectory:function(){return file.type===NSFileTypeDirectory;}};});}).


catch(convertError);},



readdir:function(dirpath){
return RNFS.readDir(dirpath).
then(function(files){
return files.map(function(file){return file.name;});});},



stat:function(filepath){
return _stat(filepath).
then(function(result){
return {
'ctime':new Date(result.ctime*1000),
'mtime':new Date(result.mtime*1000),
'size':result.size,
'mode':result.mode,
isFile:function(){return result.type===NSFileTypeRegular;},
isDirectory:function(){return result.type===NSFileTypeDirectory;}};}).


catch(convertError);},


readFile:function(filepath,encoding){
if(!encoding)encoding='utf8';

return _readFile(filepath).
then(function(b64){
var contents;

if(encoding==='utf8'){
contents=utf8.decode(base64.decode(b64));}else 
if(encoding==='ascii'){
contents=base64.decode(b64);}else 
if(encoding==='base64'){
contents=b64;}else 
{
throw new Error('Invalid encoding type "'+encoding+'"');}


return contents;}).

catch(convertError);},


writeFile:function(filepath,contents,encoding,options){
var b64;

if(!encoding)encoding='utf8';

if(encoding==='utf8'){
b64=base64.encode(utf8.encode(contents));}else 
if(encoding==='ascii'){
b64=base64.encode(contents);}else 
if(encoding==='base64'){
b64=contents;}else 
{
throw new Error('Invalid encoding type "'+encoding+'"');}


return _writeFile(filepath,b64,options).
catch(convertError);},


pathForBundle:function(bundleName){
return _pathForBundle(bundleName);},


unlink:function(filepath){
return _unlink(filepath).
catch(convertError);},


mkdir:function(filepath,excludeFromBackup){
excludeFromBackup=!!excludeFromBackup;
return _mkdir(filepath,excludeFromBackup).
catch(convertError);},


downloadFile:function(fromUrl,toFile,begin,progress){
var jobId=getJobId();
var subscriptionIos,subscriptionAndroid;

if(!begin)begin=function(info){
console.log('Download begun:',info);};


if(begin){

if(NativeAppEventEmitter.addListener)
subscriptionIos=NativeAppEventEmitter.addListener('DownloadBegin-'+jobId,begin);
if(DeviceEventEmitter.addListener)
subscriptionAndroid=DeviceEventEmitter.addListener('DownloadBegin-'+jobId,begin);}


if(progress){
if(NativeAppEventEmitter.addListener)
subscriptionIos=NativeAppEventEmitter.addListener('DownloadProgress-'+jobId,progress);
if(DeviceEventEmitter.addListener)
subscriptionAndroid=DeviceEventEmitter.addListener('DownloadProgress-'+jobId,progress);}


return _downloadFile(fromUrl,toFile,jobId).
then(function(res){
if(subscriptionIos)subscriptionIos.remove();
if(subscriptionAndroid)subscriptionAndroid.remove();
return res;}).

catch(convertError);},


stopDownload:function(jobId){
RNFSManager.stopDownload(jobId);},


MainBundlePath:RNFSManager.MainBundlePath,
CachesDirectoryPath:RNFSManager.NSCachesDirectoryPath,
DocumentDirectoryPath:RNFSManager.NSDocumentDirectoryPath,
LibraryDirectoryPath:RNFSManager.NSLibraryDirectoryPath};


module.exports=RNFS;
});
__d('bluebird/js/browser/bluebird.js',function(global, require, module, exports) {  /* @preserve
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013-2015 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */




!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else {var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Promise=e();}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_=="function"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f;}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e);},l,l.exports,e,t,n,r);}return n[o].exports;}var i=typeof _dereq_=="function"&&_dereq_;for(var o=0;o<r.length;o++){s(r[o]);}return s;}({1:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise){
var SomePromiseArray=Promise._SomePromiseArray;
function any(promises){
var ret=new SomePromiseArray(promises);
var promise=ret.promise();
ret.setHowMany(1);
ret.setUnwrap();
ret.init();
return promise;}


Promise.any=function(promises){
return any(promises);};


Promise.prototype.any=function(){
return any(this);};};},




{}],2:[function(_dereq_,module,exports){
"use strict";
var firstLineError;
try{throw new Error();}catch(e){firstLineError=e;}
var schedule=_dereq_("./schedule.js");
var Queue=_dereq_("./queue.js");
var util=_dereq_("./util.js");

function Async(){
this._isTickUsed=false;
this._lateQueue=new Queue(16);
this._normalQueue=new Queue(16);
this._trampolineEnabled=true;
var self=this;
this.drainQueues=function(){
self._drainQueues();};

this._schedule=
schedule.isStatic?schedule(this.drainQueues):schedule;}


Async.prototype.disableTrampolineIfNecessary=function(){
if(util.hasDevTools){
this._trampolineEnabled=false;}};



Async.prototype.enableTrampoline=function(){
if(!this._trampolineEnabled){
this._trampolineEnabled=true;
this._schedule=function(fn){
setTimeout(fn,0);};}};




Async.prototype.haveItemsQueued=function(){
return this._normalQueue.length()>0;};


Async.prototype.throwLater=function(fn,arg){
if(arguments.length===1){
arg=fn;
fn=function(){throw arg;};}

if(typeof setTimeout!=="undefined"){
setTimeout(function(){
fn(arg);},
0);}else 
try{
this._schedule(function(){
fn(arg);});}

catch(e){
throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/m3OTXk\u000a");}};



function AsyncInvokeLater(fn,receiver,arg){
this._lateQueue.push(fn,receiver,arg);
this._queueTick();}


function AsyncInvoke(fn,receiver,arg){
this._normalQueue.push(fn,receiver,arg);
this._queueTick();}


function AsyncSettlePromises(promise){
this._normalQueue._pushOne(promise);
this._queueTick();}


if(!util.hasDevTools){
Async.prototype.invokeLater=AsyncInvokeLater;
Async.prototype.invoke=AsyncInvoke;
Async.prototype.settlePromises=AsyncSettlePromises;}else 
{
if(schedule.isStatic){
schedule=function(fn){setTimeout(fn,0);};}

Async.prototype.invokeLater=function(fn,receiver,arg){
if(this._trampolineEnabled){
AsyncInvokeLater.call(this,fn,receiver,arg);}else 
{
this._schedule(function(){
setTimeout(function(){
fn.call(receiver,arg);},
100);});}};




Async.prototype.invoke=function(fn,receiver,arg){
if(this._trampolineEnabled){
AsyncInvoke.call(this,fn,receiver,arg);}else 
{
this._schedule(function(){
fn.call(receiver,arg);});}};




Async.prototype.settlePromises=function(promise){
if(this._trampolineEnabled){
AsyncSettlePromises.call(this,promise);}else 
{
this._schedule(function(){
promise._settlePromises();});}};}





Async.prototype.invokeFirst=function(fn,receiver,arg){
this._normalQueue.unshift(fn,receiver,arg);
this._queueTick();};


Async.prototype._drainQueue=function(queue){
while(queue.length()>0){
var fn=queue.shift();
if(typeof fn!=="function"){
fn._settlePromises();
continue;}

var receiver=queue.shift();
var arg=queue.shift();
fn.call(receiver,arg);}};



Async.prototype._drainQueues=function(){
this._drainQueue(this._normalQueue);
this._reset();
this._drainQueue(this._lateQueue);};


Async.prototype._queueTick=function(){
if(!this._isTickUsed){
this._isTickUsed=true;
this._schedule(this.drainQueues);}};



Async.prototype._reset=function(){
this._isTickUsed=false;};


module.exports=new Async();
module.exports.firstLineError=firstLineError;},

{"./queue.js":28,"./schedule.js":31,"./util.js":38}],3:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL,tryConvertToPromise){
var rejectThis=function(_,e){
this._reject(e);};


var targetRejected=function(e,context){
context.promiseRejectionQueued=true;
context.bindingPromise._then(rejectThis,rejectThis,null,this,e);};


var bindingResolved=function(thisArg,context){
if(this._isPending()){
this._resolveCallback(context.target);}};



var bindingRejected=function(e,context){
if(!context.promiseRejectionQueued)this._reject(e);};


Promise.prototype.bind=function(thisArg){
var maybePromise=tryConvertToPromise(thisArg);
var ret=new Promise(INTERNAL);
ret._propagateFrom(this,1);
var target=this._target();

ret._setBoundTo(maybePromise);
if(maybePromise instanceof Promise){
var context={
promiseRejectionQueued:false,
promise:ret,
target:target,
bindingPromise:maybePromise};

target._then(INTERNAL,targetRejected,ret._progress,ret,context);
maybePromise._then(
bindingResolved,bindingRejected,ret._progress,ret,context);}else 
{
ret._resolveCallback(target);}

return ret;};


Promise.prototype._setBoundTo=function(obj){
if(obj!==undefined){
this._bitField=this._bitField|131072;
this._boundTo=obj;}else 
{
this._bitField=this._bitField&~131072;}};



Promise.prototype._isBound=function(){
return (this._bitField&131072)===131072;};


Promise.bind=function(thisArg,value){
var maybePromise=tryConvertToPromise(thisArg);
var ret=new Promise(INTERNAL);

ret._setBoundTo(maybePromise);
if(maybePromise instanceof Promise){
maybePromise._then(function(){
ret._resolveCallback(value);},
ret._reject,ret._progress,ret,null);}else 
{
ret._resolveCallback(value);}

return ret;};};},



{}],4:[function(_dereq_,module,exports){
"use strict";
var old;
if(typeof Promise!=="undefined")old=Promise;
function noConflict(){
try{if(Promise===bluebird)Promise=old;}
catch(e){}
return bluebird;}

var bluebird=_dereq_("./promise.js")();
bluebird.noConflict=noConflict;
module.exports=bluebird;},

{"./promise.js":23}],5:[function(_dereq_,module,exports){
"use strict";
var cr=Object.create;
if(cr){
var callerCache=cr(null);
var getterCache=cr(null);
callerCache[" size"]=getterCache[" size"]=0;}


module.exports=function(Promise){
var util=_dereq_("./util.js");
var canEvaluate=util.canEvaluate;
var isIdentifier=util.isIdentifier;

var getMethodCaller;
var getGetter;
if(!true){
var makeMethodCaller=function(methodName){
return new Function("ensureMethod","                                    \n\
        return function(obj) {                                               \n\
            'use strict'                                                     \n\
            var len = this.length;                                           \n\
            ensureMethod(obj, 'methodName');                                 \n\
            switch(len) {                                                    \n\
                case 1: return obj.methodName(this[0]);                      \n\
                case 2: return obj.methodName(this[0], this[1]);             \n\
                case 3: return obj.methodName(this[0], this[1], this[2]);    \n\
                case 0: return obj.methodName();                             \n\
                default:                                                     \n\
                    return obj.methodName.apply(obj, this);                  \n\
            }                                                                \n\
        };                                                                   \n\
        ".replace(/methodName/g,methodName))(ensureMethod);};


var makeGetter=function(propertyName){
return new Function("obj","                                             \n\
        'use strict';                                                        \n\
        return obj.propertyName;                                             \n\
        ".replace("propertyName",propertyName));};


var getCompiled=function(name,compiler,cache){
var ret=cache[name];
if(typeof ret!=="function"){
if(!isIdentifier(name)){
return null;}

ret=compiler(name);
cache[name]=ret;
cache[" size"]++;
if(cache[" size"]>512){
var keys=Object.keys(cache);
for(var i=0;i<256;++i){delete cache[keys[i]];}
cache[" size"]=keys.length-256;}}


return ret;};


getMethodCaller=function(name){
return getCompiled(name,makeMethodCaller,callerCache);};


getGetter=function(name){
return getCompiled(name,makeGetter,getterCache);};}



function ensureMethod(obj,methodName){
var fn;
if(obj!=null)fn=obj[methodName];
if(typeof fn!=="function"){
var message="Object "+util.classString(obj)+" has no method '"+
util.toString(methodName)+"'";
throw new Promise.TypeError(message);}

return fn;}


function caller(obj){
var methodName=this.pop();
var fn=ensureMethod(obj,methodName);
return fn.apply(obj,this);}

Promise.prototype.call=function(methodName){
var $_len=arguments.length;var args=new Array($_len-1);for(var $_i=1;$_i<$_len;++$_i){args[$_i-1]=arguments[$_i];}
if(!true){
if(canEvaluate){
var maybeCaller=getMethodCaller(methodName);
if(maybeCaller!==null){
return this._then(
maybeCaller,undefined,undefined,args,undefined);}}}



args.push(methodName);
return this._then(caller,undefined,undefined,args,undefined);};


function namedGetter(obj){
return obj[this];}

function indexedGetter(obj){
var index=+this;
if(index<0)index=Math.max(0,index+obj.length);
return obj[index];}

Promise.prototype.get=function(propertyName){
var isIndex=typeof propertyName==="number";
var getter;
if(!isIndex){
if(canEvaluate){
var maybeGetter=getGetter(propertyName);
getter=maybeGetter!==null?maybeGetter:namedGetter;}else 
{
getter=namedGetter;}}else 

{
getter=indexedGetter;}

return this._then(getter,undefined,undefined,propertyName,undefined);};};},



{"./util.js":38}],6:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise){
var errors=_dereq_("./errors.js");
var async=_dereq_("./async.js");
var CancellationError=errors.CancellationError;

Promise.prototype._cancel=function(reason){
if(!this.isCancellable())return this;
var parent;
var promiseToReject=this;
while((parent=promiseToReject._cancellationParent)!==undefined&&
parent.isCancellable()){
promiseToReject=parent;}

this._unsetCancellable();
promiseToReject._target()._rejectCallback(reason,false,true);};


Promise.prototype.cancel=function(reason){
if(!this.isCancellable())return this;
if(reason===undefined)reason=new CancellationError();
async.invokeLater(this._cancel,this,reason);
return this;};


Promise.prototype.cancellable=function(){
if(this._cancellable())return this;
async.enableTrampoline();
this._setCancellable();
this._cancellationParent=undefined;
return this;};


Promise.prototype.uncancellable=function(){
var ret=this.then();
ret._unsetCancellable();
return ret;};


Promise.prototype.fork=function(didFulfill,didReject,didProgress){
var ret=this._then(didFulfill,didReject,didProgress,
undefined,undefined);

ret._setCancellable();
ret._cancellationParent=undefined;
return ret;};};},



{"./async.js":2,"./errors.js":13}],7:[function(_dereq_,module,exports){
"use strict";
module.exports=function(){
var async=_dereq_("./async.js");
var util=_dereq_("./util.js");
var bluebirdFramePattern=
/[\\\/]bluebird[\\\/]js[\\\/](main|debug|zalgo|instrumented)/;
var stackFramePattern=null;
var formatStack=null;
var indentStackFrames=false;
var warn;

function CapturedTrace(parent){
this._parent=parent;
var length=this._length=1+(parent===undefined?0:parent._length);
captureStackTrace(this,CapturedTrace);
if(length>32)this.uncycle();}

util.inherits(CapturedTrace,Error);

CapturedTrace.prototype.uncycle=function(){
var length=this._length;
if(length<2)return;
var nodes=[];
var stackToIndex={};

for(var i=0,node=this;node!==undefined;++i){
nodes.push(node);
node=node._parent;}

length=this._length=i;
for(var i=length-1;i>=0;--i){
var stack=nodes[i].stack;
if(stackToIndex[stack]===undefined){
stackToIndex[stack]=i;}}


for(var i=0;i<length;++i){
var currentStack=nodes[i].stack;
var index=stackToIndex[currentStack];
if(index!==undefined&&index!==i){
if(index>0){
nodes[index-1]._parent=undefined;
nodes[index-1]._length=1;}

nodes[i]._parent=undefined;
nodes[i]._length=1;
var cycleEdgeNode=i>0?nodes[i-1]:this;

if(index<length-1){
cycleEdgeNode._parent=nodes[index+1];
cycleEdgeNode._parent.uncycle();
cycleEdgeNode._length=
cycleEdgeNode._parent._length+1;}else 
{
cycleEdgeNode._parent=undefined;
cycleEdgeNode._length=1;}

var currentChildLength=cycleEdgeNode._length+1;
for(var j=i-2;j>=0;--j){
nodes[j]._length=currentChildLength;
currentChildLength++;}

return;}}};




CapturedTrace.prototype.parent=function(){
return this._parent;};


CapturedTrace.prototype.hasParent=function(){
return this._parent!==undefined;};


CapturedTrace.prototype.attachExtraTrace=function(error){
if(error.__stackCleaned__)return;
this.uncycle();
var parsed=CapturedTrace.parseStackAndMessage(error);
var message=parsed.message;
var stacks=[parsed.stack];

var trace=this;
while(trace!==undefined){
stacks.push(cleanStack(trace.stack.split("\n")));
trace=trace._parent;}

removeCommonRoots(stacks);
removeDuplicateOrEmptyJumps(stacks);
util.notEnumerableProp(error,"stack",reconstructStack(message,stacks));
util.notEnumerableProp(error,"__stackCleaned__",true);};


function reconstructStack(message,stacks){
for(var i=0;i<stacks.length-1;++i){
stacks[i].push("From previous event:");
stacks[i]=stacks[i].join("\n");}

if(i<stacks.length){
stacks[i]=stacks[i].join("\n");}

return message+"\n"+stacks.join("\n");}


function removeDuplicateOrEmptyJumps(stacks){
for(var i=0;i<stacks.length;++i){
if(stacks[i].length===0||
i+1<stacks.length&&stacks[i][0]===stacks[i+1][0]){
stacks.splice(i,1);
i--;}}}




function removeCommonRoots(stacks){
var current=stacks[0];
for(var i=1;i<stacks.length;++i){
var prev=stacks[i];
var currentLastIndex=current.length-1;
var currentLastLine=current[currentLastIndex];
var commonRootMeetPoint=-1;

for(var j=prev.length-1;j>=0;--j){
if(prev[j]===currentLastLine){
commonRootMeetPoint=j;
break;}}



for(var j=commonRootMeetPoint;j>=0;--j){
var line=prev[j];
if(current[currentLastIndex]===line){
current.pop();
currentLastIndex--;}else 
{
break;}}


current=prev;}}



function cleanStack(stack){
var ret=[];
for(var i=0;i<stack.length;++i){
var line=stack[i];
var isTraceLine=stackFramePattern.test(line)||
"    (No stack trace)"===line;
var isInternalFrame=isTraceLine&&shouldIgnore(line);
if(isTraceLine&&!isInternalFrame){
if(indentStackFrames&&line.charAt(0)!==" "){
line="    "+line;}

ret.push(line);}}


return ret;}


function stackFramesAsArray(error){
var stack=error.stack.replace(/\s+$/g,"").split("\n");
for(var i=0;i<stack.length;++i){
var line=stack[i];
if("    (No stack trace)"===line||stackFramePattern.test(line)){
break;}}


if(i>0){
stack=stack.slice(i);}

return stack;}


CapturedTrace.parseStackAndMessage=function(error){
var stack=error.stack;
var message=error.toString();
stack=typeof stack==="string"&&stack.length>0?
stackFramesAsArray(error):["    (No stack trace)"];
return {
message:message,
stack:cleanStack(stack)};};



CapturedTrace.formatAndLogError=function(error,title){
if(typeof console!=="undefined"){
var message;
if(typeof error==="object"||typeof error==="function"){
var stack=error.stack;
message=title+formatStack(stack,error);}else 
{
message=title+String(error);}

if(typeof warn==="function"){
warn(message);}else 
if(typeof console.log==="function"||
typeof console.log==="object"){
console.log(message);}}};




CapturedTrace.unhandledRejection=function(reason){
CapturedTrace.formatAndLogError(reason,"^--- With additional stack trace: ");};


CapturedTrace.isSupported=function(){
return typeof captureStackTrace==="function";};


CapturedTrace.fireRejectionEvent=
function(name,localHandler,reason,promise){
var localEventFired=false;
try{
if(typeof localHandler==="function"){
localEventFired=true;
if(name==="rejectionHandled"){
localHandler(promise);}else 
{
localHandler(reason,promise);}}}


catch(e){
async.throwLater(e);}


var globalEventFired=false;
try{
globalEventFired=fireGlobalEvent(name,reason,promise);}
catch(e){
globalEventFired=true;
async.throwLater(e);}


var domEventFired=false;
if(fireDomEvent){
try{
domEventFired=fireDomEvent(name.toLowerCase(),{
reason:reason,
promise:promise});}

catch(e){
domEventFired=true;
async.throwLater(e);}}



if(!globalEventFired&&!localEventFired&&!domEventFired&&
name==="unhandledRejection"){
CapturedTrace.formatAndLogError(reason,"Unhandled rejection ");}};



function formatNonError(obj){
var str;
if(typeof obj==="function"){
str="[function "+(
obj.name||"anonymous")+
"]";}else 
{
str=obj.toString();
var ruselessToString=/\[object [a-zA-Z0-9$_]+\]/;
if(ruselessToString.test(str)){
try{
var newStr=JSON.stringify(obj);
str=newStr;}

catch(e){}}



if(str.length===0){
str="(empty array)";}}


return "(<"+snip(str)+">, no stack trace)";}


function snip(str){
var maxChars=41;
if(str.length<maxChars){
return str;}

return str.substr(0,maxChars-3)+"...";}


var shouldIgnore=function(){return false;};
var parseLineInfoRegex=/[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
function parseLineInfo(line){
var matches=line.match(parseLineInfoRegex);
if(matches){
return {
fileName:matches[1],
line:parseInt(matches[2],10)};}}



CapturedTrace.setBounds=function(firstLineError,lastLineError){
if(!CapturedTrace.isSupported())return;
var firstStackLines=firstLineError.stack.split("\n");
var lastStackLines=lastLineError.stack.split("\n");
var firstIndex=-1;
var lastIndex=-1;
var firstFileName;
var lastFileName;
for(var i=0;i<firstStackLines.length;++i){
var result=parseLineInfo(firstStackLines[i]);
if(result){
firstFileName=result.fileName;
firstIndex=result.line;
break;}}


for(var i=0;i<lastStackLines.length;++i){
var result=parseLineInfo(lastStackLines[i]);
if(result){
lastFileName=result.fileName;
lastIndex=result.line;
break;}}


if(firstIndex<0||lastIndex<0||!firstFileName||!lastFileName||
firstFileName!==lastFileName||firstIndex>=lastIndex){
return;}


shouldIgnore=function(line){
if(bluebirdFramePattern.test(line))return true;
var info=parseLineInfo(line);
if(info){
if(info.fileName===firstFileName&&
firstIndex<=info.line&&info.line<=lastIndex){
return true;}}


return false;};};



var captureStackTrace=function stackDetection(){
var v8stackFramePattern=/^\s*at\s*/;
var v8stackFormatter=function(stack,error){
if(typeof stack==="string")return stack;

if(error.name!==undefined&&
error.message!==undefined){
return error.toString();}

return formatNonError(error);};


if(typeof Error.stackTraceLimit==="number"&&
typeof Error.captureStackTrace==="function"){
Error.stackTraceLimit=Error.stackTraceLimit+6;
stackFramePattern=v8stackFramePattern;
formatStack=v8stackFormatter;
var captureStackTrace=Error.captureStackTrace;

shouldIgnore=function(line){
return bluebirdFramePattern.test(line);};

return function(receiver,ignoreUntil){
Error.stackTraceLimit=Error.stackTraceLimit+6;
captureStackTrace(receiver,ignoreUntil);
Error.stackTraceLimit=Error.stackTraceLimit-6;};}


var err=new Error();

if(typeof err.stack==="string"&&
err.stack.split("\n")[0].indexOf("stackDetection@")>=0){
stackFramePattern=/@/;
formatStack=v8stackFormatter;
indentStackFrames=true;
return function captureStackTrace(o){
o.stack=new Error().stack;};}



var hasStackAfterThrow;
try{throw new Error();}
catch(e){
hasStackAfterThrow="stack" in e;}

if(!("stack" in err)&&hasStackAfterThrow&&
typeof Error.stackTraceLimit==="number"){
stackFramePattern=v8stackFramePattern;
formatStack=v8stackFormatter;
return function captureStackTrace(o){
Error.stackTraceLimit=Error.stackTraceLimit+6;
try{throw new Error();}
catch(e){o.stack=e.stack;}
Error.stackTraceLimit=Error.stackTraceLimit-6;};}



formatStack=function(stack,error){
if(typeof stack==="string")return stack;

if((typeof error==="object"||
typeof error==="function")&&
error.name!==undefined&&
error.message!==undefined){
return error.toString();}

return formatNonError(error);};


return null;}(

[]);

var fireDomEvent;
var fireGlobalEvent=function(){
if(util.isNode){
return function(name,reason,promise){
if(name==="rejectionHandled"){
return process.emit(name,promise);}else 
{
return process.emit(name,reason,promise);}};}else 


{
var customEventWorks=false;
var anyEventWorks=true;
try{
var ev=new self.CustomEvent("test");
customEventWorks=ev instanceof CustomEvent;}
catch(e){}
if(!customEventWorks){
try{
var event=document.createEvent("CustomEvent");
event.initCustomEvent("testingtheevent",false,true,{});
self.dispatchEvent(event);}
catch(e){
anyEventWorks=false;}}


if(anyEventWorks){
fireDomEvent=function(type,detail){
var event;
if(customEventWorks){
event=new self.CustomEvent(type,{
detail:detail,
bubbles:false,
cancelable:true});}else 

if(self.dispatchEvent){
event=document.createEvent("CustomEvent");
event.initCustomEvent(type,false,true,detail);}


return event?!self.dispatchEvent(event):false;};}



var toWindowMethodNameMap={};
toWindowMethodNameMap["unhandledRejection"]=("on"+
"unhandledRejection").toLowerCase();
toWindowMethodNameMap["rejectionHandled"]=("on"+
"rejectionHandled").toLowerCase();

return function(name,reason,promise){
var methodName=toWindowMethodNameMap[name];
var method=self[methodName];
if(!method)return false;
if(name==="rejectionHandled"){
method.call(self,promise);}else 
{
method.call(self,reason,promise);}

return true;};}}();




if(typeof console!=="undefined"&&typeof console.warn!=="undefined"){
warn=function(message){
console.warn(message);};

if(util.isNode&&process.stderr.isTTY){
warn=function(message){
process.stderr.write("\u001b[31m"+message+"\u001b[39m\n");};}else 

if(!util.isNode&&typeof new Error().stack==="string"){
warn=function(message){
console.warn("%c"+message,"color: red");};}}




return CapturedTrace;};},


{"./async.js":2,"./util.js":38}],8:[function(_dereq_,module,exports){
"use strict";
module.exports=function(NEXT_FILTER){
var util=_dereq_("./util.js");
var errors=_dereq_("./errors.js");
var tryCatch=util.tryCatch;
var errorObj=util.errorObj;
var keys=_dereq_("./es5.js").keys;
var TypeError=errors.TypeError;

function CatchFilter(instances,callback,promise){
this._instances=instances;
this._callback=callback;
this._promise=promise;}


function safePredicate(predicate,e){
var safeObject={};
var retfilter=tryCatch(predicate).call(safeObject,e);

if(retfilter===errorObj)return retfilter;

var safeKeys=keys(safeObject);
if(safeKeys.length){
errorObj.e=new TypeError("Catch filter must inherit from Error or be a simple predicate function\u000a\u000a    See http://goo.gl/o84o68\u000a");
return errorObj;}

return retfilter;}


CatchFilter.prototype.doFilter=function(e){
var cb=this._callback;
var promise=this._promise;
var boundTo=promise._boundValue();
for(var i=0,len=this._instances.length;i<len;++i){
var item=this._instances[i];
var itemIsErrorType=item===Error||
item!=null&&item.prototype instanceof Error;

if(itemIsErrorType&&e instanceof item){
var ret=tryCatch(cb).call(boundTo,e);
if(ret===errorObj){
NEXT_FILTER.e=ret.e;
return NEXT_FILTER;}

return ret;}else 
if(typeof item==="function"&&!itemIsErrorType){
var shouldHandle=safePredicate(item,e);
if(shouldHandle===errorObj){
e=errorObj.e;
break;}else 
if(shouldHandle){
var ret=tryCatch(cb).call(boundTo,e);
if(ret===errorObj){
NEXT_FILTER.e=ret.e;
return NEXT_FILTER;}

return ret;}}}



NEXT_FILTER.e=e;
return NEXT_FILTER;};


return CatchFilter;};},


{"./errors.js":13,"./es5.js":14,"./util.js":38}],9:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,CapturedTrace,isDebugging){
var contextStack=[];
function Context(){
this._trace=new CapturedTrace(peekContext());}

Context.prototype._pushContext=function(){
if(!isDebugging())return;
if(this._trace!==undefined){
contextStack.push(this._trace);}};



Context.prototype._popContext=function(){
if(!isDebugging())return;
if(this._trace!==undefined){
contextStack.pop();}};



function createContext(){
if(isDebugging())return new Context();}


function peekContext(){
var lastIndex=contextStack.length-1;
if(lastIndex>=0){
return contextStack[lastIndex];}

return undefined;}


Promise.prototype._peekContext=peekContext;
Promise.prototype._pushContext=Context.prototype._pushContext;
Promise.prototype._popContext=Context.prototype._popContext;

return createContext;};},


{}],10:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,CapturedTrace){
var getDomain=Promise._getDomain;
var async=_dereq_("./async.js");
var Warning=_dereq_("./errors.js").Warning;
var util=_dereq_("./util.js");
var canAttachTrace=util.canAttachTrace;
var unhandledRejectionHandled;
var possiblyUnhandledRejection;
var debugging=false||util.isNode&&(
!!process.env["BLUEBIRD_DEBUG"]||
process.env["NODE_ENV"]==="development");

if(util.isNode&&process.env["BLUEBIRD_DEBUG"]==0)debugging=false;

if(debugging){
async.disableTrampolineIfNecessary();}


Promise.prototype._ignoreRejections=function(){
this._unsetRejectionIsUnhandled();
this._bitField=this._bitField|16777216;};


Promise.prototype._ensurePossibleRejectionHandled=function(){
if((this._bitField&16777216)!==0)return;
this._setRejectionIsUnhandled();
async.invokeLater(this._notifyUnhandledRejection,this,undefined);};


Promise.prototype._notifyUnhandledRejectionIsHandled=function(){
CapturedTrace.fireRejectionEvent("rejectionHandled",
unhandledRejectionHandled,undefined,this);};


Promise.prototype._notifyUnhandledRejection=function(){
if(this._isRejectionUnhandled()){
var reason=this._getCarriedStackTrace()||this._settledValue;
this._setUnhandledRejectionIsNotified();
CapturedTrace.fireRejectionEvent("unhandledRejection",
possiblyUnhandledRejection,reason,this);}};



Promise.prototype._setUnhandledRejectionIsNotified=function(){
this._bitField=this._bitField|524288;};


Promise.prototype._unsetUnhandledRejectionIsNotified=function(){
this._bitField=this._bitField&~524288;};


Promise.prototype._isUnhandledRejectionNotified=function(){
return (this._bitField&524288)>0;};


Promise.prototype._setRejectionIsUnhandled=function(){
this._bitField=this._bitField|2097152;};


Promise.prototype._unsetRejectionIsUnhandled=function(){
this._bitField=this._bitField&~2097152;
if(this._isUnhandledRejectionNotified()){
this._unsetUnhandledRejectionIsNotified();
this._notifyUnhandledRejectionIsHandled();}};



Promise.prototype._isRejectionUnhandled=function(){
return (this._bitField&2097152)>0;};


Promise.prototype._setCarriedStackTrace=function(capturedTrace){
this._bitField=this._bitField|1048576;
this._fulfillmentHandler0=capturedTrace;};


Promise.prototype._isCarryingStackTrace=function(){
return (this._bitField&1048576)>0;};


Promise.prototype._getCarriedStackTrace=function(){
return this._isCarryingStackTrace()?
this._fulfillmentHandler0:
undefined;};


Promise.prototype._captureStackTrace=function(){
if(debugging){
this._trace=new CapturedTrace(this._peekContext());}

return this;};


Promise.prototype._attachExtraTrace=function(error,ignoreSelf){
if(debugging&&canAttachTrace(error)){
var trace=this._trace;
if(trace!==undefined){
if(ignoreSelf)trace=trace._parent;}

if(trace!==undefined){
trace.attachExtraTrace(error);}else 
if(!error.__stackCleaned__){
var parsed=CapturedTrace.parseStackAndMessage(error);
util.notEnumerableProp(error,"stack",
parsed.message+"\n"+parsed.stack.join("\n"));
util.notEnumerableProp(error,"__stackCleaned__",true);}}};




Promise.prototype._warn=function(message){
var warning=new Warning(message);
var ctx=this._peekContext();
if(ctx){
ctx.attachExtraTrace(warning);}else 
{
var parsed=CapturedTrace.parseStackAndMessage(warning);
warning.stack=parsed.message+"\n"+parsed.stack.join("\n");}

CapturedTrace.formatAndLogError(warning,"");};


Promise.onPossiblyUnhandledRejection=function(fn){
var domain=getDomain();
possiblyUnhandledRejection=
typeof fn==="function"?domain===null?fn:domain.bind(fn):
undefined;};


Promise.onUnhandledRejectionHandled=function(fn){
var domain=getDomain();
unhandledRejectionHandled=
typeof fn==="function"?domain===null?fn:domain.bind(fn):
undefined;};


Promise.longStackTraces=function(){
if(async.haveItemsQueued()&&
debugging===false)
{
throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/DT1qyG\u000a");}

debugging=CapturedTrace.isSupported();
if(debugging){
async.disableTrampolineIfNecessary();}};



Promise.hasLongStackTraces=function(){
return debugging&&CapturedTrace.isSupported();};


if(!CapturedTrace.isSupported()){
Promise.longStackTraces=function(){};
debugging=false;}


return function(){
return debugging;};};},



{"./async.js":2,"./errors.js":13,"./util.js":38}],11:[function(_dereq_,module,exports){
"use strict";
var util=_dereq_("./util.js");
var isPrimitive=util.isPrimitive;

module.exports=function(Promise){
var returner=function(){
return this;};

var thrower=function(){
throw this;};

var returnUndefined=function(){};
var throwUndefined=function(){
throw undefined;};


var wrapper=function(value,action){
if(action===1){
return function(){
throw value;};}else 

if(action===2){
return function(){
return value;};}};





Promise.prototype["return"]=
Promise.prototype.thenReturn=function(value){
if(value===undefined)return this.then(returnUndefined);

if(isPrimitive(value)){
return this._then(
wrapper(value,2),
undefined,
undefined,
undefined,
undefined);}else 

if(value instanceof Promise){
value._ignoreRejections();}

return this._then(returner,undefined,undefined,value,undefined);};


Promise.prototype["throw"]=
Promise.prototype.thenThrow=function(reason){
if(reason===undefined)return this.then(throwUndefined);

if(isPrimitive(reason)){
return this._then(
wrapper(reason,1),
undefined,
undefined,
undefined,
undefined);}


return this._then(thrower,undefined,undefined,reason,undefined);};};},



{"./util.js":38}],12:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL){
var PromiseReduce=Promise.reduce;

Promise.prototype.each=function(fn){
return PromiseReduce(this,fn,null,INTERNAL);};


Promise.each=function(promises,fn){
return PromiseReduce(promises,fn,null,INTERNAL);};};},



{}],13:[function(_dereq_,module,exports){
"use strict";
var es5=_dereq_("./es5.js");
var Objectfreeze=es5.freeze;
var util=_dereq_("./util.js");
var inherits=util.inherits;
var notEnumerableProp=util.notEnumerableProp;

function subError(nameProperty,defaultMessage){
function SubError(message){
if(!(this instanceof SubError))return new SubError(message);
notEnumerableProp(this,"message",
typeof message==="string"?message:defaultMessage);
notEnumerableProp(this,"name",nameProperty);
if(Error.captureStackTrace){
Error.captureStackTrace(this,this.constructor);}else 
{
Error.call(this);}}


inherits(SubError,Error);
return SubError;}


var _TypeError,_RangeError;
var Warning=subError("Warning","warning");
var CancellationError=subError("CancellationError","cancellation error");
var TimeoutError=subError("TimeoutError","timeout error");
var AggregateError=subError("AggregateError","aggregate error");
try{
_TypeError=TypeError;
_RangeError=RangeError;}
catch(e){
_TypeError=subError("TypeError","type error");
_RangeError=subError("RangeError","range error");}


var methods=("join pop push shift unshift slice filter forEach some "+
"every map indexOf lastIndexOf reduce reduceRight sort reverse").split(" ");

for(var i=0;i<methods.length;++i){
if(typeof Array.prototype[methods[i]]==="function"){
AggregateError.prototype[methods[i]]=Array.prototype[methods[i]];}}



es5.defineProperty(AggregateError.prototype,"length",{
value:0,
configurable:false,
writable:true,
enumerable:true});

AggregateError.prototype["isOperational"]=true;
var level=0;
AggregateError.prototype.toString=function(){
var indent=Array(level*4+1).join(" ");
var ret="\n"+indent+"AggregateError of:"+"\n";
level++;
indent=Array(level*4+1).join(" ");
for(var i=0;i<this.length;++i){
var str=this[i]===this?"[Circular AggregateError]":this[i]+"";
var lines=str.split("\n");
for(var j=0;j<lines.length;++j){
lines[j]=indent+lines[j];}

str=lines.join("\n");
ret+=str+"\n";}

level--;
return ret;};


function OperationalError(message){
if(!(this instanceof OperationalError))
return new OperationalError(message);
notEnumerableProp(this,"name","OperationalError");
notEnumerableProp(this,"message",message);
this.cause=message;
this["isOperational"]=true;

if(message instanceof Error){
notEnumerableProp(this,"message",message.message);
notEnumerableProp(this,"stack",message.stack);}else 
if(Error.captureStackTrace){
Error.captureStackTrace(this,this.constructor);}}



inherits(OperationalError,Error);

var errorTypes=Error["__BluebirdErrorTypes__"];
if(!errorTypes){
errorTypes=Objectfreeze({
CancellationError:CancellationError,
TimeoutError:TimeoutError,
OperationalError:OperationalError,
RejectionError:OperationalError,
AggregateError:AggregateError});

notEnumerableProp(Error,"__BluebirdErrorTypes__",errorTypes);}


module.exports={
Error:Error,
TypeError:_TypeError,
RangeError:_RangeError,
CancellationError:errorTypes.CancellationError,
OperationalError:errorTypes.OperationalError,
TimeoutError:errorTypes.TimeoutError,
AggregateError:errorTypes.AggregateError,
Warning:Warning};},


{"./es5.js":14,"./util.js":38}],14:[function(_dereq_,module,exports){
var isES5=function(){
"use strict";
return this===undefined;}();


if(isES5){
module.exports={
freeze:Object.freeze,
defineProperty:Object.defineProperty,
getDescriptor:Object.getOwnPropertyDescriptor,
keys:Object.keys,
names:Object.getOwnPropertyNames,
getPrototypeOf:Object.getPrototypeOf,
isArray:Array.isArray,
isES5:isES5,
propertyIsWritable:function(obj,prop){
var descriptor=Object.getOwnPropertyDescriptor(obj,prop);
return !!(!descriptor||descriptor.writable||descriptor.set);}};}else 


{
var has={}.hasOwnProperty;
var str={}.toString;
var proto={}.constructor.prototype;

var ObjectKeys=function(o){
var ret=[];
for(var key in o){
if(has.call(o,key)){
ret.push(key);}}


return ret;};


var ObjectGetDescriptor=function(o,key){
return {value:o[key]};};


var ObjectDefineProperty=function(o,key,desc){
o[key]=desc.value;
return o;};


var ObjectFreeze=function(obj){
return obj;};


var ObjectGetPrototypeOf=function(obj){
try{
return Object(obj).constructor.prototype;}

catch(e){
return proto;}};



var ArrayIsArray=function(obj){
try{
return str.call(obj)==="[object Array]";}

catch(e){
return false;}};



module.exports={
isArray:ArrayIsArray,
keys:ObjectKeys,
names:ObjectKeys,
defineProperty:ObjectDefineProperty,
getDescriptor:ObjectGetDescriptor,
freeze:ObjectFreeze,
getPrototypeOf:ObjectGetPrototypeOf,
isES5:isES5,
propertyIsWritable:function(){
return true;}};}},




{}],15:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL){
var PromiseMap=Promise.map;

Promise.prototype.filter=function(fn,options){
return PromiseMap(this,fn,options,INTERNAL);};


Promise.filter=function(promises,fn,options){
return PromiseMap(promises,fn,options,INTERNAL);};};},



{}],16:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,NEXT_FILTER,tryConvertToPromise){
var util=_dereq_("./util.js");
var isPrimitive=util.isPrimitive;
var thrower=util.thrower;

function returnThis(){
return this;}

function throwThis(){
throw this;}

function return$(r){
return function(){
return r;};}


function throw$(r){
return function(){
throw r;};}


function promisedFinally(ret,reasonOrValue,isFulfilled){
var then;
if(isPrimitive(reasonOrValue)){
then=isFulfilled?return$(reasonOrValue):throw$(reasonOrValue);}else 
{
then=isFulfilled?returnThis:throwThis;}

return ret._then(then,thrower,undefined,reasonOrValue,undefined);}


function finallyHandler(reasonOrValue){
var promise=this.promise;
var handler=this.handler;

var ret=promise._isBound()?
handler.call(promise._boundValue()):
handler();

if(ret!==undefined){
var maybePromise=tryConvertToPromise(ret,promise);
if(maybePromise instanceof Promise){
maybePromise=maybePromise._target();
return promisedFinally(maybePromise,reasonOrValue,
promise.isFulfilled());}}



if(promise.isRejected()){
NEXT_FILTER.e=reasonOrValue;
return NEXT_FILTER;}else 
{
return reasonOrValue;}}



function tapHandler(value){
var promise=this.promise;
var handler=this.handler;

var ret=promise._isBound()?
handler.call(promise._boundValue(),value):
handler(value);

if(ret!==undefined){
var maybePromise=tryConvertToPromise(ret,promise);
if(maybePromise instanceof Promise){
maybePromise=maybePromise._target();
return promisedFinally(maybePromise,value,true);}}


return value;}


Promise.prototype._passThroughHandler=function(handler,isFinally){
if(typeof handler!=="function")return this.then();

var promiseAndHandler={
promise:this,
handler:handler};


return this._then(
isFinally?finallyHandler:tapHandler,
isFinally?finallyHandler:undefined,undefined,
promiseAndHandler,undefined);};


Promise.prototype.lastly=
Promise.prototype["finally"]=function(handler){
return this._passThroughHandler(handler,true);};


Promise.prototype.tap=function(handler){
return this._passThroughHandler(handler,false);};};},



{"./util.js":38}],17:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,
apiRejection,
INTERNAL,
tryConvertToPromise){
var errors=_dereq_("./errors.js");
var TypeError=errors.TypeError;
var util=_dereq_("./util.js");
var errorObj=util.errorObj;
var tryCatch=util.tryCatch;
var yieldHandlers=[];

function promiseFromYieldHandler(value,yieldHandlers,traceParent){
for(var i=0;i<yieldHandlers.length;++i){
traceParent._pushContext();
var result=tryCatch(yieldHandlers[i])(value);
traceParent._popContext();
if(result===errorObj){
traceParent._pushContext();
var ret=Promise.reject(errorObj.e);
traceParent._popContext();
return ret;}

var maybePromise=tryConvertToPromise(result,traceParent);
if(maybePromise instanceof Promise)return maybePromise;}

return null;}


function PromiseSpawn(generatorFunction,receiver,yieldHandler,stack){
var promise=this._promise=new Promise(INTERNAL);
promise._captureStackTrace();
this._stack=stack;
this._generatorFunction=generatorFunction;
this._receiver=receiver;
this._generator=undefined;
this._yieldHandlers=typeof yieldHandler==="function"?
[yieldHandler].concat(yieldHandlers):
yieldHandlers;}


PromiseSpawn.prototype.promise=function(){
return this._promise;};


PromiseSpawn.prototype._run=function(){
this._generator=this._generatorFunction.call(this._receiver);
this._receiver=
this._generatorFunction=undefined;
this._next(undefined);};


PromiseSpawn.prototype._continue=function(result){
if(result===errorObj){
return this._promise._rejectCallback(result.e,false,true);}


var value=result.value;
if(result.done===true){
this._promise._resolveCallback(value);}else 
{
var maybePromise=tryConvertToPromise(value,this._promise);
if(!(maybePromise instanceof Promise)){
maybePromise=
promiseFromYieldHandler(maybePromise,
this._yieldHandlers,
this._promise);
if(maybePromise===null){
this._throw(
new TypeError(
"A value %s was yielded that could not be treated as a promise\u000a\u000a    See http://goo.gl/4Y4pDk\u000a\u000a".replace("%s",value)+
"From coroutine:\u000a"+
this._stack.split("\n").slice(1,-7).join("\n")));


return;}}


maybePromise._then(
this._next,
this._throw,
undefined,
this,
null);}};




PromiseSpawn.prototype._throw=function(reason){
this._promise._attachExtraTrace(reason);
this._promise._pushContext();
var result=tryCatch(this._generator["throw"]).
call(this._generator,reason);
this._promise._popContext();
this._continue(result);};


PromiseSpawn.prototype._next=function(value){
this._promise._pushContext();
var result=tryCatch(this._generator.next).call(this._generator,value);
this._promise._popContext();
this._continue(result);};


Promise.coroutine=function(generatorFunction,options){
if(typeof generatorFunction!=="function"){
throw new TypeError("generatorFunction must be a function\u000a\u000a    See http://goo.gl/6Vqhm0\u000a");}

var yieldHandler=Object(options).yieldHandler;
var PromiseSpawn$=PromiseSpawn;
var stack=new Error().stack;
return function(){
var generator=generatorFunction.apply(this,arguments);
var spawn=new PromiseSpawn$(undefined,undefined,yieldHandler,
stack);
spawn._generator=generator;
spawn._next(undefined);
return spawn.promise();};};



Promise.coroutine.addYieldHandler=function(fn){
if(typeof fn!=="function")throw new TypeError("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");
yieldHandlers.push(fn);};


Promise.spawn=function(generatorFunction){
if(typeof generatorFunction!=="function"){
return apiRejection("generatorFunction must be a function\u000a\u000a    See http://goo.gl/6Vqhm0\u000a");}

var spawn=new PromiseSpawn(generatorFunction,this);
var ret=spawn.promise();
spawn._run(Promise.spawn);
return ret;};};},



{"./errors.js":13,"./util.js":38}],18:[function(_dereq_,module,exports){
"use strict";
module.exports=
function(Promise,PromiseArray,tryConvertToPromise,INTERNAL){
var util=_dereq_("./util.js");
var canEvaluate=util.canEvaluate;
var tryCatch=util.tryCatch;
var errorObj=util.errorObj;
var reject;

if(!true){
if(canEvaluate){
var thenCallback=function(i){
return new Function("value","holder","                             \n\
            'use strict';                                                    \n\
            holder.pIndex = value;                                           \n\
            holder.checkFulfillment(this);                                   \n\
            ".replace(/Index/g,i));};


var caller=function(count){
var values=[];
for(var i=1;i<=count;++i){values.push("holder.p"+i);}
return new Function("holder","                                      \n\
            'use strict';                                                    \n\
            var callback = holder.fn;                                        \n\
            return callback(values);                                         \n\
            ".replace(/values/g,values.join(", ")));};

var thenCallbacks=[];
var callers=[undefined];
for(var i=1;i<=5;++i){
thenCallbacks.push(thenCallback(i));
callers.push(caller(i));}


var Holder=function(total,fn){
this.p1=this.p2=this.p3=this.p4=this.p5=null;
this.fn=fn;
this.total=total;
this.now=0;};


Holder.prototype.callers=callers;
Holder.prototype.checkFulfillment=function(promise){
var now=this.now;
now++;
var total=this.total;
if(now>=total){
var handler=this.callers[total];
promise._pushContext();
var ret=tryCatch(handler)(this);
promise._popContext();
if(ret===errorObj){
promise._rejectCallback(ret.e,false,true);}else 
{
promise._resolveCallback(ret);}}else 

{
this.now=now;}};



var reject=function(reason){
this._reject(reason);};}}




Promise.join=function(){
var last=arguments.length-1;
var fn;
if(last>0&&typeof arguments[last]==="function"){
fn=arguments[last];
if(!true){
if(last<6&&canEvaluate){
var ret=new Promise(INTERNAL);
ret._captureStackTrace();
var holder=new Holder(last,fn);
var callbacks=thenCallbacks;
for(var i=0;i<last;++i){
var maybePromise=tryConvertToPromise(arguments[i],ret);
if(maybePromise instanceof Promise){
maybePromise=maybePromise._target();
if(maybePromise._isPending()){
maybePromise._then(callbacks[i],reject,
undefined,ret,holder);}else 
if(maybePromise._isFulfilled()){
callbacks[i].call(ret,
maybePromise._value(),holder);}else 
{
ret._reject(maybePromise._reason());}}else 

{
callbacks[i].call(ret,maybePromise,holder);}}


return ret;}}}



var $_len=arguments.length;var args=new Array($_len);for(var $_i=0;$_i<$_len;++$_i){args[$_i]=arguments[$_i];}
if(fn)args.pop();
var ret=new PromiseArray(args).promise();
return fn!==undefined?ret.spread(fn):ret;};};},




{"./util.js":38}],19:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,
PromiseArray,
apiRejection,
tryConvertToPromise,
INTERNAL){
var getDomain=Promise._getDomain;
var async=_dereq_("./async.js");
var util=_dereq_("./util.js");
var tryCatch=util.tryCatch;
var errorObj=util.errorObj;
var PENDING={};
var EMPTY_ARRAY=[];

function MappingPromiseArray(promises,fn,limit,_filter){
this.constructor$(promises);
this._promise._captureStackTrace();
var domain=getDomain();
this._callback=domain===null?fn:domain.bind(fn);
this._preservedValues=_filter===INTERNAL?
new Array(this.length()):
null;
this._limit=limit;
this._inFlight=0;
this._queue=limit>=1?[]:EMPTY_ARRAY;
async.invoke(init,this,undefined);}

util.inherits(MappingPromiseArray,PromiseArray);
function init(){this._init$(undefined,-2);}

MappingPromiseArray.prototype._init=function(){};

MappingPromiseArray.prototype._promiseFulfilled=function(value,index){
var values=this._values;
var length=this.length();
var preservedValues=this._preservedValues;
var limit=this._limit;
if(values[index]===PENDING){
values[index]=value;
if(limit>=1){
this._inFlight--;
this._drainQueue();
if(this._isResolved())return;}}else 

{
if(limit>=1&&this._inFlight>=limit){
values[index]=value;
this._queue.push(index);
return;}

if(preservedValues!==null)preservedValues[index]=value;

var callback=this._callback;
var receiver=this._promise._boundValue();
this._promise._pushContext();
var ret=tryCatch(callback).call(receiver,value,index,length);
this._promise._popContext();
if(ret===errorObj)return this._reject(ret.e);

var maybePromise=tryConvertToPromise(ret,this._promise);
if(maybePromise instanceof Promise){
maybePromise=maybePromise._target();
if(maybePromise._isPending()){
if(limit>=1)this._inFlight++;
values[index]=PENDING;
return maybePromise._proxyPromiseArray(this,index);}else 
if(maybePromise._isFulfilled()){
ret=maybePromise._value();}else 
{
return this._reject(maybePromise._reason());}}


values[index]=ret;}

var totalResolved=++this._totalResolved;
if(totalResolved>=length){
if(preservedValues!==null){
this._filter(values,preservedValues);}else 
{
this._resolve(values);}}};





MappingPromiseArray.prototype._drainQueue=function(){
var queue=this._queue;
var limit=this._limit;
var values=this._values;
while(queue.length>0&&this._inFlight<limit){
if(this._isResolved())return;
var index=queue.pop();
this._promiseFulfilled(values[index],index);}};



MappingPromiseArray.prototype._filter=function(booleans,values){
var len=values.length;
var ret=new Array(len);
var j=0;
for(var i=0;i<len;++i){
if(booleans[i])ret[j++]=values[i];}

ret.length=j;
this._resolve(ret);};


MappingPromiseArray.prototype.preservedValues=function(){
return this._preservedValues;};


function map(promises,fn,options,_filter){
var limit=typeof options==="object"&&options!==null?
options.concurrency:
0;
limit=typeof limit==="number"&&
isFinite(limit)&&limit>=1?limit:0;
return new MappingPromiseArray(promises,fn,limit,_filter);}


Promise.prototype.map=function(fn,options){
if(typeof fn!=="function")return apiRejection("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");

return map(this,fn,options,null).promise();};


Promise.map=function(promises,fn,options,_filter){
if(typeof fn!=="function")return apiRejection("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");
return map(promises,fn,options,_filter).promise();};};},





{"./async.js":2,"./util.js":38}],20:[function(_dereq_,module,exports){
"use strict";
module.exports=
function(Promise,INTERNAL,tryConvertToPromise,apiRejection){
var util=_dereq_("./util.js");
var tryCatch=util.tryCatch;

Promise.method=function(fn){
if(typeof fn!=="function"){
throw new Promise.TypeError("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");}

return function(){
var ret=new Promise(INTERNAL);
ret._captureStackTrace();
ret._pushContext();
var value=tryCatch(fn).apply(this,arguments);
ret._popContext();
ret._resolveFromSyncValue(value);
return ret;};};



Promise.attempt=Promise["try"]=function(fn,args,ctx){
if(typeof fn!=="function"){
return apiRejection("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");}

var ret=new Promise(INTERNAL);
ret._captureStackTrace();
ret._pushContext();
var value=util.isArray(args)?
tryCatch(fn).apply(ctx,args):
tryCatch(fn).call(ctx,args);
ret._popContext();
ret._resolveFromSyncValue(value);
return ret;};


Promise.prototype._resolveFromSyncValue=function(value){
if(value===util.errorObj){
this._rejectCallback(value.e,false,true);}else 
{
this._resolveCallback(value,true);}};};},




{"./util.js":38}],21:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise){
var util=_dereq_("./util.js");
var async=_dereq_("./async.js");
var tryCatch=util.tryCatch;
var errorObj=util.errorObj;

function spreadAdapter(val,nodeback){
var promise=this;
if(!util.isArray(val))return successAdapter.call(promise,val,nodeback);
var ret=
tryCatch(nodeback).apply(promise._boundValue(),[null].concat(val));
if(ret===errorObj){
async.throwLater(ret.e);}}



function successAdapter(val,nodeback){
var promise=this;
var receiver=promise._boundValue();
var ret=val===undefined?
tryCatch(nodeback).call(receiver,null):
tryCatch(nodeback).call(receiver,null,val);
if(ret===errorObj){
async.throwLater(ret.e);}}


function errorAdapter(reason,nodeback){
var promise=this;
if(!reason){
var target=promise._target();
var newReason=target._getCarriedStackTrace();
newReason.cause=reason;
reason=newReason;}

var ret=tryCatch(nodeback).call(promise._boundValue(),reason);
if(ret===errorObj){
async.throwLater(ret.e);}}



Promise.prototype.asCallback=
Promise.prototype.nodeify=function(nodeback,options){
if(typeof nodeback=="function"){
var adapter=successAdapter;
if(options!==undefined&&Object(options).spread){
adapter=spreadAdapter;}

this._then(
adapter,
errorAdapter,
undefined,
this,
nodeback);}


return this;};};},



{"./async.js":2,"./util.js":38}],22:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,PromiseArray){
var util=_dereq_("./util.js");
var async=_dereq_("./async.js");
var tryCatch=util.tryCatch;
var errorObj=util.errorObj;

Promise.prototype.progressed=function(handler){
return this._then(undefined,undefined,handler,undefined,undefined);};


Promise.prototype._progress=function(progressValue){
if(this._isFollowingOrFulfilledOrRejected())return;
this._target()._progressUnchecked(progressValue);};



Promise.prototype._progressHandlerAt=function(index){
return index===0?
this._progressHandler0:
this[(index<<2)+index-5+2];};


Promise.prototype._doProgressWith=function(progression){
var progressValue=progression.value;
var handler=progression.handler;
var promise=progression.promise;
var receiver=progression.receiver;

var ret=tryCatch(handler).call(receiver,progressValue);
if(ret===errorObj){
if(ret.e!=null&&
ret.e.name!=="StopProgressPropagation"){
var trace=util.canAttachTrace(ret.e)?
ret.e:new Error(util.toString(ret.e));
promise._attachExtraTrace(trace);
promise._progress(ret.e);}}else 

if(ret instanceof Promise){
ret._then(promise._progress,null,null,promise,undefined);}else 
{
promise._progress(ret);}};




Promise.prototype._progressUnchecked=function(progressValue){
var len=this._length();
var progress=this._progress;
for(var i=0;i<len;i++){
var handler=this._progressHandlerAt(i);
var promise=this._promiseAt(i);
if(!(promise instanceof Promise)){
var receiver=this._receiverAt(i);
if(typeof handler==="function"){
handler.call(receiver,progressValue,promise);}else 
if(receiver instanceof PromiseArray&&
!receiver._isResolved()){
receiver._promiseProgressed(progressValue,promise);}

continue;}


if(typeof handler==="function"){
async.invoke(this._doProgressWith,this,{
handler:handler,
promise:promise,
receiver:this._receiverAt(i),
value:progressValue});}else 

{
async.invoke(progress,promise,progressValue);}}};};},





{"./async.js":2,"./util.js":38}],23:[function(_dereq_,module,exports){
"use strict";
module.exports=function(){
var makeSelfResolutionError=function(){
return new TypeError("circular promise resolution chain\u000a\u000a    See http://goo.gl/LhFpo0\u000a");};

var reflect=function(){
return new Promise.PromiseInspection(this._target());};

var apiRejection=function(msg){
return Promise.reject(new TypeError(msg));};


var util=_dereq_("./util.js");

var getDomain;
if(util.isNode){
getDomain=function(){
var ret=process.domain;
if(ret===undefined)ret=null;
return ret;};}else 

{
getDomain=function(){
return null;};}


util.notEnumerableProp(Promise,"_getDomain",getDomain);

var UNDEFINED_BINDING={};
var async=_dereq_("./async.js");
var errors=_dereq_("./errors.js");
var TypeError=Promise.TypeError=errors.TypeError;
Promise.RangeError=errors.RangeError;
Promise.CancellationError=errors.CancellationError;
Promise.TimeoutError=errors.TimeoutError;
Promise.OperationalError=errors.OperationalError;
Promise.RejectionError=errors.OperationalError;
Promise.AggregateError=errors.AggregateError;
var INTERNAL=function(){};
var APPLY={};
var NEXT_FILTER={e:null};
var tryConvertToPromise=_dereq_("./thenables.js")(Promise,INTERNAL);
var PromiseArray=
_dereq_("./promise_array.js")(Promise,INTERNAL,
tryConvertToPromise,apiRejection);
var CapturedTrace=_dereq_("./captured_trace.js")();
var isDebugging=_dereq_("./debuggability.js")(Promise,CapturedTrace);

var createContext=
_dereq_("./context.js")(Promise,CapturedTrace,isDebugging);
var CatchFilter=_dereq_("./catch_filter.js")(NEXT_FILTER);
var PromiseResolver=_dereq_("./promise_resolver.js");
var nodebackForPromise=PromiseResolver._nodebackForPromise;
var errorObj=util.errorObj;
var tryCatch=util.tryCatch;
function Promise(resolver){
if(typeof resolver!=="function"){
throw new TypeError("the promise constructor requires a resolver function\u000a\u000a    See http://goo.gl/EC22Yn\u000a");}

if(this.constructor!==Promise){
throw new TypeError("the promise constructor cannot be invoked directly\u000a\u000a    See http://goo.gl/KsIlge\u000a");}

this._bitField=0;
this._fulfillmentHandler0=undefined;
this._rejectionHandler0=undefined;
this._progressHandler0=undefined;
this._promise0=undefined;
this._receiver0=undefined;
this._settledValue=undefined;
if(resolver!==INTERNAL)this._resolveFromResolver(resolver);}


Promise.prototype.toString=function(){
return "[object Promise]";};


Promise.prototype.caught=Promise.prototype["catch"]=function(fn){
var len=arguments.length;
if(len>1){
var catchInstances=new Array(len-1),
j=0,i;
for(i=0;i<len-1;++i){
var item=arguments[i];
if(typeof item==="function"){
catchInstances[j++]=item;}else 
{
return Promise.reject(
new TypeError("Catch filter must inherit from Error or be a simple predicate function\u000a\u000a    See http://goo.gl/o84o68\u000a"));}}


catchInstances.length=j;
fn=arguments[i];
var catchFilter=new CatchFilter(catchInstances,fn,this);
return this._then(undefined,catchFilter.doFilter,undefined,
catchFilter,undefined);}

return this._then(undefined,fn,undefined,undefined,undefined);};


Promise.prototype.reflect=function(){
return this._then(reflect,reflect,undefined,this,undefined);};


Promise.prototype.then=function(didFulfill,didReject,didProgress){
if(isDebugging()&&arguments.length>0&&
typeof didFulfill!=="function"&&
typeof didReject!=="function"){
var msg=".then() only accepts functions but was passed: "+
util.classString(didFulfill);
if(arguments.length>1){
msg+=", "+util.classString(didReject);}

this._warn(msg);}

return this._then(didFulfill,didReject,didProgress,
undefined,undefined);};


Promise.prototype.done=function(didFulfill,didReject,didProgress){
var promise=this._then(didFulfill,didReject,didProgress,
undefined,undefined);
promise._setIsFinal();};


Promise.prototype.spread=function(didFulfill,didReject){
return this.all()._then(didFulfill,didReject,undefined,APPLY,undefined);};


Promise.prototype.isCancellable=function(){
return !this.isResolved()&&
this._cancellable();};


Promise.prototype.toJSON=function(){
var ret={
isFulfilled:false,
isRejected:false,
fulfillmentValue:undefined,
rejectionReason:undefined};

if(this.isFulfilled()){
ret.fulfillmentValue=this.value();
ret.isFulfilled=true;}else 
if(this.isRejected()){
ret.rejectionReason=this.reason();
ret.isRejected=true;}

return ret;};


Promise.prototype.all=function(){
return new PromiseArray(this).promise();};


Promise.prototype.error=function(fn){
return this.caught(util.originatesFromRejection,fn);};


Promise.is=function(val){
return val instanceof Promise;};


Promise.fromNode=function(fn){
var ret=new Promise(INTERNAL);
var result=tryCatch(fn)(nodebackForPromise(ret));
if(result===errorObj){
ret._rejectCallback(result.e,true,true);}

return ret;};


Promise.all=function(promises){
return new PromiseArray(promises).promise();};


Promise.defer=Promise.pending=function(){
var promise=new Promise(INTERNAL);
return new PromiseResolver(promise);};


Promise.cast=function(obj){
var ret=tryConvertToPromise(obj);
if(!(ret instanceof Promise)){
var val=ret;
ret=new Promise(INTERNAL);
ret._fulfillUnchecked(val);}

return ret;};


Promise.resolve=Promise.fulfilled=Promise.cast;

Promise.reject=Promise.rejected=function(reason){
var ret=new Promise(INTERNAL);
ret._captureStackTrace();
ret._rejectCallback(reason,true);
return ret;};


Promise.setScheduler=function(fn){
if(typeof fn!=="function")throw new TypeError("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");
var prev=async._schedule;
async._schedule=fn;
return prev;};


Promise.prototype._then=function(
didFulfill,
didReject,
didProgress,
receiver,
internalData)
{
var haveInternalData=internalData!==undefined;
var ret=haveInternalData?internalData:new Promise(INTERNAL);

if(!haveInternalData){
ret._propagateFrom(this,4|1);
ret._captureStackTrace();}


var target=this._target();
if(target!==this){
if(receiver===undefined)receiver=this._boundTo;
if(!haveInternalData)ret._setIsMigrated();}


var callbackIndex=target._addCallbacks(didFulfill,
didReject,
didProgress,
ret,
receiver,
getDomain());

if(target._isResolved()&&!target._isSettlePromisesQueued()){
async.invoke(
target._settlePromiseAtPostResolution,target,callbackIndex);}


return ret;};


Promise.prototype._settlePromiseAtPostResolution=function(index){
if(this._isRejectionUnhandled())this._unsetRejectionIsUnhandled();
this._settlePromiseAt(index);};


Promise.prototype._length=function(){
return this._bitField&131071;};


Promise.prototype._isFollowingOrFulfilledOrRejected=function(){
return (this._bitField&939524096)>0;};


Promise.prototype._isFollowing=function(){
return (this._bitField&536870912)===536870912;};


Promise.prototype._setLength=function(len){
this._bitField=this._bitField&-131072|
len&131071;};


Promise.prototype._setFulfilled=function(){
this._bitField=this._bitField|268435456;};


Promise.prototype._setRejected=function(){
this._bitField=this._bitField|134217728;};


Promise.prototype._setFollowing=function(){
this._bitField=this._bitField|536870912;};


Promise.prototype._setIsFinal=function(){
this._bitField=this._bitField|33554432;};


Promise.prototype._isFinal=function(){
return (this._bitField&33554432)>0;};


Promise.prototype._cancellable=function(){
return (this._bitField&67108864)>0;};


Promise.prototype._setCancellable=function(){
this._bitField=this._bitField|67108864;};


Promise.prototype._unsetCancellable=function(){
this._bitField=this._bitField&~67108864;};


Promise.prototype._setIsMigrated=function(){
this._bitField=this._bitField|4194304;};


Promise.prototype._unsetIsMigrated=function(){
this._bitField=this._bitField&~4194304;};


Promise.prototype._isMigrated=function(){
return (this._bitField&4194304)>0;};


Promise.prototype._receiverAt=function(index){
var ret=index===0?
this._receiver0:
this[
index*5-5+4];
if(ret===UNDEFINED_BINDING){
return undefined;}else 
if(ret===undefined&&this._isBound()){
return this._boundValue();}

return ret;};


Promise.prototype._promiseAt=function(index){
return index===0?
this._promise0:
this[index*5-5+3];};


Promise.prototype._fulfillmentHandlerAt=function(index){
return index===0?
this._fulfillmentHandler0:
this[index*5-5+0];};


Promise.prototype._rejectionHandlerAt=function(index){
return index===0?
this._rejectionHandler0:
this[index*5-5+1];};


Promise.prototype._boundValue=function(){
var ret=this._boundTo;
if(ret!==undefined){
if(ret instanceof Promise){
if(ret.isFulfilled()){
return ret.value();}else 
{
return undefined;}}}



return ret;};


Promise.prototype._migrateCallbacks=function(follower,index){
var fulfill=follower._fulfillmentHandlerAt(index);
var reject=follower._rejectionHandlerAt(index);
var progress=follower._progressHandlerAt(index);
var promise=follower._promiseAt(index);
var receiver=follower._receiverAt(index);
if(promise instanceof Promise)promise._setIsMigrated();
if(receiver===undefined)receiver=UNDEFINED_BINDING;
this._addCallbacks(fulfill,reject,progress,promise,receiver,null);};


Promise.prototype._addCallbacks=function(
fulfill,
reject,
progress,
promise,
receiver,
domain)
{
var index=this._length();

if(index>=131071-5){
index=0;
this._setLength(0);}


if(index===0){
this._promise0=promise;
if(receiver!==undefined)this._receiver0=receiver;
if(typeof fulfill==="function"&&!this._isCarryingStackTrace()){
this._fulfillmentHandler0=
domain===null?fulfill:domain.bind(fulfill);}

if(typeof reject==="function"){
this._rejectionHandler0=
domain===null?reject:domain.bind(reject);}

if(typeof progress==="function"){
this._progressHandler0=
domain===null?progress:domain.bind(progress);}}else 

{
var base=index*5-5;
this[base+3]=promise;
this[base+4]=receiver;
if(typeof fulfill==="function"){
this[base+0]=
domain===null?fulfill:domain.bind(fulfill);}

if(typeof reject==="function"){
this[base+1]=
domain===null?reject:domain.bind(reject);}

if(typeof progress==="function"){
this[base+2]=
domain===null?progress:domain.bind(progress);}}


this._setLength(index+1);
return index;};


Promise.prototype._setProxyHandlers=function(receiver,promiseSlotValue){
var index=this._length();

if(index>=131071-5){
index=0;
this._setLength(0);}

if(index===0){
this._promise0=promiseSlotValue;
this._receiver0=receiver;}else 
{
var base=index*5-5;
this[base+3]=promiseSlotValue;
this[base+4]=receiver;}

this._setLength(index+1);};


Promise.prototype._proxyPromiseArray=function(promiseArray,index){
this._setProxyHandlers(promiseArray,index);};


Promise.prototype._resolveCallback=function(value,shouldBind){
if(this._isFollowingOrFulfilledOrRejected())return;
if(value===this)
return this._rejectCallback(makeSelfResolutionError(),false,true);
var maybePromise=tryConvertToPromise(value,this);
if(!(maybePromise instanceof Promise))return this._fulfill(value);

var propagationFlags=1|(shouldBind?4:0);
this._propagateFrom(maybePromise,propagationFlags);
var promise=maybePromise._target();
if(promise._isPending()){
var len=this._length();
for(var i=0;i<len;++i){
promise._migrateCallbacks(this,i);}

this._setFollowing();
this._setLength(0);
this._setFollowee(promise);}else 
if(promise._isFulfilled()){
this._fulfillUnchecked(promise._value());}else 
{
this._rejectUnchecked(promise._reason(),
promise._getCarriedStackTrace());}};



Promise.prototype._rejectCallback=
function(reason,synchronous,shouldNotMarkOriginatingFromRejection){
if(!shouldNotMarkOriginatingFromRejection){
util.markAsOriginatingFromRejection(reason);}

var trace=util.ensureErrorObject(reason);
var hasStack=trace===reason;
this._attachExtraTrace(trace,synchronous?hasStack:false);
this._reject(reason,hasStack?undefined:trace);};


Promise.prototype._resolveFromResolver=function(resolver){
var promise=this;
this._captureStackTrace();
this._pushContext();
var synchronous=true;
var r=tryCatch(resolver)(function(value){
if(promise===null)return;
promise._resolveCallback(value);
promise=null;},
function(reason){
if(promise===null)return;
promise._rejectCallback(reason,synchronous);
promise=null;});

synchronous=false;
this._popContext();

if(r!==undefined&&r===errorObj&&promise!==null){
promise._rejectCallback(r.e,true,true);
promise=null;}};



Promise.prototype._settlePromiseFromHandler=function(
handler,receiver,value,promise)
{
if(promise._isRejected())return;
promise._pushContext();
var x;
if(receiver===APPLY&&!this._isRejected()){
x=tryCatch(handler).apply(this._boundValue(),value);}else 
{
x=tryCatch(handler).call(receiver,value);}

promise._popContext();

if(x===errorObj||x===promise||x===NEXT_FILTER){
var err=x===promise?makeSelfResolutionError():x.e;
promise._rejectCallback(err,false,true);}else 
{
promise._resolveCallback(x);}};



Promise.prototype._target=function(){
var ret=this;
while(ret._isFollowing()){ret=ret._followee();}
return ret;};


Promise.prototype._followee=function(){
return this._rejectionHandler0;};


Promise.prototype._setFollowee=function(promise){
this._rejectionHandler0=promise;};


Promise.prototype._cleanValues=function(){
if(this._cancellable()){
this._cancellationParent=undefined;}};



Promise.prototype._propagateFrom=function(parent,flags){
if((flags&1)>0&&parent._cancellable()){
this._setCancellable();
this._cancellationParent=parent;}

if((flags&4)>0&&parent._isBound()){
this._setBoundTo(parent._boundTo);}};



Promise.prototype._fulfill=function(value){
if(this._isFollowingOrFulfilledOrRejected())return;
this._fulfillUnchecked(value);};


Promise.prototype._reject=function(reason,carriedStackTrace){
if(this._isFollowingOrFulfilledOrRejected())return;
this._rejectUnchecked(reason,carriedStackTrace);};


Promise.prototype._settlePromiseAt=function(index){
var promise=this._promiseAt(index);
var isPromise=promise instanceof Promise;

if(isPromise&&promise._isMigrated()){
promise._unsetIsMigrated();
return async.invoke(this._settlePromiseAt,this,index);}

var handler=this._isFulfilled()?
this._fulfillmentHandlerAt(index):
this._rejectionHandlerAt(index);

var carriedStackTrace=
this._isCarryingStackTrace()?this._getCarriedStackTrace():undefined;
var value=this._settledValue;
var receiver=this._receiverAt(index);
this._clearCallbackDataAtIndex(index);

if(typeof handler==="function"){
if(!isPromise){
handler.call(receiver,value,promise);}else 
{
this._settlePromiseFromHandler(handler,receiver,value,promise);}}else 

if(receiver instanceof PromiseArray){
if(!receiver._isResolved()){
if(this._isFulfilled()){
receiver._promiseFulfilled(value,promise);}else 

{
receiver._promiseRejected(value,promise);}}}else 


if(isPromise){
if(this._isFulfilled()){
promise._fulfill(value);}else 
{
promise._reject(value,carriedStackTrace);}}



if(index>=4&&(index&31)===4)
async.invokeLater(this._setLength,this,0);};


Promise.prototype._clearCallbackDataAtIndex=function(index){
if(index===0){
if(!this._isCarryingStackTrace()){
this._fulfillmentHandler0=undefined;}

this._rejectionHandler0=
this._progressHandler0=
this._receiver0=
this._promise0=undefined;}else 
{
var base=index*5-5;
this[base+3]=
this[base+4]=
this[base+0]=
this[base+1]=
this[base+2]=undefined;}};



Promise.prototype._isSettlePromisesQueued=function(){
return (this._bitField&
-1073741824)===-1073741824;};


Promise.prototype._setSettlePromisesQueued=function(){
this._bitField=this._bitField|-1073741824;};


Promise.prototype._unsetSettlePromisesQueued=function(){
this._bitField=this._bitField&~ -1073741824;};


Promise.prototype._queueSettlePromises=function(){
async.settlePromises(this);
this._setSettlePromisesQueued();};


Promise.prototype._fulfillUnchecked=function(value){
if(value===this){
var err=makeSelfResolutionError();
this._attachExtraTrace(err);
return this._rejectUnchecked(err,undefined);}

this._setFulfilled();
this._settledValue=value;
this._cleanValues();

if(this._length()>0){
this._queueSettlePromises();}};



Promise.prototype._rejectUncheckedCheckError=function(reason){
var trace=util.ensureErrorObject(reason);
this._rejectUnchecked(reason,trace===reason?undefined:trace);};


Promise.prototype._rejectUnchecked=function(reason,trace){
if(reason===this){
var err=makeSelfResolutionError();
this._attachExtraTrace(err);
return this._rejectUnchecked(err);}

this._setRejected();
this._settledValue=reason;
this._cleanValues();

if(this._isFinal()){
async.throwLater(function(e){
if("stack" in e){
async.invokeFirst(
CapturedTrace.unhandledRejection,undefined,e);}

throw e;},
trace===undefined?reason:trace);
return;}


if(trace!==undefined&&trace!==reason){
this._setCarriedStackTrace(trace);}


if(this._length()>0){
this._queueSettlePromises();}else 
{
this._ensurePossibleRejectionHandled();}};



Promise.prototype._settlePromises=function(){
this._unsetSettlePromisesQueued();
var len=this._length();
for(var i=0;i<len;i++){
this._settlePromiseAt(i);}};



util.notEnumerableProp(Promise,
"_makeSelfResolutionError",
makeSelfResolutionError);

_dereq_("./progress.js")(Promise,PromiseArray);
_dereq_("./method.js")(Promise,INTERNAL,tryConvertToPromise,apiRejection);
_dereq_("./bind.js")(Promise,INTERNAL,tryConvertToPromise);
_dereq_("./finally.js")(Promise,NEXT_FILTER,tryConvertToPromise);
_dereq_("./direct_resolve.js")(Promise);
_dereq_("./synchronous_inspection.js")(Promise);
_dereq_("./join.js")(Promise,PromiseArray,tryConvertToPromise,INTERNAL);
Promise.Promise=Promise;
_dereq_('./map.js')(Promise,PromiseArray,apiRejection,tryConvertToPromise,INTERNAL);
_dereq_('./cancel.js')(Promise);
_dereq_('./using.js')(Promise,apiRejection,tryConvertToPromise,createContext);
_dereq_('./generators.js')(Promise,apiRejection,INTERNAL,tryConvertToPromise);
_dereq_('./nodeify.js')(Promise);
_dereq_('./call_get.js')(Promise);
_dereq_('./props.js')(Promise,PromiseArray,tryConvertToPromise,apiRejection);
_dereq_('./race.js')(Promise,INTERNAL,tryConvertToPromise,apiRejection);
_dereq_('./reduce.js')(Promise,PromiseArray,apiRejection,tryConvertToPromise,INTERNAL);
_dereq_('./settle.js')(Promise,PromiseArray);
_dereq_('./some.js')(Promise,PromiseArray,apiRejection);
_dereq_('./promisify.js')(Promise,INTERNAL);
_dereq_('./any.js')(Promise);
_dereq_('./each.js')(Promise,INTERNAL);
_dereq_('./timers.js')(Promise,INTERNAL);
_dereq_('./filter.js')(Promise,INTERNAL);

util.toFastProperties(Promise);
util.toFastProperties(Promise.prototype);
function fillTypes(value){
var p=new Promise(INTERNAL);
p._fulfillmentHandler0=value;
p._rejectionHandler0=value;
p._progressHandler0=value;
p._promise0=value;
p._receiver0=value;
p._settledValue=value;}



fillTypes({a:1});
fillTypes({b:2});
fillTypes({c:3});
fillTypes(1);
fillTypes(function(){});
fillTypes(undefined);
fillTypes(false);
fillTypes(new Promise(INTERNAL));
CapturedTrace.setBounds(async.firstLineError,util.lastLineError);
return Promise;};},



{"./any.js":1,"./async.js":2,"./bind.js":3,"./call_get.js":5,"./cancel.js":6,"./captured_trace.js":7,"./catch_filter.js":8,"./context.js":9,"./debuggability.js":10,"./direct_resolve.js":11,"./each.js":12,"./errors.js":13,"./filter.js":15,"./finally.js":16,"./generators.js":17,"./join.js":18,"./map.js":19,"./method.js":20,"./nodeify.js":21,"./progress.js":22,"./promise_array.js":24,"./promise_resolver.js":25,"./promisify.js":26,"./props.js":27,"./race.js":29,"./reduce.js":30,"./settle.js":32,"./some.js":33,"./synchronous_inspection.js":34,"./thenables.js":35,"./timers.js":36,"./using.js":37,"./util.js":38}],24:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL,tryConvertToPromise,
apiRejection){
var util=_dereq_("./util.js");
var isArray=util.isArray;

function toResolutionValue(val){
switch(val){
case -2:return [];
case -3:return {};}}



function PromiseArray(values){
var promise=this._promise=new Promise(INTERNAL);
var parent;
if(values instanceof Promise){
parent=values;
promise._propagateFrom(parent,1|4);}

this._values=values;
this._length=0;
this._totalResolved=0;
this._init(undefined,-2);}

PromiseArray.prototype.length=function(){
return this._length;};


PromiseArray.prototype.promise=function(){
return this._promise;};


PromiseArray.prototype._init=function init(_,resolveValueIfEmpty){
var values=tryConvertToPromise(this._values,this._promise);
if(values instanceof Promise){
values=values._target();
this._values=values;
if(values._isFulfilled()){
values=values._value();
if(!isArray(values)){
var err=new Promise.TypeError("expecting an array, a promise or a thenable\u000a\u000a    See http://goo.gl/s8MMhc\u000a");
this.__hardReject__(err);
return;}}else 

if(values._isPending()){
values._then(
init,
this._reject,
undefined,
this,
resolveValueIfEmpty);

return;}else 
{
this._reject(values._reason());
return;}}else 

if(!isArray(values)){
this._promise._reject(apiRejection("expecting an array, a promise or a thenable\u000a\u000a    See http://goo.gl/s8MMhc\u000a")._reason());
return;}


if(values.length===0){
if(resolveValueIfEmpty===-5){
this._resolveEmptyArray();}else 

{
this._resolve(toResolutionValue(resolveValueIfEmpty));}

return;}

var len=this.getActualLength(values.length);
this._length=len;
this._values=this.shouldCopyValues()?new Array(len):this._values;
var promise=this._promise;
for(var i=0;i<len;++i){
var isResolved=this._isResolved();
var maybePromise=tryConvertToPromise(values[i],promise);
if(maybePromise instanceof Promise){
maybePromise=maybePromise._target();
if(isResolved){
maybePromise._ignoreRejections();}else 
if(maybePromise._isPending()){
maybePromise._proxyPromiseArray(this,i);}else 
if(maybePromise._isFulfilled()){
this._promiseFulfilled(maybePromise._value(),i);}else 
{
this._promiseRejected(maybePromise._reason(),i);}}else 

if(!isResolved){
this._promiseFulfilled(maybePromise,i);}}};




PromiseArray.prototype._isResolved=function(){
return this._values===null;};


PromiseArray.prototype._resolve=function(value){
this._values=null;
this._promise._fulfill(value);};


PromiseArray.prototype.__hardReject__=
PromiseArray.prototype._reject=function(reason){
this._values=null;
this._promise._rejectCallback(reason,false,true);};


PromiseArray.prototype._promiseProgressed=function(progressValue,index){
this._promise._progress({
index:index,
value:progressValue});};




PromiseArray.prototype._promiseFulfilled=function(value,index){
this._values[index]=value;
var totalResolved=++this._totalResolved;
if(totalResolved>=this._length){
this._resolve(this._values);}};



PromiseArray.prototype._promiseRejected=function(reason,index){
this._totalResolved++;
this._reject(reason);};


PromiseArray.prototype.shouldCopyValues=function(){
return true;};


PromiseArray.prototype.getActualLength=function(len){
return len;};


return PromiseArray;};},


{"./util.js":38}],25:[function(_dereq_,module,exports){
"use strict";
var util=_dereq_("./util.js");
var maybeWrapAsError=util.maybeWrapAsError;
var errors=_dereq_("./errors.js");
var TimeoutError=errors.TimeoutError;
var OperationalError=errors.OperationalError;
var haveGetters=util.haveGetters;
var es5=_dereq_("./es5.js");

function isUntypedError(obj){
return obj instanceof Error&&
es5.getPrototypeOf(obj)===Error.prototype;}


var rErrorKey=/^(?:name|message|stack|cause)$/;
function wrapAsOperationalError(obj){
var ret;
if(isUntypedError(obj)){
ret=new OperationalError(obj);
ret.name=obj.name;
ret.message=obj.message;
ret.stack=obj.stack;
var keys=es5.keys(obj);
for(var i=0;i<keys.length;++i){
var key=keys[i];
if(!rErrorKey.test(key)){
ret[key]=obj[key];}}


return ret;}

util.markAsOriginatingFromRejection(obj);
return obj;}


function nodebackForPromise(promise){
return function(err,value){
if(promise===null)return;

if(err){
var wrapped=wrapAsOperationalError(maybeWrapAsError(err));
promise._attachExtraTrace(wrapped);
promise._reject(wrapped);}else 
if(arguments.length>2){
var $_len=arguments.length;var args=new Array($_len-1);for(var $_i=1;$_i<$_len;++$_i){args[$_i-1]=arguments[$_i];}
promise._fulfill(args);}else 
{
promise._fulfill(value);}


promise=null;};}




var PromiseResolver;
if(!haveGetters){
PromiseResolver=function(promise){
this.promise=promise;
this.asCallback=nodebackForPromise(promise);
this.callback=this.asCallback;};}else 


{
PromiseResolver=function(promise){
this.promise=promise;};}


if(haveGetters){
var prop={
get:function(){
return nodebackForPromise(this.promise);}};


es5.defineProperty(PromiseResolver.prototype,"asCallback",prop);
es5.defineProperty(PromiseResolver.prototype,"callback",prop);}


PromiseResolver._nodebackForPromise=nodebackForPromise;

PromiseResolver.prototype.toString=function(){
return "[object PromiseResolver]";};


PromiseResolver.prototype.resolve=
PromiseResolver.prototype.fulfill=function(value){
if(!(this instanceof PromiseResolver)){
throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\u000a\u000a    See http://goo.gl/sdkXL9\u000a");}

this.promise._resolveCallback(value);};


PromiseResolver.prototype.reject=function(reason){
if(!(this instanceof PromiseResolver)){
throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\u000a\u000a    See http://goo.gl/sdkXL9\u000a");}

this.promise._rejectCallback(reason);};


PromiseResolver.prototype.progress=function(value){
if(!(this instanceof PromiseResolver)){
throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\u000a\u000a    See http://goo.gl/sdkXL9\u000a");}

this.promise._progress(value);};


PromiseResolver.prototype.cancel=function(err){
this.promise.cancel(err);};


PromiseResolver.prototype.timeout=function(){
this.reject(new TimeoutError("timeout"));};


PromiseResolver.prototype.isResolved=function(){
return this.promise.isResolved();};


PromiseResolver.prototype.toJSON=function(){
return this.promise.toJSON();};


module.exports=PromiseResolver;},

{"./errors.js":13,"./es5.js":14,"./util.js":38}],26:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL){
var THIS={};
var util=_dereq_("./util.js");
var nodebackForPromise=_dereq_("./promise_resolver.js").
_nodebackForPromise;
var withAppended=util.withAppended;
var maybeWrapAsError=util.maybeWrapAsError;
var canEvaluate=util.canEvaluate;
var TypeError=_dereq_("./errors").TypeError;
var defaultSuffix="Async";
var defaultPromisified={__isPromisified__:true};
var noCopyProps=[
"arity","length",
"name",
"arguments",
"caller",
"callee",
"prototype",
"__isPromisified__"];

var noCopyPropsPattern=new RegExp("^(?:"+noCopyProps.join("|")+")$");

var defaultFilter=function(name){
return util.isIdentifier(name)&&
name.charAt(0)!=="_"&&
name!=="constructor";};


function propsFilter(key){
return !noCopyPropsPattern.test(key);}


function isPromisified(fn){
try{
return fn.__isPromisified__===true;}

catch(e){
return false;}}



function hasPromisified(obj,key,suffix){
var val=util.getDataPropertyOrDefault(obj,key+suffix,
defaultPromisified);
return val?isPromisified(val):false;}

function checkValid(ret,suffix,suffixRegexp){
for(var i=0;i<ret.length;i+=2){
var key=ret[i];
if(suffixRegexp.test(key)){
var keyWithoutAsyncSuffix=key.replace(suffixRegexp,"");
for(var j=0;j<ret.length;j+=2){
if(ret[j]===keyWithoutAsyncSuffix){
throw new TypeError("Cannot promisify an API that has normal methods with '%s'-suffix\u000a\u000a    See http://goo.gl/iWrZbw\u000a".
replace("%s",suffix));}}}}}






function promisifiableMethods(obj,suffix,suffixRegexp,filter){
var keys=util.inheritedDataKeys(obj);
var ret=[];
for(var i=0;i<keys.length;++i){
var key=keys[i];
var value=obj[key];
var passesDefaultFilter=filter===defaultFilter?
true:defaultFilter(key,value,obj);
if(typeof value==="function"&&
!isPromisified(value)&&
!hasPromisified(obj,key,suffix)&&
filter(key,value,obj,passesDefaultFilter)){
ret.push(key,value);}}


checkValid(ret,suffix,suffixRegexp);
return ret;}


var escapeIdentRegex=function(str){
return str.replace(/([$])/,"\\$");};


var makeNodePromisifiedEval;
if(!true){
var switchCaseArgumentOrder=function(likelyArgumentCount){
var ret=[likelyArgumentCount];
var min=Math.max(0,likelyArgumentCount-1-3);
for(var i=likelyArgumentCount-1;i>=min;--i){
ret.push(i);}

for(var i=likelyArgumentCount+1;i<=3;++i){
ret.push(i);}

return ret;};


var argumentSequence=function(argumentCount){
return util.filledRange(argumentCount,"_arg","");};


var parameterDeclaration=function(parameterCount){
return util.filledRange(
Math.max(parameterCount,3),"_arg","");};


var parameterCount=function(fn){
if(typeof fn.length==="number"){
return Math.max(Math.min(fn.length,1023+1),0);}

return 0;};


makeNodePromisifiedEval=
function(callback,receiver,originalName,fn){
var newParameterCount=Math.max(0,parameterCount(fn)-1);
var argumentOrder=switchCaseArgumentOrder(newParameterCount);
var shouldProxyThis=typeof callback==="string"||receiver===THIS;

function generateCallForArgumentCount(count){
var args=argumentSequence(count).join(", ");
var comma=count>0?", ":"";
var ret;
if(shouldProxyThis){
ret="ret = callback.call(this, {{args}}, nodeback); break;\n";}else 
{
ret=receiver===undefined?
"ret = callback({{args}}, nodeback); break;\n":
"ret = callback.call(receiver, {{args}}, nodeback); break;\n";}

return ret.replace("{{args}}",args).replace(", ",comma);}


function generateArgumentSwitchCase(){
var ret="";
for(var i=0;i<argumentOrder.length;++i){
ret+="case "+argumentOrder[i]+":"+
generateCallForArgumentCount(argumentOrder[i]);}


ret+="                                                             \n\
        default:                                                             \n\
            var args = new Array(len + 1);                                   \n\
            var i = 0;                                                       \n\
            for (var i = 0; i < len; ++i) {                                  \n\
               args[i] = arguments[i];                                       \n\
            }                                                                \n\
            args[i] = nodeback;                                              \n\
            [CodeForCall]                                                    \n\
            break;                                                           \n\
        ".replace("[CodeForCall]",shouldProxyThis?
"ret = callback.apply(this, args);\n":
"ret = callback.apply(receiver, args);\n");
return ret;}


var getFunctionCode=typeof callback==="string"?
"this != null ? this['"+callback+"'] : fn":
"fn";

return new Function("Promise",
"fn",
"receiver",
"withAppended",
"maybeWrapAsError",
"nodebackForPromise",
"tryCatch",
"errorObj",
"notEnumerableProp",
"INTERNAL","'use strict';                            \n\
        var ret = function (Parameters) {                                    \n\
            'use strict';                                                    \n\
            var len = arguments.length;                                      \n\
            var promise = new Promise(INTERNAL);                             \n\
            promise._captureStackTrace();                                    \n\
            var nodeback = nodebackForPromise(promise);                      \n\
            var ret;                                                         \n\
            var callback = tryCatch([GetFunctionCode]);                      \n\
            switch(len) {                                                    \n\
                [CodeForSwitchCase]                                          \n\
            }                                                                \n\
            if (ret === errorObj) {                                          \n\
                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n\
            }                                                                \n\
            return promise;                                                  \n\
        };                                                                   \n\
        notEnumerableProp(ret, '__isPromisified__', true);                   \n\
        return ret;                                                          \n\
        ".
replace("Parameters",parameterDeclaration(newParameterCount)).
replace("[CodeForSwitchCase]",generateArgumentSwitchCase()).
replace("[GetFunctionCode]",getFunctionCode))(
Promise,
fn,
receiver,
withAppended,
maybeWrapAsError,
nodebackForPromise,
util.tryCatch,
util.errorObj,
util.notEnumerableProp,
INTERNAL);};}




function makeNodePromisifiedClosure(callback,receiver,_,fn){
var defaultThis=function(){return this;}();
var method=callback;
if(typeof method==="string"){
callback=fn;}

function promisified(){
var _receiver=receiver;
if(receiver===THIS)_receiver=this;
var promise=new Promise(INTERNAL);
promise._captureStackTrace();
var cb=typeof method==="string"&&this!==defaultThis?
this[method]:callback;
var fn=nodebackForPromise(promise);
try{
cb.apply(_receiver,withAppended(arguments,fn));}
catch(e){
promise._rejectCallback(maybeWrapAsError(e),true,true);}

return promise;}

util.notEnumerableProp(promisified,"__isPromisified__",true);
return promisified;}


var makeNodePromisified=canEvaluate?
makeNodePromisifiedEval:
makeNodePromisifiedClosure;

function promisifyAll(obj,suffix,filter,promisifier){
var suffixRegexp=new RegExp(escapeIdentRegex(suffix)+"$");
var methods=
promisifiableMethods(obj,suffix,suffixRegexp,filter);

for(var i=0,len=methods.length;i<len;i+=2){
var key=methods[i];
var fn=methods[i+1];
var promisifiedKey=key+suffix;
if(promisifier===makeNodePromisified){
obj[promisifiedKey]=
makeNodePromisified(key,THIS,key,fn,suffix);}else 
{
var promisified=promisifier(fn,function(){
return makeNodePromisified(key,THIS,key,fn,suffix);});

util.notEnumerableProp(promisified,"__isPromisified__",true);
obj[promisifiedKey]=promisified;}}


util.toFastProperties(obj);
return obj;}


function promisify(callback,receiver){
return makeNodePromisified(callback,receiver,undefined,callback);}


Promise.promisify=function(fn,receiver){
if(typeof fn!=="function"){
throw new TypeError("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");}

if(isPromisified(fn)){
return fn;}

var ret=promisify(fn,arguments.length<2?THIS:receiver);
util.copyDescriptors(fn,ret,propsFilter);
return ret;};


Promise.promisifyAll=function(target,options){
if(typeof target!=="function"&&typeof target!=="object"){
throw new TypeError("the target of promisifyAll must be an object or a function\u000a\u000a    See http://goo.gl/9ITlV0\u000a");}

options=Object(options);
var suffix=options.suffix;
if(typeof suffix!=="string")suffix=defaultSuffix;
var filter=options.filter;
if(typeof filter!=="function")filter=defaultFilter;
var promisifier=options.promisifier;
if(typeof promisifier!=="function")promisifier=makeNodePromisified;

if(!util.isIdentifier(suffix)){
throw new RangeError("suffix must be a valid identifier\u000a\u000a    See http://goo.gl/8FZo5V\u000a");}


var keys=util.inheritedDataKeys(target);
for(var i=0;i<keys.length;++i){
var value=target[keys[i]];
if(keys[i]!=="constructor"&&
util.isClass(value)){
promisifyAll(value.prototype,suffix,filter,promisifier);
promisifyAll(value,suffix,filter,promisifier);}}



return promisifyAll(target,suffix,filter,promisifier);};};},




{"./errors":13,"./promise_resolver.js":25,"./util.js":38}],27:[function(_dereq_,module,exports){
"use strict";
module.exports=function(
Promise,PromiseArray,tryConvertToPromise,apiRejection){
var util=_dereq_("./util.js");
var isObject=util.isObject;
var es5=_dereq_("./es5.js");

function PropertiesPromiseArray(obj){
var keys=es5.keys(obj);
var len=keys.length;
var values=new Array(len*2);
for(var i=0;i<len;++i){
var key=keys[i];
values[i]=obj[key];
values[i+len]=key;}

this.constructor$(values);}

util.inherits(PropertiesPromiseArray,PromiseArray);

PropertiesPromiseArray.prototype._init=function(){
this._init$(undefined,-3);};


PropertiesPromiseArray.prototype._promiseFulfilled=function(value,index){
this._values[index]=value;
var totalResolved=++this._totalResolved;
if(totalResolved>=this._length){
var val={};
var keyOffset=this.length();
for(var i=0,len=this.length();i<len;++i){
val[this._values[i+keyOffset]]=this._values[i];}

this._resolve(val);}};



PropertiesPromiseArray.prototype._promiseProgressed=function(value,index){
this._promise._progress({
key:this._values[index+this.length()],
value:value});};



PropertiesPromiseArray.prototype.shouldCopyValues=function(){
return false;};


PropertiesPromiseArray.prototype.getActualLength=function(len){
return len>>1;};


function props(promises){
var ret;
var castValue=tryConvertToPromise(promises);

if(!isObject(castValue)){
return apiRejection("cannot await properties of a non-object\u000a\u000a    See http://goo.gl/OsFKC8\u000a");}else 
if(castValue instanceof Promise){
ret=castValue._then(
Promise.props,undefined,undefined,undefined,undefined);}else 
{
ret=new PropertiesPromiseArray(castValue).promise();}


if(castValue instanceof Promise){
ret._propagateFrom(castValue,4);}

return ret;}


Promise.prototype.props=function(){
return props(this);};


Promise.props=function(promises){
return props(promises);};};},



{"./es5.js":14,"./util.js":38}],28:[function(_dereq_,module,exports){
"use strict";
function arrayMove(src,srcIndex,dst,dstIndex,len){
for(var j=0;j<len;++j){
dst[j+dstIndex]=src[j+srcIndex];
src[j+srcIndex]=void 0;}}



function Queue(capacity){
this._capacity=capacity;
this._length=0;
this._front=0;}


Queue.prototype._willBeOverCapacity=function(size){
return this._capacity<size;};


Queue.prototype._pushOne=function(arg){
var length=this.length();
this._checkCapacity(length+1);
var i=this._front+length&this._capacity-1;
this[i]=arg;
this._length=length+1;};


Queue.prototype._unshiftOne=function(value){
var capacity=this._capacity;
this._checkCapacity(this.length()+1);
var front=this._front;
var i=(front-1&
capacity-1^capacity)-capacity;
this[i]=value;
this._front=i;
this._length=this.length()+1;};


Queue.prototype.unshift=function(fn,receiver,arg){
this._unshiftOne(arg);
this._unshiftOne(receiver);
this._unshiftOne(fn);};


Queue.prototype.push=function(fn,receiver,arg){
var length=this.length()+3;
if(this._willBeOverCapacity(length)){
this._pushOne(fn);
this._pushOne(receiver);
this._pushOne(arg);
return;}

var j=this._front+length-3;
this._checkCapacity(length);
var wrapMask=this._capacity-1;
this[j+0&wrapMask]=fn;
this[j+1&wrapMask]=receiver;
this[j+2&wrapMask]=arg;
this._length=length;};


Queue.prototype.shift=function(){
var front=this._front,
ret=this[front];

this[front]=undefined;
this._front=front+1&this._capacity-1;
this._length--;
return ret;};


Queue.prototype.length=function(){
return this._length;};


Queue.prototype._checkCapacity=function(size){
if(this._capacity<size){
this._resizeTo(this._capacity<<1);}};



Queue.prototype._resizeTo=function(capacity){
var oldCapacity=this._capacity;
this._capacity=capacity;
var front=this._front;
var length=this._length;
var moveItemsCount=front+length&oldCapacity-1;
arrayMove(this,0,this,oldCapacity,moveItemsCount);};


module.exports=Queue;},

{}],29:[function(_dereq_,module,exports){
"use strict";
module.exports=function(
Promise,INTERNAL,tryConvertToPromise,apiRejection){
var isArray=_dereq_("./util.js").isArray;

var raceLater=function(promise){
return promise.then(function(array){
return race(array,promise);});};



function race(promises,parent){
var maybePromise=tryConvertToPromise(promises);

if(maybePromise instanceof Promise){
return raceLater(maybePromise);}else 
if(!isArray(promises)){
return apiRejection("expecting an array, a promise or a thenable\u000a\u000a    See http://goo.gl/s8MMhc\u000a");}


var ret=new Promise(INTERNAL);
if(parent!==undefined){
ret._propagateFrom(parent,4|1);}

var fulfill=ret._fulfill;
var reject=ret._reject;
for(var i=0,len=promises.length;i<len;++i){
var val=promises[i];

if(val===undefined&&!(i in promises)){
continue;}


Promise.cast(val)._then(fulfill,reject,undefined,ret,null);}

return ret;}


Promise.race=function(promises){
return race(promises,undefined);};


Promise.prototype.race=function(){
return race(this,undefined);};};},




{"./util.js":38}],30:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,
PromiseArray,
apiRejection,
tryConvertToPromise,
INTERNAL){
var getDomain=Promise._getDomain;
var async=_dereq_("./async.js");
var util=_dereq_("./util.js");
var tryCatch=util.tryCatch;
var errorObj=util.errorObj;
function ReductionPromiseArray(promises,fn,accum,_each){
this.constructor$(promises);
this._promise._captureStackTrace();
this._preservedValues=_each===INTERNAL?[]:null;
this._zerothIsAccum=accum===undefined;
this._gotAccum=false;
this._reducingIndex=this._zerothIsAccum?1:0;
this._valuesPhase=undefined;
var maybePromise=tryConvertToPromise(accum,this._promise);
var rejected=false;
var isPromise=maybePromise instanceof Promise;
if(isPromise){
maybePromise=maybePromise._target();
if(maybePromise._isPending()){
maybePromise._proxyPromiseArray(this,-1);}else 
if(maybePromise._isFulfilled()){
accum=maybePromise._value();
this._gotAccum=true;}else 
{
this._reject(maybePromise._reason());
rejected=true;}}


if(!(isPromise||this._zerothIsAccum))this._gotAccum=true;
var domain=getDomain();
this._callback=domain===null?fn:domain.bind(fn);
this._accum=accum;
if(!rejected)async.invoke(init,this,undefined);}

function init(){
this._init$(undefined,-5);}

util.inherits(ReductionPromiseArray,PromiseArray);

ReductionPromiseArray.prototype._init=function(){};

ReductionPromiseArray.prototype._resolveEmptyArray=function(){
if(this._gotAccum||this._zerothIsAccum){
this._resolve(this._preservedValues!==null?
[]:this._accum);}};



ReductionPromiseArray.prototype._promiseFulfilled=function(value,index){
var values=this._values;
values[index]=value;
var length=this.length();
var preservedValues=this._preservedValues;
var isEach=preservedValues!==null;
var gotAccum=this._gotAccum;
var valuesPhase=this._valuesPhase;
var valuesPhaseIndex;
if(!valuesPhase){
valuesPhase=this._valuesPhase=new Array(length);
for(valuesPhaseIndex=0;valuesPhaseIndex<length;++valuesPhaseIndex){
valuesPhase[valuesPhaseIndex]=0;}}


valuesPhaseIndex=valuesPhase[index];

if(index===0&&this._zerothIsAccum){
this._accum=value;
this._gotAccum=gotAccum=true;
valuesPhase[index]=valuesPhaseIndex===0?
1:2;}else 
if(index===-1){
this._accum=value;
this._gotAccum=gotAccum=true;}else 
{
if(valuesPhaseIndex===0){
valuesPhase[index]=1;}else 
{
valuesPhase[index]=2;
this._accum=value;}}


if(!gotAccum)return;

var callback=this._callback;
var receiver=this._promise._boundValue();
var ret;

for(var i=this._reducingIndex;i<length;++i){
valuesPhaseIndex=valuesPhase[i];
if(valuesPhaseIndex===2){
this._reducingIndex=i+1;
continue;}

if(valuesPhaseIndex!==1)return;
value=values[i];
this._promise._pushContext();
if(isEach){
preservedValues.push(value);
ret=tryCatch(callback).call(receiver,value,i,length);}else 

{
ret=tryCatch(callback).
call(receiver,this._accum,value,i,length);}

this._promise._popContext();

if(ret===errorObj)return this._reject(ret.e);

var maybePromise=tryConvertToPromise(ret,this._promise);
if(maybePromise instanceof Promise){
maybePromise=maybePromise._target();
if(maybePromise._isPending()){
valuesPhase[i]=4;
return maybePromise._proxyPromiseArray(this,i);}else 
if(maybePromise._isFulfilled()){
ret=maybePromise._value();}else 
{
return this._reject(maybePromise._reason());}}



this._reducingIndex=i+1;
this._accum=ret;}


this._resolve(isEach?preservedValues:this._accum);};


function reduce(promises,fn,initialValue,_each){
if(typeof fn!=="function")return apiRejection("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");
var array=new ReductionPromiseArray(promises,fn,initialValue,_each);
return array.promise();}


Promise.prototype.reduce=function(fn,initialValue){
return reduce(this,fn,initialValue,null);};


Promise.reduce=function(promises,fn,initialValue,_each){
return reduce(promises,fn,initialValue,_each);};};},



{"./async.js":2,"./util.js":38}],31:[function(_dereq_,module,exports){
"use strict";
var schedule;
var util=_dereq_("./util");
var noAsyncScheduler=function(){
throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/m3OTXk\u000a");};

if(util.isNode&&typeof MutationObserver==="undefined"){
var GlobalSetImmediate=global.setImmediate;
var ProcessNextTick=process.nextTick;
schedule=util.isRecentNode?
function(fn){GlobalSetImmediate.call(global,fn);}:
function(fn){ProcessNextTick.call(process,fn);};}else 
if(typeof MutationObserver!=="undefined"&&
!(typeof window!=="undefined"&&
window.navigator&&
window.navigator.standalone)){
schedule=function(fn){
var div=document.createElement("div");
var observer=new MutationObserver(fn);
observer.observe(div,{attributes:true});
return function(){div.classList.toggle("foo");};};

schedule.isStatic=true;}else 
if(typeof setImmediate!=="undefined"){
schedule=function(fn){
setImmediate(fn);};}else 

if(typeof setTimeout!=="undefined"){
schedule=function(fn){
setTimeout(fn,0);};}else 

{
schedule=noAsyncScheduler;}

module.exports=schedule;},

{"./util":38}],32:[function(_dereq_,module,exports){
"use strict";
module.exports=
function(Promise,PromiseArray){
var PromiseInspection=Promise.PromiseInspection;
var util=_dereq_("./util.js");

function SettledPromiseArray(values){
this.constructor$(values);}

util.inherits(SettledPromiseArray,PromiseArray);

SettledPromiseArray.prototype._promiseResolved=function(index,inspection){
this._values[index]=inspection;
var totalResolved=++this._totalResolved;
if(totalResolved>=this._length){
this._resolve(this._values);}};



SettledPromiseArray.prototype._promiseFulfilled=function(value,index){
var ret=new PromiseInspection();
ret._bitField=268435456;
ret._settledValue=value;
this._promiseResolved(index,ret);};

SettledPromiseArray.prototype._promiseRejected=function(reason,index){
var ret=new PromiseInspection();
ret._bitField=134217728;
ret._settledValue=reason;
this._promiseResolved(index,ret);};


Promise.settle=function(promises){
return new SettledPromiseArray(promises).promise();};


Promise.prototype.settle=function(){
return new SettledPromiseArray(this).promise();};};},



{"./util.js":38}],33:[function(_dereq_,module,exports){
"use strict";
module.exports=
function(Promise,PromiseArray,apiRejection){
var util=_dereq_("./util.js");
var RangeError=_dereq_("./errors.js").RangeError;
var AggregateError=_dereq_("./errors.js").AggregateError;
var isArray=util.isArray;


function SomePromiseArray(values){
this.constructor$(values);
this._howMany=0;
this._unwrap=false;
this._initialized=false;}

util.inherits(SomePromiseArray,PromiseArray);

SomePromiseArray.prototype._init=function(){
if(!this._initialized){
return;}

if(this._howMany===0){
this._resolve([]);
return;}

this._init$(undefined,-5);
var isArrayResolved=isArray(this._values);
if(!this._isResolved()&&
isArrayResolved&&
this._howMany>this._canPossiblyFulfill()){
this._reject(this._getRangeError(this.length()));}};



SomePromiseArray.prototype.init=function(){
this._initialized=true;
this._init();};


SomePromiseArray.prototype.setUnwrap=function(){
this._unwrap=true;};


SomePromiseArray.prototype.howMany=function(){
return this._howMany;};


SomePromiseArray.prototype.setHowMany=function(count){
this._howMany=count;};


SomePromiseArray.prototype._promiseFulfilled=function(value){
this._addFulfilled(value);
if(this._fulfilled()===this.howMany()){
this._values.length=this.howMany();
if(this.howMany()===1&&this._unwrap){
this._resolve(this._values[0]);}else 
{
this._resolve(this._values);}}};




SomePromiseArray.prototype._promiseRejected=function(reason){
this._addRejected(reason);
if(this.howMany()>this._canPossiblyFulfill()){
var e=new AggregateError();
for(var i=this.length();i<this._values.length;++i){
e.push(this._values[i]);}

this._reject(e);}};



SomePromiseArray.prototype._fulfilled=function(){
return this._totalResolved;};


SomePromiseArray.prototype._rejected=function(){
return this._values.length-this.length();};


SomePromiseArray.prototype._addRejected=function(reason){
this._values.push(reason);};


SomePromiseArray.prototype._addFulfilled=function(value){
this._values[this._totalResolved++]=value;};


SomePromiseArray.prototype._canPossiblyFulfill=function(){
return this.length()-this._rejected();};


SomePromiseArray.prototype._getRangeError=function(count){
var message="Input array must contain at least "+
this._howMany+" items but contains only "+count+" items";
return new RangeError(message);};


SomePromiseArray.prototype._resolveEmptyArray=function(){
this._reject(this._getRangeError(0));};


function some(promises,howMany){
if((howMany|0)!==howMany||howMany<0){
return apiRejection("expecting a positive integer\u000a\u000a    See http://goo.gl/1wAmHx\u000a");}

var ret=new SomePromiseArray(promises);
var promise=ret.promise();
ret.setHowMany(howMany);
ret.init();
return promise;}


Promise.some=function(promises,howMany){
return some(promises,howMany);};


Promise.prototype.some=function(howMany){
return some(this,howMany);};


Promise._SomePromiseArray=SomePromiseArray;};},


{"./errors.js":13,"./util.js":38}],34:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise){
function PromiseInspection(promise){
if(promise!==undefined){
promise=promise._target();
this._bitField=promise._bitField;
this._settledValue=promise._settledValue;}else 

{
this._bitField=0;
this._settledValue=undefined;}}



PromiseInspection.prototype.value=function(){
if(!this.isFulfilled()){
throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\u000a\u000a    See http://goo.gl/hc1DLj\u000a");}

return this._settledValue;};


PromiseInspection.prototype.error=
PromiseInspection.prototype.reason=function(){
if(!this.isRejected()){
throw new TypeError("cannot get rejection reason of a non-rejected promise\u000a\u000a    See http://goo.gl/hPuiwB\u000a");}

return this._settledValue;};


PromiseInspection.prototype.isFulfilled=
Promise.prototype._isFulfilled=function(){
return (this._bitField&268435456)>0;};


PromiseInspection.prototype.isRejected=
Promise.prototype._isRejected=function(){
return (this._bitField&134217728)>0;};


PromiseInspection.prototype.isPending=
Promise.prototype._isPending=function(){
return (this._bitField&402653184)===0;};


PromiseInspection.prototype.isResolved=
Promise.prototype._isResolved=function(){
return (this._bitField&402653184)>0;};


Promise.prototype.isPending=function(){
return this._target()._isPending();};


Promise.prototype.isRejected=function(){
return this._target()._isRejected();};


Promise.prototype.isFulfilled=function(){
return this._target()._isFulfilled();};


Promise.prototype.isResolved=function(){
return this._target()._isResolved();};


Promise.prototype._value=function(){
return this._settledValue;};


Promise.prototype._reason=function(){
this._unsetRejectionIsUnhandled();
return this._settledValue;};


Promise.prototype.value=function(){
var target=this._target();
if(!target.isFulfilled()){
throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\u000a\u000a    See http://goo.gl/hc1DLj\u000a");}

return target._settledValue;};


Promise.prototype.reason=function(){
var target=this._target();
if(!target.isRejected()){
throw new TypeError("cannot get rejection reason of a non-rejected promise\u000a\u000a    See http://goo.gl/hPuiwB\u000a");}

target._unsetRejectionIsUnhandled();
return target._settledValue;};



Promise.PromiseInspection=PromiseInspection;};},


{}],35:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL){
var util=_dereq_("./util.js");
var errorObj=util.errorObj;
var isObject=util.isObject;

function tryConvertToPromise(obj,context){
if(isObject(obj)){
if(obj instanceof Promise){
return obj;}else 

if(isAnyBluebirdPromise(obj)){
var ret=new Promise(INTERNAL);
obj._then(
ret._fulfillUnchecked,
ret._rejectUncheckedCheckError,
ret._progressUnchecked,
ret,
null);

return ret;}

var then=util.tryCatch(getThen)(obj);
if(then===errorObj){
if(context)context._pushContext();
var ret=Promise.reject(then.e);
if(context)context._popContext();
return ret;}else 
if(typeof then==="function"){
return doThenable(obj,then,context);}}


return obj;}


function getThen(obj){
return obj.then;}


var hasProp={}.hasOwnProperty;
function isAnyBluebirdPromise(obj){
return hasProp.call(obj,"_promise0");}


function doThenable(x,then,context){
var promise=new Promise(INTERNAL);
var ret=promise;
if(context)context._pushContext();
promise._captureStackTrace();
if(context)context._popContext();
var synchronous=true;
var result=util.tryCatch(then).call(x,
resolveFromThenable,
rejectFromThenable,
progressFromThenable);
synchronous=false;
if(promise&&result===errorObj){
promise._rejectCallback(result.e,true,true);
promise=null;}


function resolveFromThenable(value){
if(!promise)return;
promise._resolveCallback(value);
promise=null;}


function rejectFromThenable(reason){
if(!promise)return;
promise._rejectCallback(reason,synchronous,true);
promise=null;}


function progressFromThenable(value){
if(!promise)return;
if(typeof promise._progress==="function"){
promise._progress(value);}}


return ret;}


return tryConvertToPromise;};},


{"./util.js":38}],36:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,INTERNAL){
var util=_dereq_("./util.js");
var TimeoutError=Promise.TimeoutError;

var afterTimeout=function(promise,message){
if(!promise.isPending())return;

var err;
if(!util.isPrimitive(message)&&message instanceof Error){
err=message;}else 
{
if(typeof message!=="string"){
message="operation timed out";}

err=new TimeoutError(message);}

util.markAsOriginatingFromRejection(err);
promise._attachExtraTrace(err);
promise._cancel(err);};


var afterValue=function(value){return delay(+this).thenReturn(value);};
var delay=Promise.delay=function(value,ms){
if(ms===undefined){
ms=value;
value=undefined;
var ret=new Promise(INTERNAL);
setTimeout(function(){ret._fulfill();},ms);
return ret;}

ms=+ms;
return Promise.resolve(value)._then(afterValue,null,null,ms,undefined);};


Promise.prototype.delay=function(ms){
return delay(this,ms);};


function successClear(value){
var handle=this;
if(handle instanceof Number)handle=+handle;
clearTimeout(handle);
return value;}


function failureClear(reason){
var handle=this;
if(handle instanceof Number)handle=+handle;
clearTimeout(handle);
throw reason;}


Promise.prototype.timeout=function(ms,message){
ms=+ms;
var ret=this.then().cancellable();
ret._cancellationParent=this;
var handle=setTimeout(function timeoutTimeout(){
afterTimeout(ret,message);},
ms);
return ret._then(successClear,failureClear,undefined,handle,undefined);};};},




{"./util.js":38}],37:[function(_dereq_,module,exports){
"use strict";
module.exports=function(Promise,apiRejection,tryConvertToPromise,
createContext){
var TypeError=_dereq_("./errors.js").TypeError;
var inherits=_dereq_("./util.js").inherits;
var PromiseInspection=Promise.PromiseInspection;

function inspectionMapper(inspections){
var len=inspections.length;
for(var i=0;i<len;++i){
var inspection=inspections[i];
if(inspection.isRejected()){
return Promise.reject(inspection.error());}

inspections[i]=inspection._settledValue;}

return inspections;}


function thrower(e){
setTimeout(function(){throw e;},0);}


function castPreservingDisposable(thenable){
var maybePromise=tryConvertToPromise(thenable);
if(maybePromise!==thenable&&
typeof thenable._isDisposable==="function"&&
typeof thenable._getDisposer==="function"&&
thenable._isDisposable()){
maybePromise._setDisposable(thenable._getDisposer());}

return maybePromise;}

function dispose(resources,inspection){
var i=0;
var len=resources.length;
var ret=Promise.defer();
function iterator(){
if(i>=len)return ret.resolve();
var maybePromise=castPreservingDisposable(resources[i++]);
if(maybePromise instanceof Promise&&
maybePromise._isDisposable()){
try{
maybePromise=tryConvertToPromise(
maybePromise._getDisposer().tryDispose(inspection),
resources.promise);}
catch(e){
return thrower(e);}

if(maybePromise instanceof Promise){
return maybePromise._then(iterator,thrower,
null,null,null);}}


iterator();}

iterator();
return ret.promise;}


function disposerSuccess(value){
var inspection=new PromiseInspection();
inspection._settledValue=value;
inspection._bitField=268435456;
return dispose(this,inspection).thenReturn(value);}


function disposerFail(reason){
var inspection=new PromiseInspection();
inspection._settledValue=reason;
inspection._bitField=134217728;
return dispose(this,inspection).thenThrow(reason);}


function Disposer(data,promise,context){
this._data=data;
this._promise=promise;
this._context=context;}


Disposer.prototype.data=function(){
return this._data;};


Disposer.prototype.promise=function(){
return this._promise;};


Disposer.prototype.resource=function(){
if(this.promise().isFulfilled()){
return this.promise().value();}

return null;};


Disposer.prototype.tryDispose=function(inspection){
var resource=this.resource();
var context=this._context;
if(context!==undefined)context._pushContext();
var ret=resource!==null?
this.doDispose(resource,inspection):null;
if(context!==undefined)context._popContext();
this._promise._unsetDisposable();
this._data=null;
return ret;};


Disposer.isDisposer=function(d){
return d!=null&&
typeof d.resource==="function"&&
typeof d.tryDispose==="function";};


function FunctionDisposer(fn,promise,context){
this.constructor$(fn,promise,context);}

inherits(FunctionDisposer,Disposer);

FunctionDisposer.prototype.doDispose=function(resource,inspection){
var fn=this.data();
return fn.call(resource,resource,inspection);};


function maybeUnwrapDisposer(value){
if(Disposer.isDisposer(value)){
this.resources[this.index]._setDisposable(value);
return value.promise();}

return value;}


Promise.using=function(){
var len=arguments.length;
if(len<2)return apiRejection(
"you must pass at least 2 arguments to Promise.using");
var fn=arguments[len-1];
if(typeof fn!=="function")return apiRejection("fn must be a function\u000a\u000a    See http://goo.gl/916lJJ\u000a");

var input;
var spreadArgs=true;
if(len===2&&Array.isArray(arguments[0])){
input=arguments[0];
len=input.length;
spreadArgs=false;}else 
{
input=arguments;
len--;}

var resources=new Array(len);
for(var i=0;i<len;++i){
var resource=input[i];
if(Disposer.isDisposer(resource)){
var disposer=resource;
resource=resource.promise();
resource._setDisposable(disposer);}else 
{
var maybePromise=tryConvertToPromise(resource);
if(maybePromise instanceof Promise){
resource=
maybePromise._then(maybeUnwrapDisposer,null,null,{
resources:resources,
index:i},
undefined);}}


resources[i]=resource;}


var promise=Promise.settle(resources).
then(inspectionMapper).
then(function(vals){
promise._pushContext();
var ret;
try{
ret=spreadArgs?
fn.apply(undefined,vals):fn.call(undefined,vals);}finally 
{
promise._popContext();}

return ret;}).

_then(
disposerSuccess,disposerFail,undefined,resources,undefined);
resources.promise=promise;
return promise;};


Promise.prototype._setDisposable=function(disposer){
this._bitField=this._bitField|262144;
this._disposer=disposer;};


Promise.prototype._isDisposable=function(){
return (this._bitField&262144)>0;};


Promise.prototype._getDisposer=function(){
return this._disposer;};


Promise.prototype._unsetDisposable=function(){
this._bitField=this._bitField&~262144;
this._disposer=undefined;};


Promise.prototype.disposer=function(fn){
if(typeof fn==="function"){
return new FunctionDisposer(fn,this,createContext());}

throw new TypeError();};};},




{"./errors.js":13,"./util.js":38}],38:[function(_dereq_,module,exports){
"use strict";
var es5=_dereq_("./es5.js");
var canEvaluate=typeof navigator=="undefined";
var haveGetters=function(){
try{
var o={};
es5.defineProperty(o,"f",{
get:function(){
return 3;}});


return o.f===3;}

catch(e){
return false;}}();




var errorObj={e:{}};
var tryCatchTarget;
function tryCatcher(){
try{
var target=tryCatchTarget;
tryCatchTarget=null;
return target.apply(this,arguments);}
catch(e){
errorObj.e=e;
return errorObj;}}


function tryCatch(fn){
tryCatchTarget=fn;
return tryCatcher;}


var inherits=function(Child,Parent){
var hasProp={}.hasOwnProperty;

function T(){
this.constructor=Child;
this.constructor$=Parent;
for(var propertyName in Parent.prototype){
if(hasProp.call(Parent.prototype,propertyName)&&
propertyName.charAt(propertyName.length-1)!=="$")
{
this[propertyName+"$"]=Parent.prototype[propertyName];}}}



T.prototype=Parent.prototype;
Child.prototype=new T();
return Child.prototype;};



function isPrimitive(val){
return val==null||val===true||val===false||
typeof val==="string"||typeof val==="number";}



function isObject(value){
return !isPrimitive(value);}


function maybeWrapAsError(maybeError){
if(!isPrimitive(maybeError))return maybeError;

return new Error(safeToString(maybeError));}


function withAppended(target,appendee){
var len=target.length;
var ret=new Array(len+1);
var i;
for(i=0;i<len;++i){
ret[i]=target[i];}

ret[i]=appendee;
return ret;}


function getDataPropertyOrDefault(obj,key,defaultValue){
if(es5.isES5){
var desc=Object.getOwnPropertyDescriptor(obj,key);

if(desc!=null){
return desc.get==null&&desc.set==null?
desc.value:
defaultValue;}}else 

{
return {}.hasOwnProperty.call(obj,key)?obj[key]:undefined;}}



function notEnumerableProp(obj,name,value){
if(isPrimitive(obj))return obj;
var descriptor={
value:value,
configurable:true,
enumerable:false,
writable:true};

es5.defineProperty(obj,name,descriptor);
return obj;}


function thrower(r){
throw r;}


var inheritedDataKeys=function(){
var excludedPrototypes=[
Array.prototype,
Object.prototype,
Function.prototype];


var isExcludedProto=function(val){
for(var i=0;i<excludedPrototypes.length;++i){
if(excludedPrototypes[i]===val){
return true;}}


return false;};


if(es5.isES5){
var getKeys=Object.getOwnPropertyNames;
return function(obj){
var ret=[];
var visitedKeys=Object.create(null);
while(obj!=null&&!isExcludedProto(obj)){
var keys;
try{
keys=getKeys(obj);}
catch(e){
return ret;}

for(var i=0;i<keys.length;++i){
var key=keys[i];
if(visitedKeys[key])continue;
visitedKeys[key]=true;
var desc=Object.getOwnPropertyDescriptor(obj,key);
if(desc!=null&&desc.get==null&&desc.set==null){
ret.push(key);}}


obj=es5.getPrototypeOf(obj);}

return ret;};}else 

{
var hasProp={}.hasOwnProperty;
return function(obj){
if(isExcludedProto(obj))return [];
var ret=[];


enumeration: for(var key in obj){
if(hasProp.call(obj,key)){
ret.push(key);}else 
{
for(var i=0;i<excludedPrototypes.length;++i){
if(hasProp.call(excludedPrototypes[i],key)){
continue enumeration;}}


ret.push(key);}}


return ret;};}}();





var thisAssignmentPattern=/this\s*\.\s*\S+\s*=/;
function isClass(fn){
try{
if(typeof fn==="function"){
var keys=es5.names(fn.prototype);

var hasMethods=es5.isES5&&keys.length>1;
var hasMethodsOtherThanConstructor=keys.length>0&&
!(keys.length===1&&keys[0]==="constructor");
var hasThisAssignmentAndStaticMethods=
thisAssignmentPattern.test(fn+"")&&es5.names(fn).length>0;

if(hasMethods||hasMethodsOtherThanConstructor||
hasThisAssignmentAndStaticMethods){
return true;}}


return false;}
catch(e){
return false;}}



function toFastProperties(obj){

function f(){}
f.prototype=obj;
var l=8;
while(l--){new f();}
return obj;
eval(obj);}


var rident=/^[a-z$_][a-z$_0-9]*$/i;
function isIdentifier(str){
return rident.test(str);}


function filledRange(count,prefix,suffix){
var ret=new Array(count);
for(var i=0;i<count;++i){
ret[i]=prefix+i+suffix;}

return ret;}


function safeToString(obj){
try{
return obj+"";}
catch(e){
return "[no string representation]";}}



function markAsOriginatingFromRejection(e){
try{
notEnumerableProp(e,"isOperational",true);}

catch(ignore){}}


function originatesFromRejection(e){
if(e==null)return false;
return e instanceof Error["__BluebirdErrorTypes__"].OperationalError||
e["isOperational"]===true;}


function canAttachTrace(obj){
return obj instanceof Error&&es5.propertyIsWritable(obj,"stack");}


var ensureErrorObject=function(){
if(!("stack" in new Error())){
return function(value){
if(canAttachTrace(value))return value;
try{throw new Error(safeToString(value));}
catch(err){return err;}};}else 

{
return function(value){
if(canAttachTrace(value))return value;
return new Error(safeToString(value));};}}();




function classString(obj){
return {}.toString.call(obj);}


function copyDescriptors(from,to,filter){
var keys=es5.names(from);
for(var i=0;i<keys.length;++i){
var key=keys[i];
if(filter(key)){
try{
es5.defineProperty(to,key,es5.getDescriptor(from,key));}
catch(ignore){}}}}




var ret={
isClass:isClass,
isIdentifier:isIdentifier,
inheritedDataKeys:inheritedDataKeys,
getDataPropertyOrDefault:getDataPropertyOrDefault,
thrower:thrower,
isArray:es5.isArray,
haveGetters:haveGetters,
notEnumerableProp:notEnumerableProp,
isPrimitive:isPrimitive,
isObject:isObject,
canEvaluate:canEvaluate,
errorObj:errorObj,
tryCatch:tryCatch,
inherits:inherits,
withAppended:withAppended,
maybeWrapAsError:maybeWrapAsError,
toFastProperties:toFastProperties,
filledRange:filledRange,
toString:safeToString,
canAttachTrace:canAttachTrace,
ensureErrorObject:ensureErrorObject,
originatesFromRejection:originatesFromRejection,
markAsOriginatingFromRejection:markAsOriginatingFromRejection,
classString:classString,
copyDescriptors:copyDescriptors,
hasDevTools:typeof chrome!=="undefined"&&chrome&&
typeof chrome.loadTimes==="function",
isNode:typeof process!=="undefined"&&
classString(process).toLowerCase()==="[object process]"};

ret.isRecentNode=ret.isNode&&function(){
var version=process.versions.node.split(".").map(Number);
return version[0]===0&&version[1]>10||version[0]>0;}();


if(ret.isNode)ret.toFastProperties(process);

try{throw new Error();}catch(e){ret.lastLineError=e;}
module.exports=ret;},

{"./es5.js":14}]},{},[4])(4);});
;if(typeof window!=='undefined'&&window!==null){window.P=window.Promise;}else if(typeof self!=='undefined'&&self!==null){self.P=self.Promise;}
});
__d('base-64/base64.js',function(global, require, module, exports) {  ;
(function(root){


var freeExports=typeof exports=='object'&&exports;


var freeModule=typeof module=='object'&&module&&
module.exports==freeExports&&module;



var freeGlobal=typeof global=='object'&&global;
if(freeGlobal.global===freeGlobal||freeGlobal.window===freeGlobal){
root=freeGlobal;}




var InvalidCharacterError=function(message){
this.message=message;};

InvalidCharacterError.prototype=new Error();
InvalidCharacterError.prototype.name='InvalidCharacterError';

var error=function(message){


throw new InvalidCharacterError(message);};


var TABLE='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

var REGEX_SPACE_CHARACTERS=/[\t\n\f\r ]/g;





var decode=function(input){
input=String(input).
replace(REGEX_SPACE_CHARACTERS,'');
var length=input.length;
if(length%4==0){
input=input.replace(/==?$/,'');
length=input.length;}

if(
length%4==1||

/[^+a-zA-Z0-9/]/.test(input))
{
error(
'Invalid character: the string to be decoded is not correctly encoded.');}


var bitCounter=0;
var bitStorage;
var buffer;
var output='';
var position=-1;
while(++position<length){
buffer=TABLE.indexOf(input.charAt(position));
bitStorage=bitCounter%4?bitStorage*64+buffer:buffer;

if(bitCounter++%4){

output+=String.fromCharCode(
0xFF&bitStorage>>(-2*bitCounter&6));}}



return output;};




var encode=function(input){
input=String(input);
if(/[^\0-\xFF]/.test(input)){


error(
'The string to be encoded contains characters outside of the '+
'Latin1 range.');}


var padding=input.length%3;
var output='';
var position=-1;
var a;
var b;
var c;
var d;
var buffer;

var length=input.length-padding;

while(++position<length){

a=input.charCodeAt(position)<<16;
b=input.charCodeAt(++position)<<8;
c=input.charCodeAt(++position);
buffer=a+b+c;


output+=
TABLE.charAt(buffer>>18&0x3F)+
TABLE.charAt(buffer>>12&0x3F)+
TABLE.charAt(buffer>>6&0x3F)+
TABLE.charAt(buffer&0x3F);}



if(padding==2){
a=input.charCodeAt(position)<<8;
b=input.charCodeAt(++position);
buffer=a+b;
output+=
TABLE.charAt(buffer>>10)+
TABLE.charAt(buffer>>4&0x3F)+
TABLE.charAt(buffer<<2&0x3F)+
'=';}else 

if(padding==1){
buffer=input.charCodeAt(position);
output+=
TABLE.charAt(buffer>>2)+
TABLE.charAt(buffer<<4&0x3F)+
'==';}



return output;};


var base64={
'encode':encode,
'decode':decode,
'version':'0.1.0'};




if(
typeof define=='function'&&
typeof define.amd=='object'&&
define.amd)
{
define(function(){
return base64;});}else 

if(freeExports&&!freeExports.nodeType){
if(freeModule){
freeModule.exports=base64;}else 
{
for(var key in base64){
base64.hasOwnProperty(key)&&(freeExports[key]=base64[key]);}}}else 


{
root.base64=base64;}})(


this);
});
__d('utf8/utf8.js',function(global, require, module, exports) {  ;
(function(root){


var freeExports=typeof exports=='object'&&exports;


var freeModule=typeof module=='object'&&module&&
module.exports==freeExports&&module;



var freeGlobal=typeof global=='object'&&global;
if(freeGlobal.global===freeGlobal||freeGlobal.window===freeGlobal){
root=freeGlobal;}




var stringFromCharCode=String.fromCharCode;


function ucs2decode(string){
var output=[];
var counter=0;
var length=string.length;
var value;
var extra;
while(counter<length){
value=string.charCodeAt(counter++);
if(value>=0xD800&&value<=0xDBFF&&counter<length){

extra=string.charCodeAt(counter++);
if((extra&0xFC00)==0xDC00){
output.push(((value&0x3FF)<<10)+(extra&0x3FF)+0x10000);}else 
{


output.push(value);
counter--;}}else 

{
output.push(value);}}


return output;}



function ucs2encode(array){
var length=array.length;
var index=-1;
var value;
var output='';
while(++index<length){
value=array[index];
if(value>0xFFFF){
value-=0x10000;
output+=stringFromCharCode(value>>>10&0x3FF|0xD800);
value=0xDC00|value&0x3FF;}

output+=stringFromCharCode(value);}

return output;}


function checkScalarValue(codePoint){
if(codePoint>=0xD800&&codePoint<=0xDFFF){
throw Error(
'Lone surrogate U+'+codePoint.toString(16).toUpperCase()+
' is not a scalar value');}}





function createByte(codePoint,shift){
return stringFromCharCode(codePoint>>shift&0x3F|0x80);}


function encodeCodePoint(codePoint){
if((codePoint&0xFFFFFF80)==0){
return stringFromCharCode(codePoint);}

var symbol='';
if((codePoint&0xFFFFF800)==0){
symbol=stringFromCharCode(codePoint>>6&0x1F|0xC0);}else 

if((codePoint&0xFFFF0000)==0){
checkScalarValue(codePoint);
symbol=stringFromCharCode(codePoint>>12&0x0F|0xE0);
symbol+=createByte(codePoint,6);}else 

if((codePoint&0xFFE00000)==0){
symbol=stringFromCharCode(codePoint>>18&0x07|0xF0);
symbol+=createByte(codePoint,12);
symbol+=createByte(codePoint,6);}

symbol+=stringFromCharCode(codePoint&0x3F|0x80);
return symbol;}


function utf8encode(string){
var codePoints=ucs2decode(string);
var length=codePoints.length;
var index=-1;
var codePoint;
var byteString='';
while(++index<length){
codePoint=codePoints[index];
byteString+=encodeCodePoint(codePoint);}

return byteString;}




function readContinuationByte(){
if(byteIndex>=byteCount){
throw Error('Invalid byte index');}


var continuationByte=byteArray[byteIndex]&0xFF;
byteIndex++;

if((continuationByte&0xC0)==0x80){
return continuationByte&0x3F;}



throw Error('Invalid continuation byte');}


function decodeSymbol(){
var byte1;
var byte2;
var byte3;
var byte4;
var codePoint;

if(byteIndex>byteCount){
throw Error('Invalid byte index');}


if(byteIndex==byteCount){
return false;}



byte1=byteArray[byteIndex]&0xFF;
byteIndex++;


if((byte1&0x80)==0){
return byte1;}



if((byte1&0xE0)==0xC0){
var byte2=readContinuationByte();
codePoint=(byte1&0x1F)<<6|byte2;
if(codePoint>=0x80){
return codePoint;}else 
{
throw Error('Invalid continuation byte');}}




if((byte1&0xF0)==0xE0){
byte2=readContinuationByte();
byte3=readContinuationByte();
codePoint=(byte1&0x0F)<<12|byte2<<6|byte3;
if(codePoint>=0x0800){
checkScalarValue(codePoint);
return codePoint;}else 
{
throw Error('Invalid continuation byte');}}




if((byte1&0xF8)==0xF0){
byte2=readContinuationByte();
byte3=readContinuationByte();
byte4=readContinuationByte();
codePoint=(byte1&0x0F)<<0x12|byte2<<0x0C|
byte3<<0x06|byte4;
if(codePoint>=0x010000&&codePoint<=0x10FFFF){
return codePoint;}}



throw Error('Invalid UTF-8 detected');}


var byteArray;
var byteCount;
var byteIndex;
function utf8decode(byteString){
byteArray=ucs2decode(byteString);
byteCount=byteArray.length;
byteIndex=0;
var codePoints=[];
var tmp;
while((tmp=decodeSymbol())!==false){
codePoints.push(tmp);}

return ucs2encode(codePoints);}




var utf8={
'version':'2.0.0',
'encode':utf8encode,
'decode':utf8decode};




if(
typeof define=='function'&&
typeof define.amd=='object'&&
define.amd)
{
define(function(){
return utf8;});}else 

if(freeExports&&!freeExports.nodeType){
if(freeModule){
freeModule.exports=utf8;}else 
{
var object={};
var hasOwnProperty=object.hasOwnProperty;
for(var key in utf8){
hasOwnProperty.call(utf8,key)&&(freeExports[key]=utf8[key]);}}}else 


{
root.utf8=utf8;}})(


this);
});
__d('async/lib/async.js',function(global, require, module, exports) {  (






function(){

var async={};
function noop(){}
function identity(v){
return v;}

function toBool(v){
return !!v;}

function notId(v){
return !v;}



var previous_async;




var root=typeof self==='object'&&self.self===self&&self||
typeof global==='object'&&global.global===global&&global||
this;

if(root!=null){
previous_async=root.async;}


async.noConflict=function(){
root.async=previous_async;
return async;};


function only_once(fn){
return function(){
if(fn===null)throw new Error("Callback was already called.");
fn.apply(this,arguments);
fn=null;};}



function _once(fn){
return function(){
if(fn===null)return;
fn.apply(this,arguments);
fn=null;};}





var _toString=Object.prototype.toString;

var _isArray=Array.isArray||function(obj){
return _toString.call(obj)==='[object Array]';};



var _isObject=function(obj){
var type=typeof obj;
return type==='function'||type==='object'&&!!obj;};


function _isArrayLike(arr){
return _isArray(arr)||

typeof arr.length==="number"&&
arr.length>=0&&
arr.length%1===0;}



function _arrayEach(arr,iterator){
var index=-1,
length=arr.length;

while(++index<length){
iterator(arr[index],index,arr);}}



function _map(arr,iterator){
var index=-1,
length=arr.length,
result=Array(length);

while(++index<length){
result[index]=iterator(arr[index],index,arr);}

return result;}


function _range(count){
return _map(Array(count),function(v,i){return i;});}


function _reduce(arr,iterator,memo){
_arrayEach(arr,function(x,i,a){
memo=iterator(memo,x,i,a);});

return memo;}


function _forEachOf(object,iterator){
_arrayEach(_keys(object),function(key){
iterator(object[key],key);});}



function _indexOf(arr,item){
for(var i=0;i<arr.length;i++){
if(arr[i]===item)return i;}

return -1;}


var _keys=Object.keys||function(obj){
var keys=[];
for(var k in obj){
if(obj.hasOwnProperty(k)){
keys.push(k);}}


return keys;};


function _keyIterator(coll){
var i=-1;
var len;
var keys;
if(_isArrayLike(coll)){
len=coll.length;
return function next(){
i++;
return i<len?i:null;};}else 

{
keys=_keys(coll);
len=keys.length;
return function next(){
i++;
return i<len?keys[i]:null;};}}







function _restParam(func,startIndex){
startIndex=startIndex==null?func.length-1:+startIndex;
return function(){
var length=Math.max(arguments.length-startIndex,0);
var rest=Array(length);
for(var index=0;index<length;index++){
rest[index]=arguments[index+startIndex];}

switch(startIndex){
case 0:return func.call(this,rest);
case 1:return func.call(this,arguments[0],rest);}};}











function _withoutIndex(iterator){
return function(value,index,callback){
return iterator(value,callback);};}








var _setImmediate=typeof setImmediate==='function'&&setImmediate;

var _delay=_setImmediate?function(fn){

_setImmediate(fn);}:
function(fn){
setTimeout(fn,0);};


if(typeof process==='object'&&typeof process.nextTick==='function'){
async.nextTick=process.nextTick;}else 
{
async.nextTick=_delay;}

async.setImmediate=_setImmediate?_delay:async.nextTick;


async.forEach=
async.each=function(arr,iterator,callback){
return async.eachOf(arr,_withoutIndex(iterator),callback);};


async.forEachSeries=
async.eachSeries=function(arr,iterator,callback){
return async.eachOfSeries(arr,_withoutIndex(iterator),callback);};



async.forEachLimit=
async.eachLimit=function(arr,limit,iterator,callback){
return _eachOfLimit(limit)(arr,_withoutIndex(iterator),callback);};


async.forEachOf=
async.eachOf=function(object,iterator,callback){
callback=_once(callback||noop);
object=object||[];

var iter=_keyIterator(object);
var key,completed=0;

while((key=iter())!=null){
completed+=1;
iterator(object[key],key,only_once(done));}


if(completed===0)callback(null);

function done(err){
completed--;
if(err){
callback(err);}else 



if(key===null&&completed<=0){
callback(null);}}};




async.forEachOfSeries=
async.eachOfSeries=function(obj,iterator,callback){
callback=_once(callback||noop);
obj=obj||[];
var nextKey=_keyIterator(obj);
var key=nextKey();
function iterate(){
var sync=true;
if(key===null){
return callback(null);}

iterator(obj[key],key,only_once(function(err){
if(err){
callback(err);}else 

{
key=nextKey();
if(key===null){
return callback(null);}else 
{
if(sync){
async.setImmediate(iterate);}else 
{
iterate();}}}}));




sync=false;}

iterate();};




async.forEachOfLimit=
async.eachOfLimit=function(obj,limit,iterator,callback){
_eachOfLimit(limit)(obj,iterator,callback);};


function _eachOfLimit(limit){

return function(obj,iterator,callback){
callback=_once(callback||noop);
obj=obj||[];
var nextKey=_keyIterator(obj);
if(limit<=0){
return callback(null);}

var done=false;
var running=0;
var errored=false;

(function replenish(){
if(done&&running<=0){
return callback(null);}


while(running<limit&&!errored){
var key=nextKey();
if(key===null){
done=true;
if(running<=0){
callback(null);}

return;}

running+=1;
iterator(obj[key],key,only_once(function(err){
running-=1;
if(err){
callback(err);
errored=true;}else 

{
replenish();}}));}})();};}








function doParallel(fn){
return function(obj,iterator,callback){
return fn(async.eachOf,obj,iterator,callback);};}


function doParallelLimit(fn){
return function(obj,limit,iterator,callback){
return fn(_eachOfLimit(limit),obj,iterator,callback);};}


function doSeries(fn){
return function(obj,iterator,callback){
return fn(async.eachOfSeries,obj,iterator,callback);};}



function _asyncMap(eachfn,arr,iterator,callback){
callback=_once(callback||noop);
arr=arr||[];
var results=_isArrayLike(arr)?[]:{};
eachfn(arr,function(value,index,callback){
iterator(value,function(err,v){
results[index]=v;
callback(err);});},

function(err){
callback(err,results);});}



async.map=doParallel(_asyncMap);
async.mapSeries=doSeries(_asyncMap);
async.mapLimit=doParallelLimit(_asyncMap);



async.inject=
async.foldl=
async.reduce=function(arr,memo,iterator,callback){
async.eachOfSeries(arr,function(x,i,callback){
iterator(memo,x,function(err,v){
memo=v;
callback(err);});},

function(err){
callback(err,memo);});};



async.foldr=
async.reduceRight=function(arr,memo,iterator,callback){
var reversed=_map(arr,identity).reverse();
async.reduce(reversed,memo,iterator,callback);};


async.transform=function(arr,memo,iterator,callback){
if(arguments.length===3){
callback=iterator;
iterator=memo;
memo=_isArray(arr)?[]:{};}


async.eachOf(arr,function(v,k,cb){
iterator(memo,v,k,cb);},
function(err){
callback(err,memo);});};



function _filter(eachfn,arr,iterator,callback){
var results=[];
eachfn(arr,function(x,index,callback){
iterator(x,function(v){
if(v){
results.push({index:index,value:x});}

callback();});},

function(){
callback(_map(results.sort(function(a,b){
return a.index-b.index;}),
function(x){
return x.value;}));});}




async.select=
async.filter=doParallel(_filter);

async.selectLimit=
async.filterLimit=doParallelLimit(_filter);

async.selectSeries=
async.filterSeries=doSeries(_filter);

function _reject(eachfn,arr,iterator,callback){
_filter(eachfn,arr,function(value,cb){
iterator(value,function(v){
cb(!v);});},

callback);}

async.reject=doParallel(_reject);
async.rejectLimit=doParallelLimit(_reject);
async.rejectSeries=doSeries(_reject);

function _createTester(eachfn,check,getResult){
return function(arr,limit,iterator,cb){
function done(){
if(cb)cb(getResult(false,void 0));}

function iteratee(x,_,callback){
if(!cb)return callback();
iterator(x,function(v){
if(cb&&check(v)){
cb(getResult(true,x));
cb=iterator=false;}

callback();});}


if(arguments.length>3){
eachfn(arr,limit,iteratee,done);}else 
{
cb=iterator;
iterator=limit;
eachfn(arr,iteratee,done);}};}




async.any=
async.some=_createTester(async.eachOf,toBool,identity);

async.someLimit=_createTester(async.eachOfLimit,toBool,identity);

async.all=
async.every=_createTester(async.eachOf,notId,notId);

async.everyLimit=_createTester(async.eachOfLimit,notId,notId);

function _findGetResult(v,x){
return x;}

async.detect=_createTester(async.eachOf,identity,_findGetResult);
async.detectSeries=_createTester(async.eachOfSeries,identity,_findGetResult);
async.detectLimit=_createTester(async.eachOfLimit,identity,_findGetResult);

async.sortBy=function(arr,iterator,callback){
async.map(arr,function(x,callback){
iterator(x,function(err,criteria){
if(err){
callback(err);}else 

{
callback(null,{value:x,criteria:criteria});}});},


function(err,results){
if(err){
return callback(err);}else 

{
callback(null,_map(results.sort(comparator),function(x){
return x.value;}));}});





function comparator(left,right){
var a=left.criteria,b=right.criteria;
return a<b?-1:a>b?1:0;}};



async.auto=function(tasks,concurrency,callback){
if(typeof arguments[1]==='function'){

callback=concurrency;
concurrency=null;}

callback=_once(callback||noop);
var keys=_keys(tasks);
var remainingTasks=keys.length;
if(!remainingTasks){
return callback(null);}

if(!concurrency){
concurrency=remainingTasks;}


var results={};
var runningTasks=0;

var hasError=false;

var listeners=[];
function addListener(fn){
listeners.unshift(fn);}

function removeListener(fn){
var idx=_indexOf(listeners,fn);
if(idx>=0)listeners.splice(idx,1);}

function taskComplete(){
remainingTasks--;
_arrayEach(listeners.slice(0),function(fn){
fn();});}



addListener(function(){
if(!remainingTasks){
callback(null,results);}});



_arrayEach(keys,function(k){
if(hasError)return;
var task=_isArray(tasks[k])?tasks[k]:[tasks[k]];
var taskCallback=_restParam(function(err,args){
runningTasks--;
if(args.length<=1){
args=args[0];}

if(err){
var safeResults={};
_forEachOf(results,function(val,rkey){
safeResults[rkey]=val;});

safeResults[k]=args;
hasError=true;

callback(err,safeResults);}else 

{
results[k]=args;
async.setImmediate(taskComplete);}});


var requires=task.slice(0,task.length-1);

var len=requires.length;
var dep;
while(len--){
if(!(dep=tasks[requires[len]])){
throw new Error('Has inexistant dependency');}

if(_isArray(dep)&&_indexOf(dep,k)>=0){
throw new Error('Has cyclic dependencies');}}


function ready(){
return runningTasks<concurrency&&_reduce(requires,function(a,x){
return a&&results.hasOwnProperty(x);},
true)&&!results.hasOwnProperty(k);}

if(ready()){
runningTasks++;
task[task.length-1](taskCallback,results);}else 

{
addListener(listener);}

function listener(){
if(ready()){
runningTasks++;
removeListener(listener);
task[task.length-1](taskCallback,results);}}});};







async.retry=function(times,task,callback){
var DEFAULT_TIMES=5;
var DEFAULT_INTERVAL=0;

var attempts=[];

var opts={
times:DEFAULT_TIMES,
interval:DEFAULT_INTERVAL};


function parseTimes(acc,t){
if(typeof t==='number'){
acc.times=parseInt(t,10)||DEFAULT_TIMES;}else 
if(typeof t==='object'){
acc.times=parseInt(t.times,10)||DEFAULT_TIMES;
acc.interval=parseInt(t.interval,10)||DEFAULT_INTERVAL;}else 
{
throw new Error('Unsupported argument type for \'times\': '+typeof t);}}



var length=arguments.length;
if(length<1||length>3){
throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');}else 
if(length<=2&&typeof times==='function'){
callback=task;
task=times;}

if(typeof times!=='function'){
parseTimes(opts,times);}

opts.callback=callback;
opts.task=task;

function wrappedTask(wrappedCallback,wrappedResults){
function retryAttempt(task,finalAttempt){
return function(seriesCallback){
task(function(err,result){
seriesCallback(!err||finalAttempt,{err:err,result:result});},
wrappedResults);};}



function retryInterval(interval){
return function(seriesCallback){
setTimeout(function(){
seriesCallback(null);},
interval);};}



while(opts.times){

var finalAttempt=!(opts.times-=1);
attempts.push(retryAttempt(opts.task,finalAttempt));
if(!finalAttempt&&opts.interval>0){
attempts.push(retryInterval(opts.interval));}}



async.series(attempts,function(done,data){
data=data[data.length-1];
(wrappedCallback||opts.callback)(data.err,data.result);});}




return opts.callback?wrappedTask():wrappedTask;};


async.waterfall=function(tasks,callback){
callback=_once(callback||noop);
if(!_isArray(tasks)){
var err=new Error('First argument to waterfall must be an array of functions');
return callback(err);}

if(!tasks.length){
return callback();}

function wrapIterator(iterator){
return _restParam(function(err,args){
if(err){
callback.apply(null,[err].concat(args));}else 

{
var next=iterator.next();
if(next){
args.push(wrapIterator(next));}else 

{
args.push(callback);}

ensureAsync(iterator).apply(null,args);}});}



wrapIterator(async.iterator(tasks))();};


function _parallel(eachfn,tasks,callback){
callback=callback||noop;
var results=_isArrayLike(tasks)?[]:{};

eachfn(tasks,function(task,key,callback){
task(_restParam(function(err,args){
if(args.length<=1){
args=args[0];}

results[key]=args;
callback(err);}));},

function(err){
callback(err,results);});}



async.parallel=function(tasks,callback){
_parallel(async.eachOf,tasks,callback);};


async.parallelLimit=function(tasks,limit,callback){
_parallel(_eachOfLimit(limit),tasks,callback);};


async.series=function(tasks,callback){
_parallel(async.eachOfSeries,tasks,callback);};


async.iterator=function(tasks){
function makeCallback(index){
function fn(){
if(tasks.length){
tasks[index].apply(null,arguments);}

return fn.next();}

fn.next=function(){
return index<tasks.length-1?makeCallback(index+1):null;};

return fn;}

return makeCallback(0);};


async.apply=_restParam(function(fn,args){
return _restParam(function(callArgs){
return fn.apply(
null,args.concat(callArgs));});});




function _concat(eachfn,arr,fn,callback){
var result=[];
eachfn(arr,function(x,index,cb){
fn(x,function(err,y){
result=result.concat(y||[]);
cb(err);});},

function(err){
callback(err,result);});}


async.concat=doParallel(_concat);
async.concatSeries=doSeries(_concat);

async.whilst=function(test,iterator,callback){
callback=callback||noop;
if(test()){
var next=_restParam(function(err,args){
if(err){
callback(err);}else 
if(test.apply(this,args)){
iterator(next);}else 
{
callback.apply(null,[null].concat(args));}});


iterator(next);}else 
{
callback(null);}};



async.doWhilst=function(iterator,test,callback){
var calls=0;
return async.whilst(function(){
return ++calls<=1||test.apply(this,arguments);},
iterator,callback);};


async.until=function(test,iterator,callback){
return async.whilst(function(){
return !test.apply(this,arguments);},
iterator,callback);};


async.doUntil=function(iterator,test,callback){
return async.doWhilst(iterator,function(){
return !test.apply(this,arguments);},
callback);};


async.during=function(test,iterator,callback){
callback=callback||noop;

var next=_restParam(function(err,args){
if(err){
callback(err);}else 
{
args.push(check);
test.apply(this,args);}});



var check=function(err,truth){
if(err){
callback(err);}else 
if(truth){
iterator(next);}else 
{
callback(null);}};



test(check);};


async.doDuring=function(iterator,test,callback){
var calls=0;
async.during(function(next){
if(calls++<1){
next(null,true);}else 
{
test.apply(this,arguments);}},

iterator,callback);};


function _queue(worker,concurrency,payload){
if(concurrency==null){
concurrency=1;}else 

if(concurrency===0){
throw new Error('Concurrency must not be zero');}

function _insert(q,data,pos,callback){
if(callback!=null&&typeof callback!=="function"){
throw new Error("task callback must be a function");}

q.started=true;
if(!_isArray(data)){
data=[data];}

if(data.length===0&&q.idle()){

return async.setImmediate(function(){
q.drain();});}


_arrayEach(data,function(task){
var item={
data:task,
callback:callback||noop};


if(pos){
q.tasks.unshift(item);}else 
{
q.tasks.push(item);}


if(q.tasks.length===q.concurrency){
q.saturated();}});


async.setImmediate(q.process);}

function _next(q,tasks){
return function(){
workers-=1;

var removed=false;
var args=arguments;
_arrayEach(tasks,function(task){
_arrayEach(workersList,function(worker,index){
if(worker===task&&!removed){
workersList.splice(index,1);
removed=true;}});



task.callback.apply(task,args);});

if(q.tasks.length+workers===0){
q.drain();}

q.process();};}



var workers=0;
var workersList=[];
var q={
tasks:[],
concurrency:concurrency,
payload:payload,
saturated:noop,
empty:noop,
drain:noop,
started:false,
paused:false,
push:function(data,callback){
_insert(q,data,false,callback);},

kill:function(){
q.drain=noop;
q.tasks=[];},

unshift:function(data,callback){
_insert(q,data,true,callback);},

process:function(){
while(!q.paused&&workers<q.concurrency&&q.tasks.length){

var tasks=q.payload?
q.tasks.splice(0,q.payload):
q.tasks.splice(0,q.tasks.length);

var data=_map(tasks,function(task){
return task.data;});


if(q.tasks.length===0){
q.empty();}

workers+=1;
workersList.push(tasks[0]);
var cb=only_once(_next(q,tasks));
worker(data,cb);}},


length:function(){
return q.tasks.length;},

running:function(){
return workers;},

workersList:function(){
return workersList;},

idle:function(){
return q.tasks.length+workers===0;},

pause:function(){
q.paused=true;},

resume:function(){
if(q.paused===false){return;}
q.paused=false;
var resumeCount=Math.min(q.concurrency,q.tasks.length);


for(var w=1;w<=resumeCount;w++){
async.setImmediate(q.process);}}};



return q;}


async.queue=function(worker,concurrency){
var q=_queue(function(items,cb){
worker(items[0],cb);},
concurrency,1);

return q;};


async.priorityQueue=function(worker,concurrency){

function _compareTasks(a,b){
return a.priority-b.priority;}


function _binarySearch(sequence,item,compare){
var beg=-1,
end=sequence.length-1;
while(beg<end){
var mid=beg+(end-beg+1>>>1);
if(compare(item,sequence[mid])>=0){
beg=mid;}else 
{
end=mid-1;}}


return beg;}


function _insert(q,data,priority,callback){
if(callback!=null&&typeof callback!=="function"){
throw new Error("task callback must be a function");}

q.started=true;
if(!_isArray(data)){
data=[data];}

if(data.length===0){

return async.setImmediate(function(){
q.drain();});}


_arrayEach(data,function(task){
var item={
data:task,
priority:priority,
callback:typeof callback==='function'?callback:noop};


q.tasks.splice(_binarySearch(q.tasks,item,_compareTasks)+1,0,item);

if(q.tasks.length===q.concurrency){
q.saturated();}

async.setImmediate(q.process);});}




var q=async.queue(worker,concurrency);


q.push=function(data,priority,callback){
_insert(q,data,priority,callback);};



delete q.unshift;

return q;};


async.cargo=function(worker,payload){
return _queue(worker,1,payload);};


function _console_fn(name){
return _restParam(function(fn,args){
fn.apply(null,args.concat([_restParam(function(err,args){
if(typeof console==='object'){
if(err){
if(console.error){
console.error(err);}}else 


if(console[name]){
_arrayEach(args,function(x){
console[name](x);});}}})]));});}






async.log=_console_fn('log');
async.dir=_console_fn('dir');




async.memoize=function(fn,hasher){
var memo={};
var queues={};
hasher=hasher||identity;
var memoized=_restParam(function memoized(args){
var callback=args.pop();
var key=hasher.apply(null,args);
if(key in memo){
async.setImmediate(function(){
callback.apply(null,memo[key]);});}else 


if(key in queues){
queues[key].push(callback);}else 

{
queues[key]=[callback];
fn.apply(null,args.concat([_restParam(function(args){
memo[key]=args;
var q=queues[key];
delete queues[key];
for(var i=0,l=q.length;i<l;i++){
q[i].apply(null,args);}})]));}});




memoized.memo=memo;
memoized.unmemoized=fn;
return memoized;};


async.unmemoize=function(fn){
return function(){
return (fn.unmemoized||fn).apply(null,arguments);};};



function _times(mapper){
return function(count,iterator,callback){
mapper(_range(count),iterator,callback);};}



async.times=_times(async.map);
async.timesSeries=_times(async.mapSeries);
async.timesLimit=function(count,limit,iterator,callback){
return async.mapLimit(_range(count),limit,iterator,callback);};


async.seq=function(){
var fns=arguments;
return _restParam(function(args){
var that=this;

var callback=args[args.length-1];
if(typeof callback=='function'){
args.pop();}else 
{
callback=noop;}


async.reduce(fns,args,function(newargs,fn,cb){
fn.apply(that,newargs.concat([_restParam(function(err,nextargs){
cb(err,nextargs);})]));},


function(err,results){
callback.apply(that,[err].concat(results));});});};




async.compose=function(){
return async.seq.apply(null,Array.prototype.reverse.call(arguments));};



function _applyEach(eachfn){
return _restParam(function(fns,args){
var go=_restParam(function(args){
var that=this;
var callback=args.pop();
return eachfn(fns,function(fn,_,cb){
fn.apply(that,args.concat([cb]));},

callback);});

if(args.length){
return go.apply(this,args);}else 

{
return go;}});}




async.applyEach=_applyEach(async.eachOf);
async.applyEachSeries=_applyEach(async.eachOfSeries);


async.forever=function(fn,callback){
var done=only_once(callback||noop);
var task=ensureAsync(fn);
function next(err){
if(err){
return done(err);}

task(next);}

next();};


function ensureAsync(fn){
return _restParam(function(args){
var callback=args.pop();
args.push(function(){
var innerArgs=arguments;
if(sync){
async.setImmediate(function(){
callback.apply(null,innerArgs);});}else 

{
callback.apply(null,innerArgs);}});


var sync=true;
fn.apply(this,args);
sync=false;});}



async.ensureAsync=ensureAsync;

async.constant=_restParam(function(values){
var args=[null].concat(values);
return function(callback){
return callback.apply(this,args);};});



async.wrapSync=
async.asyncify=function asyncify(func){
return _restParam(function(args){
var callback=args.pop();
var result;
try{
result=func.apply(this,args);}
catch(e){
return callback(e);}


if(_isObject(result)&&typeof result.then==="function"){
result.then(function(value){
callback(null,value);})[
"catch"](function(err){
callback(err.message?err:new Error(err));});}else 

{
callback(null,result);}});};





if(typeof module==='object'&&module.exports){
module.exports=async;}else 


if(typeof define==='function'&&define.amd){
define([],function(){
return async;});}else 



{
root.async=async;}})();
});
__d('forerunnerdb/js/lib/PersistCompress.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js'),
pako=require('pako/index.js');

var Plugin=function(){
this.init.apply(this,arguments);};


Plugin.prototype.init=function(options){};



Shared.mixin(Plugin.prototype,'Mixin.Common');

Plugin.prototype.encode=function(val,meta,finished){
var wrapper={
data:val,
type:'fdbCompress',
enabled:false},

before,
after,
compressedVal;


before=val.length;
compressedVal=pako.deflate(val,{to:'string'});
after=compressedVal.length;


if(after<before){
wrapper.data=compressedVal;
wrapper.enabled=true;}


meta.compression={
enabled:wrapper.enabled,
compressedBytes:after,
uncompressedBytes:before,
effect:Math.round(100/before*after)+'%'};


finished(false,this.jStringify(wrapper),meta);};


Plugin.prototype.decode=function(wrapper,meta,finished){
var compressionEnabled=false,
data;

if(wrapper){
wrapper=this.jParse(wrapper);


if(wrapper.enabled){
data=pako.inflate(wrapper.data,{to:'string'});
compressionEnabled=true;}else 
{
data=wrapper.data;
compressionEnabled=false;}


meta.compression={
enabled:compressionEnabled};


if(finished){
finished(false,data,meta);}}else 

{
if(finished){
finished(false,data,meta);}}};





Shared.plugins.FdbCompress=Plugin;

module.exports=Plugin;
});
__d('pako/index.js',function(global, require, module, exports) {  'use strict';


var assign=require('pako/lib/utils/common.js').assign;

var deflate=require('pako/lib/deflate.js');
var inflate=require('pako/lib/inflate.js');
var constants=require('pako/lib/zlib/constants.js');

var pako={};

assign(pako,deflate,inflate,constants);

module.exports=pako;
});
__d('pako/lib/utils/common.js',function(global, require, module, exports) {  'use strict';


var TYPED_OK=typeof Uint8Array!=='undefined'&&
typeof Uint16Array!=='undefined'&&
typeof Int32Array!=='undefined';


exports.assign=function(obj){
var sources=Array.prototype.slice.call(arguments,1);
while(sources.length){
var source=sources.shift();
if(!source){continue;}

if(typeof source!=='object'){
throw new TypeError(source+'must be non-object');}


for(var p in source){
if(source.hasOwnProperty(p)){
obj[p]=source[p];}}}




return obj;};




exports.shrinkBuf=function(buf,size){
if(buf.length===size){return buf;}
if(buf.subarray){return buf.subarray(0,size);}
buf.length=size;
return buf;};



var fnTyped={
arraySet:function(dest,src,src_offs,len,dest_offs){
if(src.subarray&&dest.subarray){
dest.set(src.subarray(src_offs,src_offs+len),dest_offs);
return;}


for(var i=0;i<len;i++){
dest[dest_offs+i]=src[src_offs+i];}},



flattenChunks:function(chunks){
var i,l,len,pos,chunk,result;


len=0;
for(i=0,l=chunks.length;i<l;i++){
len+=chunks[i].length;}



result=new Uint8Array(len);
pos=0;
for(i=0,l=chunks.length;i<l;i++){
chunk=chunks[i];
result.set(chunk,pos);
pos+=chunk.length;}


return result;}};



var fnUntyped={
arraySet:function(dest,src,src_offs,len,dest_offs){
for(var i=0;i<len;i++){
dest[dest_offs+i]=src[src_offs+i];}},



flattenChunks:function(chunks){
return [].concat.apply([],chunks);}};






exports.setTyped=function(on){
if(on){
exports.Buf8=Uint8Array;
exports.Buf16=Uint16Array;
exports.Buf32=Int32Array;
exports.assign(exports,fnTyped);}else 
{
exports.Buf8=Array;
exports.Buf16=Array;
exports.Buf32=Array;
exports.assign(exports,fnUntyped);}};



exports.setTyped(TYPED_OK);
});
__d('pako/lib/deflate.js',function(global, require, module, exports) {  'use strict';


var zlib_deflate=require('pako/lib/zlib/deflate.js');
var utils=require('pako/lib/utils/common.js');
var strings=require('pako/lib/utils/strings.js');
var msg=require('pako/lib/zlib/messages.js');
var zstream=require('pako/lib/zlib/zstream.js');

var toString=Object.prototype.toString;




var Z_NO_FLUSH=0;
var Z_FINISH=4;

var Z_OK=0;
var Z_STREAM_END=1;
var Z_SYNC_FLUSH=2;

var Z_DEFAULT_COMPRESSION=-1;

var Z_DEFAULT_STRATEGY=0;

var Z_DEFLATED=8;




























































































var Deflate=function(options){

this.options=utils.assign({
level:Z_DEFAULT_COMPRESSION,
method:Z_DEFLATED,
chunkSize:16384,
windowBits:15,
memLevel:8,
strategy:Z_DEFAULT_STRATEGY,
to:''},
options||{});

var opt=this.options;

if(opt.raw&&opt.windowBits>0){
opt.windowBits=-opt.windowBits;}else 


if(opt.gzip&&opt.windowBits>0&&opt.windowBits<16){
opt.windowBits+=16;}


this.err=0;
this.msg='';
this.ended=false;
this.chunks=[];

this.strm=new zstream();
this.strm.avail_out=0;

var status=zlib_deflate.deflateInit2(
this.strm,
opt.level,
opt.method,
opt.windowBits,
opt.memLevel,
opt.strategy);


if(status!==Z_OK){
throw new Error(msg[status]);}


if(opt.header){
zlib_deflate.deflateSetHeader(this.strm,opt.header);}};
































Deflate.prototype.push=function(data,mode){
var strm=this.strm;
var chunkSize=this.options.chunkSize;
var status,_mode;

if(this.ended){return false;}

_mode=mode===~ ~mode?mode:mode===true?Z_FINISH:Z_NO_FLUSH;


if(typeof data==='string'){

strm.input=strings.string2buf(data);}else 
if(toString.call(data)==='[object ArrayBuffer]'){
strm.input=new Uint8Array(data);}else 
{
strm.input=data;}


strm.next_in=0;
strm.avail_in=strm.input.length;

do {
if(strm.avail_out===0){
strm.output=new utils.Buf8(chunkSize);
strm.next_out=0;
strm.avail_out=chunkSize;}

status=zlib_deflate.deflate(strm,_mode);

if(status!==Z_STREAM_END&&status!==Z_OK){
this.onEnd(status);
this.ended=true;
return false;}

if(strm.avail_out===0||strm.avail_in===0&&(_mode===Z_FINISH||_mode===Z_SYNC_FLUSH)){
if(this.options.to==='string'){
this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output,strm.next_out)));}else 
{
this.onData(utils.shrinkBuf(strm.output,strm.next_out));}}}while(


(strm.avail_in>0||strm.avail_out===0)&&status!==Z_STREAM_END);


if(_mode===Z_FINISH){
status=zlib_deflate.deflateEnd(this.strm);
this.onEnd(status);
this.ended=true;
return status===Z_OK;}



if(_mode===Z_SYNC_FLUSH){
this.onEnd(Z_OK);
strm.avail_out=0;
return true;}


return true;};












Deflate.prototype.onData=function(chunk){
this.chunks.push(chunk);};













Deflate.prototype.onEnd=function(status){

if(status===Z_OK){
if(this.options.to==='string'){
this.result=this.chunks.join('');}else 
{
this.result=utils.flattenChunks(this.chunks);}}


this.chunks=[];
this.err=status;
this.msg=this.strm.msg;};




































function deflate(input,options){
var deflator=new Deflate(options);

deflator.push(input,true);


if(deflator.err){throw deflator.msg;}

return deflator.result;}











function deflateRaw(input,options){
options=options||{};
options.raw=true;
return deflate(input,options);}











function gzip(input,options){
options=options||{};
options.gzip=true;
return deflate(input,options);}



exports.Deflate=Deflate;
exports.deflate=deflate;
exports.deflateRaw=deflateRaw;
exports.gzip=gzip;
});
__d('pako/lib/zlib/deflate.js',function(global, require, module, exports) {  'use strict';

var utils=require('pako/lib/utils/common.js');
var trees=require('pako/lib/zlib/trees.js');
var adler32=require('pako/lib/zlib/adler32.js');
var crc32=require('pako/lib/zlib/crc32.js');
var msg=require('pako/lib/zlib/messages.js');






var Z_NO_FLUSH=0;
var Z_PARTIAL_FLUSH=1;

var Z_FULL_FLUSH=3;
var Z_FINISH=4;
var Z_BLOCK=5;






var Z_OK=0;
var Z_STREAM_END=1;


var Z_STREAM_ERROR=-2;
var Z_DATA_ERROR=-3;

var Z_BUF_ERROR=-5;







var Z_DEFAULT_COMPRESSION=-1;


var Z_FILTERED=1;
var Z_HUFFMAN_ONLY=2;
var Z_RLE=3;
var Z_FIXED=4;
var Z_DEFAULT_STRATEGY=0;





var Z_UNKNOWN=2;



var Z_DEFLATED=8;




var MAX_MEM_LEVEL=9;

var MAX_WBITS=15;

var DEF_MEM_LEVEL=8;


var LENGTH_CODES=29;

var LITERALS=256;

var L_CODES=LITERALS+1+LENGTH_CODES;

var D_CODES=30;

var BL_CODES=19;

var HEAP_SIZE=2*L_CODES+1;

var MAX_BITS=15;


var MIN_MATCH=3;
var MAX_MATCH=258;
var MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1;

var PRESET_DICT=0x20;

var INIT_STATE=42;
var EXTRA_STATE=69;
var NAME_STATE=73;
var COMMENT_STATE=91;
var HCRC_STATE=103;
var BUSY_STATE=113;
var FINISH_STATE=666;

var BS_NEED_MORE=1;
var BS_BLOCK_DONE=2;
var BS_FINISH_STARTED=3;
var BS_FINISH_DONE=4;

var OS_CODE=0x03;

function err(strm,errorCode){
strm.msg=msg[errorCode];
return errorCode;}


function rank(f){
return (f<<1)-(f>4?9:0);}


function zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}








function flush_pending(strm){
var s=strm.state;


var len=s.pending;
if(len>strm.avail_out){
len=strm.avail_out;}

if(len===0){return;}

utils.arraySet(strm.output,s.pending_buf,s.pending_out,len,strm.next_out);
strm.next_out+=len;
s.pending_out+=len;
strm.total_out+=len;
strm.avail_out-=len;
s.pending-=len;
if(s.pending===0){
s.pending_out=0;}}




function flush_block_only(s,last){
trees._tr_flush_block(s,s.block_start>=0?s.block_start:-1,s.strstart-s.block_start,last);
s.block_start=s.strstart;
flush_pending(s.strm);}



function put_byte(s,b){
s.pending_buf[s.pending++]=b;}








function putShortMSB(s,b){


s.pending_buf[s.pending++]=b>>>8&0xff;
s.pending_buf[s.pending++]=b&0xff;}










function read_buf(strm,buf,start,size){
var len=strm.avail_in;

if(len>size){len=size;}
if(len===0){return 0;}

strm.avail_in-=len;

utils.arraySet(buf,strm.input,strm.next_in,len,start);
if(strm.state.wrap===1){
strm.adler=adler32(strm.adler,buf,len,start);}else 


if(strm.state.wrap===2){
strm.adler=crc32(strm.adler,buf,len,start);}


strm.next_in+=len;
strm.total_in+=len;

return len;}












function longest_match(s,cur_match){
var chain_length=s.max_chain_length;
var scan=s.strstart;
var match;
var len;
var best_len=s.prev_length;
var nice_match=s.nice_match;
var limit=s.strstart>s.w_size-MIN_LOOKAHEAD?
s.strstart-(s.w_size-MIN_LOOKAHEAD):0;

var _win=s.window;

var wmask=s.w_mask;
var prev=s.prev;





var strend=s.strstart+MAX_MATCH;
var scan_end1=_win[scan+best_len-1];
var scan_end=_win[scan+best_len];







if(s.prev_length>=s.good_match){
chain_length>>=2;}




if(nice_match>s.lookahead){nice_match=s.lookahead;}



do {

match=cur_match;










if(_win[match+best_len]!==scan_end||
_win[match+best_len-1]!==scan_end1||
_win[match]!==_win[scan]||
_win[++match]!==_win[scan+1]){
continue;}








scan+=2;
match++;





do {}while(

_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
scan<strend);



len=MAX_MATCH-(strend-scan);
scan=strend-MAX_MATCH;

if(len>best_len){
s.match_start=cur_match;
best_len=len;
if(len>=nice_match){
break;}

scan_end1=_win[scan+best_len-1];
scan_end=_win[scan+best_len];}}while(

(cur_match=prev[cur_match&wmask])>limit&&--chain_length!==0);

if(best_len<=s.lookahead){
return best_len;}

return s.lookahead;}













function fill_window(s){
var _w_size=s.w_size;
var p,n,m,more,str;



do {
more=s.window_size-s.lookahead-s.strstart;



















if(s.strstart>=_w_size+(_w_size-MIN_LOOKAHEAD)){

utils.arraySet(s.window,s.window,_w_size,_w_size,0);
s.match_start-=_w_size;
s.strstart-=_w_size;

s.block_start-=_w_size;








n=s.hash_size;
p=n;
do {
m=s.head[--p];
s.head[p]=m>=_w_size?m-_w_size:0;}while(
--n);

n=_w_size;
p=n;
do {
m=s.prev[--p];
s.prev[p]=m>=_w_size?m-_w_size:0;}while(



--n);

more+=_w_size;}

if(s.strm.avail_in===0){
break;}














n=read_buf(s.strm,s.window,s.strstart+s.lookahead,more);
s.lookahead+=n;


if(s.lookahead+s.insert>=MIN_MATCH){
str=s.strstart-s.insert;
s.ins_h=s.window[str];


s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+1])&s.hash_mask;



while(s.insert){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;

s.prev[str&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=str;
str++;
s.insert--;
if(s.lookahead+s.insert<MIN_MATCH){
break;}}}}while(







s.lookahead<MIN_LOOKAHEAD&&s.strm.avail_in!==0);}
















































function deflate_stored(s,flush){



var max_block_size=0xffff;

if(max_block_size>s.pending_buf_size-5){
max_block_size=s.pending_buf_size-5;}



for(;;){

if(s.lookahead<=1){








fill_window(s);
if(s.lookahead===0&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;}


if(s.lookahead===0){
break;}}






s.strstart+=s.lookahead;
s.lookahead=0;


var max_start=s.block_start+max_block_size;

if(s.strstart===0||s.strstart>=max_start){

s.lookahead=s.strstart-max_start;
s.strstart=max_start;

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}








if(s.strstart-s.block_start>=s.w_size-MIN_LOOKAHEAD){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}}





s.insert=0;

if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;}


return BS_FINISH_DONE;}


if(s.strstart>s.block_start){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}




return BS_NEED_MORE;}









function deflate_fast(s,flush){
var hash_head;
var bflush;

for(;;){





if(s.lookahead<MIN_LOOKAHEAD){
fill_window(s);
if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;}

if(s.lookahead===0){
break;}}






hash_head=0;
if(s.lookahead>=MIN_MATCH){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;}






if(hash_head!==0&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){




s.match_length=longest_match(s,hash_head);}


if(s.match_length>=MIN_MATCH){




bflush=trees._tr_tally(s,s.strstart-s.match_start,s.match_length-MIN_MATCH);

s.lookahead-=s.match_length;




if(s.match_length<=s.max_lazy_match&&s.lookahead>=MIN_MATCH){
s.match_length--;
do {
s.strstart++;

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;}while(




--s.match_length!==0);
s.strstart++;}else 

{
s.strstart+=s.match_length;
s.match_length=0;
s.ins_h=s.window[s.strstart];

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+1])&s.hash_mask;}}else 








{



bflush=trees._tr_tally(s,0,s.window[s.strstart]);

s.lookahead--;
s.strstart++;}

if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}}




s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;}


return BS_FINISH_DONE;}

if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}



return BS_BLOCK_DONE;}







function deflate_slow(s,flush){
var hash_head;
var bflush;

var max_insert;


for(;;){





if(s.lookahead<MIN_LOOKAHEAD){
fill_window(s);
if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;}

if(s.lookahead===0){break;}}





hash_head=0;
if(s.lookahead>=MIN_MATCH){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;}





s.prev_length=s.match_length;
s.prev_match=s.match_start;
s.match_length=MIN_MATCH-1;

if(hash_head!==0&&s.prev_length<s.max_lazy_match&&
s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){




s.match_length=longest_match(s,hash_head);


if(s.match_length<=5&&(
s.strategy===Z_FILTERED||s.match_length===MIN_MATCH&&s.strstart-s.match_start>4096)){




s.match_length=MIN_MATCH-1;}}





if(s.prev_length>=MIN_MATCH&&s.match_length<=s.prev_length){
max_insert=s.strstart+s.lookahead-MIN_MATCH;






bflush=trees._tr_tally(s,s.strstart-1-s.prev_match,s.prev_length-MIN_MATCH);





s.lookahead-=s.prev_length-1;
s.prev_length-=2;
do {
if(++s.strstart<=max_insert){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;}}while(


--s.prev_length!==0);
s.match_available=0;
s.match_length=MIN_MATCH-1;
s.strstart++;

if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}}else 




if(s.match_available){






bflush=trees._tr_tally(s,0,s.window[s.strstart-1]);

if(bflush){

flush_block_only(s,false);}


s.strstart++;
s.lookahead--;
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}else 

{



s.match_available=1;
s.strstart++;
s.lookahead--;}}



if(s.match_available){


bflush=trees._tr_tally(s,0,s.window[s.strstart-1]);

s.match_available=0;}

s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;}


return BS_FINISH_DONE;}

if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}




return BS_BLOCK_DONE;}








function deflate_rle(s,flush){
var bflush;
var prev;
var scan,strend;

var _win=s.window;

for(;;){




if(s.lookahead<=MAX_MATCH){
fill_window(s);
if(s.lookahead<=MAX_MATCH&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;}

if(s.lookahead===0){break;}}



s.match_length=0;
if(s.lookahead>=MIN_MATCH&&s.strstart>0){
scan=s.strstart-1;
prev=_win[scan];
if(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]){
strend=s.strstart+MAX_MATCH;
do {}while(

prev===_win[++scan]&&prev===_win[++scan]&&
prev===_win[++scan]&&prev===_win[++scan]&&
prev===_win[++scan]&&prev===_win[++scan]&&
prev===_win[++scan]&&prev===_win[++scan]&&
scan<strend);
s.match_length=MAX_MATCH-(strend-scan);
if(s.match_length>s.lookahead){
s.match_length=s.lookahead;}}}






if(s.match_length>=MIN_MATCH){



bflush=trees._tr_tally(s,1,s.match_length-MIN_MATCH);

s.lookahead-=s.match_length;
s.strstart+=s.match_length;
s.match_length=0;}else 
{



bflush=trees._tr_tally(s,0,s.window[s.strstart]);

s.lookahead--;
s.strstart++;}

if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}}




s.insert=0;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;}


return BS_FINISH_DONE;}

if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}



return BS_BLOCK_DONE;}






function deflate_huff(s,flush){
var bflush;

for(;;){

if(s.lookahead===0){
fill_window(s);
if(s.lookahead===0){
if(flush===Z_NO_FLUSH){
return BS_NEED_MORE;}

break;}}




s.match_length=0;


bflush=trees._tr_tally(s,0,s.window[s.strstart]);
s.lookahead--;
s.strstart++;
if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}}




s.insert=0;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;}


return BS_FINISH_DONE;}

if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;}}



return BS_BLOCK_DONE;}







var Config=function(good_length,max_lazy,nice_length,max_chain,func){
this.good_length=good_length;
this.max_lazy=max_lazy;
this.nice_length=nice_length;
this.max_chain=max_chain;
this.func=func;};


var configuration_table;

configuration_table=[

new Config(0,0,0,0,deflate_stored),
new Config(4,4,8,4,deflate_fast),
new Config(4,5,16,8,deflate_fast),
new Config(4,6,32,32,deflate_fast),

new Config(4,4,16,16,deflate_slow),
new Config(8,16,32,32,deflate_slow),
new Config(8,16,128,128,deflate_slow),
new Config(8,32,128,256,deflate_slow),
new Config(32,128,258,1024,deflate_slow),
new Config(32,258,258,4096,deflate_slow)];






function lm_init(s){
s.window_size=2*s.w_size;


zero(s.head);



s.max_lazy_match=configuration_table[s.level].max_lazy;
s.good_match=configuration_table[s.level].good_length;
s.nice_match=configuration_table[s.level].nice_length;
s.max_chain_length=configuration_table[s.level].max_chain;

s.strstart=0;
s.block_start=0;
s.lookahead=0;
s.insert=0;
s.match_length=s.prev_length=MIN_MATCH-1;
s.match_available=0;
s.ins_h=0;}



function DeflateState(){
this.strm=null;
this.status=0;
this.pending_buf=null;
this.pending_buf_size=0;
this.pending_out=0;
this.pending=0;
this.wrap=0;
this.gzhead=null;
this.gzindex=0;
this.method=Z_DEFLATED;
this.last_flush=-1;

this.w_size=0;
this.w_bits=0;
this.w_mask=0;

this.window=null;







this.window_size=0;




this.prev=null;





this.head=null;

this.ins_h=0;
this.hash_size=0;
this.hash_bits=0;
this.hash_mask=0;

this.hash_shift=0;






this.block_start=0;




this.match_length=0;
this.prev_match=0;
this.match_available=0;
this.strstart=0;
this.match_start=0;
this.lookahead=0;

this.prev_length=0;




this.max_chain_length=0;





this.max_lazy_match=0;











this.level=0;
this.strategy=0;

this.good_match=0;


this.nice_match=0;











this.dyn_ltree=new utils.Buf16(HEAP_SIZE*2);
this.dyn_dtree=new utils.Buf16((2*D_CODES+1)*2);
this.bl_tree=new utils.Buf16((2*BL_CODES+1)*2);
zero(this.dyn_ltree);
zero(this.dyn_dtree);
zero(this.bl_tree);

this.l_desc=null;
this.d_desc=null;
this.bl_desc=null;


this.bl_count=new utils.Buf16(MAX_BITS+1);



this.heap=new utils.Buf16(2*L_CODES+1);
zero(this.heap);

this.heap_len=0;
this.heap_max=0;




this.depth=new utils.Buf16(2*L_CODES+1);
zero(this.depth);



this.l_buf=0;

this.lit_bufsize=0;



















this.last_lit=0;

this.d_buf=0;





this.opt_len=0;
this.static_len=0;
this.matches=0;
this.insert=0;


this.bi_buf=0;



this.bi_valid=0;}















function deflateResetKeep(strm){
var s;

if(!strm||!strm.state){
return err(strm,Z_STREAM_ERROR);}


strm.total_in=strm.total_out=0;
strm.data_type=Z_UNKNOWN;

s=strm.state;
s.pending=0;
s.pending_out=0;

if(s.wrap<0){
s.wrap=-s.wrap;}


s.status=s.wrap?INIT_STATE:BUSY_STATE;
strm.adler=s.wrap===2?
0:

1;
s.last_flush=Z_NO_FLUSH;
trees._tr_init(s);
return Z_OK;}



function deflateReset(strm){
var ret=deflateResetKeep(strm);
if(ret===Z_OK){
lm_init(strm.state);}

return ret;}



function deflateSetHeader(strm,head){
if(!strm||!strm.state){return Z_STREAM_ERROR;}
if(strm.state.wrap!==2){return Z_STREAM_ERROR;}
strm.state.gzhead=head;
return Z_OK;}



function deflateInit2(strm,level,method,windowBits,memLevel,strategy){
if(!strm){
return Z_STREAM_ERROR;}

var wrap=1;

if(level===Z_DEFAULT_COMPRESSION){
level=6;}


if(windowBits<0){
wrap=0;
windowBits=-windowBits;}else 


if(windowBits>15){
wrap=2;
windowBits-=16;}



if(memLevel<1||memLevel>MAX_MEM_LEVEL||method!==Z_DEFLATED||
windowBits<8||windowBits>15||level<0||level>9||
strategy<0||strategy>Z_FIXED){
return err(strm,Z_STREAM_ERROR);}



if(windowBits===8){
windowBits=9;}



var s=new DeflateState();

strm.state=s;
s.strm=strm;

s.wrap=wrap;
s.gzhead=null;
s.w_bits=windowBits;
s.w_size=1<<s.w_bits;
s.w_mask=s.w_size-1;

s.hash_bits=memLevel+7;
s.hash_size=1<<s.hash_bits;
s.hash_mask=s.hash_size-1;
s.hash_shift=~ ~((s.hash_bits+MIN_MATCH-1)/MIN_MATCH);

s.window=new utils.Buf8(s.w_size*2);
s.head=new utils.Buf16(s.hash_size);
s.prev=new utils.Buf16(s.w_size);




s.lit_bufsize=1<<memLevel+6;

s.pending_buf_size=s.lit_bufsize*4;
s.pending_buf=new utils.Buf8(s.pending_buf_size);

s.d_buf=s.lit_bufsize>>1;
s.l_buf=(1+2)*s.lit_bufsize;

s.level=level;
s.strategy=strategy;
s.method=method;

return deflateReset(strm);}


function deflateInit(strm,level){
return deflateInit2(strm,level,Z_DEFLATED,MAX_WBITS,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY);}



function deflate(strm,flush){
var old_flush,s;
var beg,val;

if(!strm||!strm.state||
flush>Z_BLOCK||flush<0){
return strm?err(strm,Z_STREAM_ERROR):Z_STREAM_ERROR;}


s=strm.state;

if(!strm.output||
!strm.input&&strm.avail_in!==0||
s.status===FINISH_STATE&&flush!==Z_FINISH){
return err(strm,strm.avail_out===0?Z_BUF_ERROR:Z_STREAM_ERROR);}


s.strm=strm;
old_flush=s.last_flush;
s.last_flush=flush;


if(s.status===INIT_STATE){

if(s.wrap===2){
strm.adler=0;
put_byte(s,31);
put_byte(s,139);
put_byte(s,8);
if(!s.gzhead){
put_byte(s,0);
put_byte(s,0);
put_byte(s,0);
put_byte(s,0);
put_byte(s,0);
put_byte(s,s.level===9?2:
s.strategy>=Z_HUFFMAN_ONLY||s.level<2?
4:0);
put_byte(s,OS_CODE);
s.status=BUSY_STATE;}else 

{
put_byte(s,(s.gzhead.text?1:0)+(
s.gzhead.hcrc?2:0)+(
!s.gzhead.extra?0:4)+(
!s.gzhead.name?0:8)+(
!s.gzhead.comment?0:16));

put_byte(s,s.gzhead.time&0xff);
put_byte(s,s.gzhead.time>>8&0xff);
put_byte(s,s.gzhead.time>>16&0xff);
put_byte(s,s.gzhead.time>>24&0xff);
put_byte(s,s.level===9?2:
s.strategy>=Z_HUFFMAN_ONLY||s.level<2?
4:0);
put_byte(s,s.gzhead.os&0xff);
if(s.gzhead.extra&&s.gzhead.extra.length){
put_byte(s,s.gzhead.extra.length&0xff);
put_byte(s,s.gzhead.extra.length>>8&0xff);}

if(s.gzhead.hcrc){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending,0);}

s.gzindex=0;
s.status=EXTRA_STATE;}}else 



{
var header=Z_DEFLATED+(s.w_bits-8<<4)<<8;
var level_flags=-1;

if(s.strategy>=Z_HUFFMAN_ONLY||s.level<2){
level_flags=0;}else 
if(s.level<6){
level_flags=1;}else 
if(s.level===6){
level_flags=2;}else 
{
level_flags=3;}

header|=level_flags<<6;
if(s.strstart!==0){header|=PRESET_DICT;}
header+=31-header%31;

s.status=BUSY_STATE;
putShortMSB(s,header);


if(s.strstart!==0){
putShortMSB(s,strm.adler>>>16);
putShortMSB(s,strm.adler&0xffff);}

strm.adler=1;}}




if(s.status===EXTRA_STATE){
if(s.gzhead.extra){
beg=s.pending;

while(s.gzindex<(s.gzhead.extra.length&0xffff)){
if(s.pending===s.pending_buf_size){
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}

flush_pending(strm);
beg=s.pending;
if(s.pending===s.pending_buf_size){
break;}}


put_byte(s,s.gzhead.extra[s.gzindex]&0xff);
s.gzindex++;}

if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}

if(s.gzindex===s.gzhead.extra.length){
s.gzindex=0;
s.status=NAME_STATE;}}else 


{
s.status=NAME_STATE;}}


if(s.status===NAME_STATE){
if(s.gzhead.name){
beg=s.pending;


do {
if(s.pending===s.pending_buf_size){
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}

flush_pending(strm);
beg=s.pending;
if(s.pending===s.pending_buf_size){
val=1;
break;}}



if(s.gzindex<s.gzhead.name.length){
val=s.gzhead.name.charCodeAt(s.gzindex++)&0xff;}else 
{
val=0;}

put_byte(s,val);}while(
val!==0);

if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}

if(val===0){
s.gzindex=0;
s.status=COMMENT_STATE;}}else 


{
s.status=COMMENT_STATE;}}


if(s.status===COMMENT_STATE){
if(s.gzhead.comment){
beg=s.pending;


do {
if(s.pending===s.pending_buf_size){
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}

flush_pending(strm);
beg=s.pending;
if(s.pending===s.pending_buf_size){
val=1;
break;}}



if(s.gzindex<s.gzhead.comment.length){
val=s.gzhead.comment.charCodeAt(s.gzindex++)&0xff;}else 
{
val=0;}

put_byte(s,val);}while(
val!==0);

if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);}

if(val===0){
s.status=HCRC_STATE;}}else 


{
s.status=HCRC_STATE;}}


if(s.status===HCRC_STATE){
if(s.gzhead.hcrc){
if(s.pending+2>s.pending_buf_size){
flush_pending(strm);}

if(s.pending+2<=s.pending_buf_size){
put_byte(s,strm.adler&0xff);
put_byte(s,strm.adler>>8&0xff);
strm.adler=0;
s.status=BUSY_STATE;}}else 


{
s.status=BUSY_STATE;}}





if(s.pending!==0){
flush_pending(strm);
if(strm.avail_out===0){






s.last_flush=-1;
return Z_OK;}}else 






if(strm.avail_in===0&&rank(flush)<=rank(old_flush)&&
flush!==Z_FINISH){
return err(strm,Z_BUF_ERROR);}



if(s.status===FINISH_STATE&&strm.avail_in!==0){
return err(strm,Z_BUF_ERROR);}




if(strm.avail_in!==0||s.lookahead!==0||
flush!==Z_NO_FLUSH&&s.status!==FINISH_STATE){
var bstate=s.strategy===Z_HUFFMAN_ONLY?deflate_huff(s,flush):
s.strategy===Z_RLE?deflate_rle(s,flush):
configuration_table[s.level].func(s,flush);

if(bstate===BS_FINISH_STARTED||bstate===BS_FINISH_DONE){
s.status=FINISH_STATE;}

if(bstate===BS_NEED_MORE||bstate===BS_FINISH_STARTED){
if(strm.avail_out===0){
s.last_flush=-1;}


return Z_OK;}








if(bstate===BS_BLOCK_DONE){
if(flush===Z_PARTIAL_FLUSH){
trees._tr_align(s);}else 

if(flush!==Z_BLOCK){

trees._tr_stored_block(s,0,0,false);



if(flush===Z_FULL_FLUSH){

zero(s.head);

if(s.lookahead===0){
s.strstart=0;
s.block_start=0;
s.insert=0;}}}



flush_pending(strm);
if(strm.avail_out===0){
s.last_flush=-1;
return Z_OK;}}}






if(flush!==Z_FINISH){return Z_OK;}
if(s.wrap<=0){return Z_STREAM_END;}


if(s.wrap===2){
put_byte(s,strm.adler&0xff);
put_byte(s,strm.adler>>8&0xff);
put_byte(s,strm.adler>>16&0xff);
put_byte(s,strm.adler>>24&0xff);
put_byte(s,strm.total_in&0xff);
put_byte(s,strm.total_in>>8&0xff);
put_byte(s,strm.total_in>>16&0xff);
put_byte(s,strm.total_in>>24&0xff);}else 


{
putShortMSB(s,strm.adler>>>16);
putShortMSB(s,strm.adler&0xffff);}


flush_pending(strm);



if(s.wrap>0){s.wrap=-s.wrap;}

return s.pending!==0?Z_OK:Z_STREAM_END;}


function deflateEnd(strm){
var status;

if(!strm||!strm.state){
return Z_STREAM_ERROR;}


status=strm.state.status;
if(status!==INIT_STATE&&
status!==EXTRA_STATE&&
status!==NAME_STATE&&
status!==COMMENT_STATE&&
status!==HCRC_STATE&&
status!==BUSY_STATE&&
status!==FINISH_STATE)
{
return err(strm,Z_STREAM_ERROR);}


strm.state=null;

return status===BUSY_STATE?err(strm,Z_DATA_ERROR):Z_OK;}









exports.deflateInit=deflateInit;
exports.deflateInit2=deflateInit2;
exports.deflateReset=deflateReset;
exports.deflateResetKeep=deflateResetKeep;
exports.deflateSetHeader=deflateSetHeader;
exports.deflate=deflate;
exports.deflateEnd=deflateEnd;
exports.deflateInfo='pako deflate (from Nodeca project)';
});
__d('pako/lib/zlib/trees.js',function(global, require, module, exports) {  'use strict';


var utils=require('pako/lib/utils/common.js');








var Z_FIXED=4;



var Z_BINARY=0;
var Z_TEXT=1;

var Z_UNKNOWN=2;




function zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}



var STORED_BLOCK=0;
var STATIC_TREES=1;
var DYN_TREES=2;


var MIN_MATCH=3;
var MAX_MATCH=258;







var LENGTH_CODES=29;


var LITERALS=256;


var L_CODES=LITERALS+1+LENGTH_CODES;


var D_CODES=30;


var BL_CODES=19;


var HEAP_SIZE=2*L_CODES+1;


var MAX_BITS=15;


var Buf_size=16;







var MAX_BL_BITS=7;


var END_BLOCK=256;


var REP_3_6=16;


var REPZ_3_10=17;


var REPZ_11_138=18;


var extra_lbits=
[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits=
[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits=
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order=
[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];










var DIST_CODE_LEN=512;


var static_ltree=new Array((L_CODES+2)*2);
zero(static_ltree);






var static_dtree=new Array(D_CODES*2);
zero(static_dtree);




var _dist_code=new Array(DIST_CODE_LEN);
zero(_dist_code);





var _length_code=new Array(MAX_MATCH-MIN_MATCH+1);
zero(_length_code);


var base_length=new Array(LENGTH_CODES);
zero(base_length);


var base_dist=new Array(D_CODES);
zero(base_dist);



var StaticTreeDesc=function(static_tree,extra_bits,extra_base,elems,max_length){

this.static_tree=static_tree;
this.extra_bits=extra_bits;
this.extra_base=extra_base;
this.elems=elems;
this.max_length=max_length;


this.has_stree=static_tree&&static_tree.length;};



var static_l_desc;
var static_d_desc;
var static_bl_desc;


var TreeDesc=function(dyn_tree,stat_desc){
this.dyn_tree=dyn_tree;
this.max_code=0;
this.stat_desc=stat_desc;};




function d_code(dist){
return dist<256?_dist_code[dist]:_dist_code[256+(dist>>>7)];}







function put_short(s,w){


s.pending_buf[s.pending++]=w&0xff;
s.pending_buf[s.pending++]=w>>>8&0xff;}







function send_bits(s,value,length){
if(s.bi_valid>Buf_size-length){
s.bi_buf|=value<<s.bi_valid&0xffff;
put_short(s,s.bi_buf);
s.bi_buf=value>>Buf_size-s.bi_valid;
s.bi_valid+=length-Buf_size;}else 
{
s.bi_buf|=value<<s.bi_valid&0xffff;
s.bi_valid+=length;}}




function send_code(s,c,tree){
send_bits(s,tree[c*2],tree[c*2+1]);}








function bi_reverse(code,len){
var res=0;
do {
res|=code&1;
code>>>=1;
res<<=1;}while(
--len>0);
return res>>>1;}






function bi_flush(s){
if(s.bi_valid===16){
put_short(s,s.bi_buf);
s.bi_buf=0;
s.bi_valid=0;}else 

if(s.bi_valid>=8){
s.pending_buf[s.pending++]=s.bi_buf&0xff;
s.bi_buf>>=8;
s.bi_valid-=8;}}














function gen_bitlen(s,desc)


{
var tree=desc.dyn_tree;
var max_code=desc.max_code;
var stree=desc.stat_desc.static_tree;
var has_stree=desc.stat_desc.has_stree;
var extra=desc.stat_desc.extra_bits;
var base=desc.stat_desc.extra_base;
var max_length=desc.stat_desc.max_length;
var h;
var n,m;
var bits;
var xbits;
var f;
var overflow=0;

for(bits=0;bits<=MAX_BITS;bits++){
s.bl_count[bits]=0;}





tree[s.heap[s.heap_max]*2+1]=0;

for(h=s.heap_max+1;h<HEAP_SIZE;h++){
n=s.heap[h];
bits=tree[tree[n*2+1]*2+1]+1;
if(bits>max_length){
bits=max_length;
overflow++;}

tree[n*2+1]=bits;


if(n>max_code){continue;}

s.bl_count[bits]++;
xbits=0;
if(n>=base){
xbits=extra[n-base];}

f=tree[n*2];
s.opt_len+=f*(bits+xbits);
if(has_stree){
s.static_len+=f*(stree[n*2+1]+xbits);}}


if(overflow===0){return;}





do {
bits=max_length-1;
while(s.bl_count[bits]===0){bits--;}
s.bl_count[bits]--;
s.bl_count[bits+1]+=2;
s.bl_count[max_length]--;



overflow-=2;}while(
overflow>0);






for(bits=max_length;bits!==0;bits--){
n=s.bl_count[bits];
while(n!==0){
m=s.heap[--h];
if(m>max_code){continue;}
if(tree[m*2+1]!==bits){

s.opt_len+=(bits-tree[m*2+1])*tree[m*2];
tree[m*2+1]=bits;}

n--;}}}













function gen_codes(tree,max_code,bl_count)



{
var next_code=new Array(MAX_BITS+1);
var code=0;
var bits;
var n;




for(bits=1;bits<=MAX_BITS;bits++){
next_code[bits]=code=code+bl_count[bits-1]<<1;}








for(n=0;n<=max_code;n++){
var len=tree[n*2+1];
if(len===0){continue;}

tree[n*2]=bi_reverse(next_code[len]++,len);}}










function tr_static_init(){
var n;
var bits;
var length;
var code;
var dist;
var bl_count=new Array(MAX_BITS+1);















length=0;
for(code=0;code<LENGTH_CODES-1;code++){
base_length[code]=length;
for(n=0;n<1<<extra_lbits[code];n++){
_length_code[length++]=code;}}







_length_code[length-1]=code;


dist=0;
for(code=0;code<16;code++){
base_dist[code]=dist;
for(n=0;n<1<<extra_dbits[code];n++){
_dist_code[dist++]=code;}}



dist>>=7;
for(;code<D_CODES;code++){
base_dist[code]=dist<<7;
for(n=0;n<1<<extra_dbits[code]-7;n++){
_dist_code[256+dist++]=code;}}





for(bits=0;bits<=MAX_BITS;bits++){
bl_count[bits]=0;}


n=0;
while(n<=143){
static_ltree[n*2+1]=8;
n++;
bl_count[8]++;}

while(n<=255){
static_ltree[n*2+1]=9;
n++;
bl_count[9]++;}

while(n<=279){
static_ltree[n*2+1]=7;
n++;
bl_count[7]++;}

while(n<=287){
static_ltree[n*2+1]=8;
n++;
bl_count[8]++;}





gen_codes(static_ltree,L_CODES+1,bl_count);


for(n=0;n<D_CODES;n++){
static_dtree[n*2+1]=5;
static_dtree[n*2]=bi_reverse(n,5);}



static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS);
static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS);
static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS);}








function init_block(s){
var n;


for(n=0;n<L_CODES;n++){s.dyn_ltree[n*2]=0;}
for(n=0;n<D_CODES;n++){s.dyn_dtree[n*2]=0;}
for(n=0;n<BL_CODES;n++){s.bl_tree[n*2]=0;}

s.dyn_ltree[END_BLOCK*2]=1;
s.opt_len=s.static_len=0;
s.last_lit=s.matches=0;}






function bi_windup(s)
{
if(s.bi_valid>8){
put_short(s,s.bi_buf);}else 
if(s.bi_valid>0){

s.pending_buf[s.pending++]=s.bi_buf;}

s.bi_buf=0;
s.bi_valid=0;}






function copy_block(s,buf,len,header)




{
bi_windup(s);

if(header){
put_short(s,len);
put_short(s,~len);}




utils.arraySet(s.pending_buf,s.window,buf,len,s.pending);
s.pending+=len;}






function smaller(tree,n,m,depth){
var _n2=n*2;
var _m2=m*2;
return tree[_n2]<tree[_m2]||
tree[_n2]===tree[_m2]&&depth[n]<=depth[m];}








function pqdownheap(s,tree,k)



{
var v=s.heap[k];
var j=k<<1;
while(j<=s.heap_len){

if(j<s.heap_len&&
smaller(tree,s.heap[j+1],s.heap[j],s.depth)){
j++;}


if(smaller(tree,v,s.heap[j],s.depth)){break;}


s.heap[k]=s.heap[j];
k=j;


j<<=1;}

s.heap[k]=v;}









function compress_block(s,ltree,dtree)



{
var dist;
var lc;
var lx=0;
var code;
var extra;

if(s.last_lit!==0){
do {
dist=s.pending_buf[s.d_buf+lx*2]<<8|s.pending_buf[s.d_buf+lx*2+1];
lc=s.pending_buf[s.l_buf+lx];
lx++;

if(dist===0){
send_code(s,lc,ltree);}else 

{

code=_length_code[lc];
send_code(s,code+LITERALS+1,ltree);
extra=extra_lbits[code];
if(extra!==0){
lc-=base_length[code];
send_bits(s,lc,extra);}

dist--;
code=d_code(dist);


send_code(s,code,dtree);
extra=extra_dbits[code];
if(extra!==0){
dist-=base_dist[code];
send_bits(s,dist,extra);}}}while(







lx<s.last_lit);}


send_code(s,END_BLOCK,ltree);}











function build_tree(s,desc)


{
var tree=desc.dyn_tree;
var stree=desc.stat_desc.static_tree;
var has_stree=desc.stat_desc.has_stree;
var elems=desc.stat_desc.elems;
var n,m;
var max_code=-1;
var node;





s.heap_len=0;
s.heap_max=HEAP_SIZE;

for(n=0;n<elems;n++){
if(tree[n*2]!==0){
s.heap[++s.heap_len]=max_code=n;
s.depth[n]=0;}else 

{
tree[n*2+1]=0;}}








while(s.heap_len<2){
node=s.heap[++s.heap_len]=max_code<2?++max_code:0;
tree[node*2]=1;
s.depth[node]=0;
s.opt_len--;

if(has_stree){
s.static_len-=stree[node*2+1];}}



desc.max_code=max_code;




for(n=s.heap_len>>1;n>=1;n--){pqdownheap(s,tree,n);}




node=elems;
do {


n=s.heap[1];
s.heap[1]=s.heap[s.heap_len--];
pqdownheap(s,tree,1);


m=s.heap[1];

s.heap[--s.heap_max]=n;
s.heap[--s.heap_max]=m;


tree[node*2]=tree[n*2]+tree[m*2];
s.depth[node]=(s.depth[n]>=s.depth[m]?s.depth[n]:s.depth[m])+1;
tree[n*2+1]=tree[m*2+1]=node;


s.heap[1]=node++;
pqdownheap(s,tree,1);}while(

s.heap_len>=2);

s.heap[--s.heap_max]=s.heap[1];




gen_bitlen(s,desc);


gen_codes(tree,max_code,s.bl_count);}







function scan_tree(s,tree,max_code)



{
var n;
var prevlen=-1;
var curlen;

var nextlen=tree[0*2+1];

var count=0;
var max_count=7;
var min_count=4;

if(nextlen===0){
max_count=138;
min_count=3;}

tree[(max_code+1)*2+1]=0xffff;

for(n=0;n<=max_code;n++){
curlen=nextlen;
nextlen=tree[(n+1)*2+1];

if(++count<max_count&&curlen===nextlen){
continue;}else 

if(count<min_count){
s.bl_tree[curlen*2]+=count;}else 

if(curlen!==0){

if(curlen!==prevlen){s.bl_tree[curlen*2]++;}
s.bl_tree[REP_3_6*2]++;}else 

if(count<=10){
s.bl_tree[REPZ_3_10*2]++;}else 

{
s.bl_tree[REPZ_11_138*2]++;}


count=0;
prevlen=curlen;

if(nextlen===0){
max_count=138;
min_count=3;}else 

if(curlen===nextlen){
max_count=6;
min_count=3;}else 

{
max_count=7;
min_count=4;}}}









function send_tree(s,tree,max_code)



{
var n;
var prevlen=-1;
var curlen;

var nextlen=tree[0*2+1];

var count=0;
var max_count=7;
var min_count=4;


if(nextlen===0){
max_count=138;
min_count=3;}


for(n=0;n<=max_code;n++){
curlen=nextlen;
nextlen=tree[(n+1)*2+1];

if(++count<max_count&&curlen===nextlen){
continue;}else 

if(count<min_count){
do {send_code(s,curlen,s.bl_tree);}while(--count!==0);}else 

if(curlen!==0){
if(curlen!==prevlen){
send_code(s,curlen,s.bl_tree);
count--;}


send_code(s,REP_3_6,s.bl_tree);
send_bits(s,count-3,2);}else 

if(count<=10){
send_code(s,REPZ_3_10,s.bl_tree);
send_bits(s,count-3,3);}else 

{
send_code(s,REPZ_11_138,s.bl_tree);
send_bits(s,count-11,7);}


count=0;
prevlen=curlen;
if(nextlen===0){
max_count=138;
min_count=3;}else 

if(curlen===nextlen){
max_count=6;
min_count=3;}else 

{
max_count=7;
min_count=4;}}}









function build_bl_tree(s){
var max_blindex;


scan_tree(s,s.dyn_ltree,s.l_desc.max_code);
scan_tree(s,s.dyn_dtree,s.d_desc.max_code);


build_tree(s,s.bl_desc);








for(max_blindex=BL_CODES-1;max_blindex>=3;max_blindex--){
if(s.bl_tree[bl_order[max_blindex]*2+1]!==0){
break;}}



s.opt_len+=3*(max_blindex+1)+5+5+4;



return max_blindex;}








function send_all_trees(s,lcodes,dcodes,blcodes)


{
var rank;





send_bits(s,lcodes-257,5);
send_bits(s,dcodes-1,5);
send_bits(s,blcodes-4,4);
for(rank=0;rank<blcodes;rank++){

send_bits(s,s.bl_tree[bl_order[rank]*2+1],3);}



send_tree(s,s.dyn_ltree,lcodes-1);


send_tree(s,s.dyn_dtree,dcodes-1);}

















function detect_data_type(s){




var black_mask=0xf3ffc07f;
var n;


for(n=0;n<=31;n++,black_mask>>>=1){
if(black_mask&1&&s.dyn_ltree[n*2]!==0){
return Z_BINARY;}}




if(s.dyn_ltree[9*2]!==0||s.dyn_ltree[10*2]!==0||
s.dyn_ltree[13*2]!==0){
return Z_TEXT;}

for(n=32;n<LITERALS;n++){
if(s.dyn_ltree[n*2]!==0){
return Z_TEXT;}}






return Z_BINARY;}



var static_init_done=false;




function _tr_init(s)
{

if(!static_init_done){
tr_static_init();
static_init_done=true;}


s.l_desc=new TreeDesc(s.dyn_ltree,static_l_desc);
s.d_desc=new TreeDesc(s.dyn_dtree,static_d_desc);
s.bl_desc=new TreeDesc(s.bl_tree,static_bl_desc);

s.bi_buf=0;
s.bi_valid=0;


init_block(s);}






function _tr_stored_block(s,buf,stored_len,last)




{
send_bits(s,(STORED_BLOCK<<1)+(last?1:0),3);
copy_block(s,buf,stored_len,true);}







function _tr_align(s){
send_bits(s,STATIC_TREES<<1,3);
send_code(s,END_BLOCK,static_ltree);
bi_flush(s);}







function _tr_flush_block(s,buf,stored_len,last)




{
var opt_lenb,static_lenb;
var max_blindex=0;


if(s.level>0){


if(s.strm.data_type===Z_UNKNOWN){
s.strm.data_type=detect_data_type(s);}



build_tree(s,s.l_desc);



build_tree(s,s.d_desc);









max_blindex=build_bl_tree(s);


opt_lenb=s.opt_len+3+7>>>3;
static_lenb=s.static_len+3+7>>>3;





if(static_lenb<=opt_lenb){opt_lenb=static_lenb;}}else 

{

opt_lenb=static_lenb=stored_len+5;}


if(stored_len+4<=opt_lenb&&buf!==-1){








_tr_stored_block(s,buf,stored_len,last);}else 

if(s.strategy===Z_FIXED||static_lenb===opt_lenb){

send_bits(s,(STATIC_TREES<<1)+(last?1:0),3);
compress_block(s,static_ltree,static_dtree);}else 

{
send_bits(s,(DYN_TREES<<1)+(last?1:0),3);
send_all_trees(s,s.l_desc.max_code+1,s.d_desc.max_code+1,max_blindex+1);
compress_block(s,s.dyn_ltree,s.dyn_dtree);}





init_block(s);

if(last){
bi_windup(s);}}









function _tr_tally(s,dist,lc)



{


s.pending_buf[s.d_buf+s.last_lit*2]=dist>>>8&0xff;
s.pending_buf[s.d_buf+s.last_lit*2+1]=dist&0xff;

s.pending_buf[s.l_buf+s.last_lit]=lc&0xff;
s.last_lit++;

if(dist===0){

s.dyn_ltree[lc*2]++;}else 
{
s.matches++;

dist--;




s.dyn_ltree[(_length_code[lc]+LITERALS+1)*2]++;
s.dyn_dtree[d_code(dist)*2]++;}

























return s.last_lit===s.lit_bufsize-1;}






exports._tr_init=_tr_init;
exports._tr_stored_block=_tr_stored_block;
exports._tr_flush_block=_tr_flush_block;
exports._tr_tally=_tr_tally;
exports._tr_align=_tr_align;
});
__d('pako/lib/zlib/adler32.js',function(global, require, module, exports) {  'use strict';





function adler32(adler,buf,len,pos){
var s1=adler&0xffff|0,
s2=adler>>>16&0xffff|0,
n=0;

while(len!==0){



n=len>2000?2000:len;
len-=n;

do {
s1=s1+buf[pos++]|0;
s2=s2+s1|0;}while(
--n);

s1%=65521;
s2%=65521;}


return s1|s2<<16|0;}



module.exports=adler32;
});
__d('pako/lib/zlib/crc32.js',function(global, require, module, exports) {  'use strict';







function makeTable(){
var c,table=[];

for(var n=0;n<256;n++){
c=n;
for(var k=0;k<8;k++){
c=c&1?0xEDB88320^c>>>1:c>>>1;}

table[n]=c;}


return table;}



var crcTable=makeTable();


function crc32(crc,buf,len,pos){
var t=crcTable,
end=pos+len;

crc=crc^-1;

for(var i=pos;i<end;i++){
crc=crc>>>8^t[(crc^buf[i])&0xFF];}


return crc^-1;}



module.exports=crc32;
});
__d('pako/lib/zlib/messages.js',function(global, require, module, exports) {  'use strict';

module.exports={
'2':'need dictionary',
'1':'stream end',
'0':'',
'-1':'file error',
'-2':'stream error',
'-3':'data error',
'-4':'insufficient memory',
'-5':'buffer error',
'-6':'incompatible version'};
});
__d('pako/lib/utils/strings.js',function(global, require, module, exports) {  'use strict';



var utils=require('pako/lib/utils/common.js');







var STR_APPLY_OK=true;
var STR_APPLY_UIA_OK=true;

try{String.fromCharCode.apply(null,[0]);}catch(__){STR_APPLY_OK=false;}
try{String.fromCharCode.apply(null,new Uint8Array(1));}catch(__){STR_APPLY_UIA_OK=false;}





var _utf8len=new utils.Buf8(256);
for(var q=0;q<256;q++){
_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;}

_utf8len[254]=_utf8len[254]=1;



exports.string2buf=function(str){
var buf,c,c2,m_pos,i,str_len=str.length,buf_len=0;


for(m_pos=0;m_pos<str_len;m_pos++){
c=str.charCodeAt(m_pos);
if((c&0xfc00)===0xd800&&m_pos+1<str_len){
c2=str.charCodeAt(m_pos+1);
if((c2&0xfc00)===0xdc00){
c=0x10000+(c-0xd800<<10)+(c2-0xdc00);
m_pos++;}}


buf_len+=c<0x80?1:c<0x800?2:c<0x10000?3:4;}



buf=new utils.Buf8(buf_len);


for(i=0,m_pos=0;i<buf_len;m_pos++){
c=str.charCodeAt(m_pos);
if((c&0xfc00)===0xd800&&m_pos+1<str_len){
c2=str.charCodeAt(m_pos+1);
if((c2&0xfc00)===0xdc00){
c=0x10000+(c-0xd800<<10)+(c2-0xdc00);
m_pos++;}}


if(c<0x80){

buf[i++]=c;}else 
if(c<0x800){

buf[i++]=0xC0|c>>>6;
buf[i++]=0x80|c&0x3f;}else 
if(c<0x10000){

buf[i++]=0xE0|c>>>12;
buf[i++]=0x80|c>>>6&0x3f;
buf[i++]=0x80|c&0x3f;}else 
{

buf[i++]=0xf0|c>>>18;
buf[i++]=0x80|c>>>12&0x3f;
buf[i++]=0x80|c>>>6&0x3f;
buf[i++]=0x80|c&0x3f;}}



return buf;};



function buf2binstring(buf,len){

if(len<65537){
if(buf.subarray&&STR_APPLY_UIA_OK||!buf.subarray&&STR_APPLY_OK){
return String.fromCharCode.apply(null,utils.shrinkBuf(buf,len));}}



var result='';
for(var i=0;i<len;i++){
result+=String.fromCharCode(buf[i]);}

return result;}




exports.buf2binstring=function(buf){
return buf2binstring(buf,buf.length);};




exports.binstring2buf=function(str){
var buf=new utils.Buf8(str.length);
for(var i=0,len=buf.length;i<len;i++){
buf[i]=str.charCodeAt(i);}

return buf;};




exports.buf2string=function(buf,max){
var i,out,c,c_len;
var len=max||buf.length;




var utf16buf=new Array(len*2);

for(out=0,i=0;i<len;){
c=buf[i++];

if(c<0x80){utf16buf[out++]=c;continue;}

c_len=_utf8len[c];

if(c_len>4){utf16buf[out++]=0xfffd;i+=c_len-1;continue;}


c&=c_len===2?0x1f:c_len===3?0x0f:0x07;

while(c_len>1&&i<len){
c=c<<6|buf[i++]&0x3f;
c_len--;}



if(c_len>1){utf16buf[out++]=0xfffd;continue;}

if(c<0x10000){
utf16buf[out++]=c;}else 
{
c-=0x10000;
utf16buf[out++]=0xd800|c>>10&0x3ff;
utf16buf[out++]=0xdc00|c&0x3ff;}}



return buf2binstring(utf16buf,out);};









exports.utf8border=function(buf,max){
var pos;

max=max||buf.length;
if(max>buf.length){max=buf.length;}


pos=max-1;
while(pos>=0&&(buf[pos]&0xC0)===0x80){pos--;}



if(pos<0){return max;}



if(pos===0){return max;}

return pos+_utf8len[buf[pos]]>max?pos:max;};
});
__d('pako/lib/zlib/zstream.js',function(global, require, module, exports) {  'use strict';


function ZStream(){

this.input=null;
this.next_in=0;

this.avail_in=0;

this.total_in=0;

this.output=null;
this.next_out=0;

this.avail_out=0;

this.total_out=0;

this.msg='';

this.state=null;

this.data_type=2;

this.adler=0;}


module.exports=ZStream;
});
__d('pako/lib/inflate.js',function(global, require, module, exports) {  'use strict';


var zlib_inflate=require('pako/lib/zlib/inflate.js');
var utils=require('pako/lib/utils/common.js');
var strings=require('pako/lib/utils/strings.js');
var c=require('pako/lib/zlib/constants.js');
var msg=require('pako/lib/zlib/messages.js');
var zstream=require('pako/lib/zlib/zstream.js');
var gzheader=require('pako/lib/zlib/gzheader.js');

var toString=Object.prototype.toString;















































































var Inflate=function(options){

this.options=utils.assign({
chunkSize:16384,
windowBits:0,
to:''},
options||{});

var opt=this.options;



if(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){
opt.windowBits=-opt.windowBits;
if(opt.windowBits===0){opt.windowBits=-15;}}



if(opt.windowBits>=0&&opt.windowBits<16&&
!(options&&options.windowBits)){
opt.windowBits+=32;}




if(opt.windowBits>15&&opt.windowBits<48){


if((opt.windowBits&15)===0){
opt.windowBits|=15;}}



this.err=0;
this.msg='';
this.ended=false;
this.chunks=[];

this.strm=new zstream();
this.strm.avail_out=0;

var status=zlib_inflate.inflateInit2(
this.strm,
opt.windowBits);


if(status!==c.Z_OK){
throw new Error(msg[status]);}


this.header=new gzheader();

zlib_inflate.inflateGetHeader(this.strm,this.header);};






























Inflate.prototype.push=function(data,mode){
var strm=this.strm;
var chunkSize=this.options.chunkSize;
var status,_mode;
var next_out_utf8,tail,utf8str;



var allowBufError=false;

if(this.ended){return false;}
_mode=mode===~ ~mode?mode:mode===true?c.Z_FINISH:c.Z_NO_FLUSH;


if(typeof data==='string'){

strm.input=strings.binstring2buf(data);}else 
if(toString.call(data)==='[object ArrayBuffer]'){
strm.input=new Uint8Array(data);}else 
{
strm.input=data;}


strm.next_in=0;
strm.avail_in=strm.input.length;

do {
if(strm.avail_out===0){
strm.output=new utils.Buf8(chunkSize);
strm.next_out=0;
strm.avail_out=chunkSize;}


status=zlib_inflate.inflate(strm,c.Z_NO_FLUSH);

if(status===c.Z_BUF_ERROR&&allowBufError===true){
status=c.Z_OK;
allowBufError=false;}


if(status!==c.Z_STREAM_END&&status!==c.Z_OK){
this.onEnd(status);
this.ended=true;
return false;}


if(strm.next_out){
if(strm.avail_out===0||status===c.Z_STREAM_END||strm.avail_in===0&&(_mode===c.Z_FINISH||_mode===c.Z_SYNC_FLUSH)){

if(this.options.to==='string'){

next_out_utf8=strings.utf8border(strm.output,strm.next_out);

tail=strm.next_out-next_out_utf8;
utf8str=strings.buf2string(strm.output,next_out_utf8);


strm.next_out=tail;
strm.avail_out=chunkSize-tail;
if(tail){utils.arraySet(strm.output,strm.output,next_out_utf8,tail,0);}

this.onData(utf8str);}else 

{
this.onData(utils.shrinkBuf(strm.output,strm.next_out));}}}











if(strm.avail_in===0&&strm.avail_out===0){
allowBufError=true;}}while(


(strm.avail_in>0||strm.avail_out===0)&&status!==c.Z_STREAM_END);

if(status===c.Z_STREAM_END){
_mode=c.Z_FINISH;}



if(_mode===c.Z_FINISH){
status=zlib_inflate.inflateEnd(this.strm);
this.onEnd(status);
this.ended=true;
return status===c.Z_OK;}



if(_mode===c.Z_SYNC_FLUSH){
this.onEnd(c.Z_OK);
strm.avail_out=0;
return true;}


return true;};












Inflate.prototype.onData=function(chunk){
this.chunks.push(chunk);};













Inflate.prototype.onEnd=function(status){

if(status===c.Z_OK){
if(this.options.to==='string'){


this.result=this.chunks.join('');}else 
{
this.result=utils.flattenChunks(this.chunks);}}


this.chunks=[];
this.err=status;
this.msg=this.strm.msg;};










































function inflate(input,options){
var inflator=new Inflate(options);

inflator.push(input,true);


if(inflator.err){throw inflator.msg;}

return inflator.result;}











function inflateRaw(input,options){
options=options||{};
options.raw=true;
return inflate(input,options);}













exports.Inflate=Inflate;
exports.inflate=inflate;
exports.inflateRaw=inflateRaw;
exports.ungzip=inflate;
});
__d('pako/lib/zlib/inflate.js',function(global, require, module, exports) {  'use strict';


var utils=require('pako/lib/utils/common.js');
var adler32=require('pako/lib/zlib/adler32.js');
var crc32=require('pako/lib/zlib/crc32.js');
var inflate_fast=require('pako/lib/zlib/inffast.js');
var inflate_table=require('pako/lib/zlib/inftrees.js');

var CODES=0;
var LENS=1;
var DISTS=2;










var Z_FINISH=4;
var Z_BLOCK=5;
var Z_TREES=6;





var Z_OK=0;
var Z_STREAM_END=1;
var Z_NEED_DICT=2;

var Z_STREAM_ERROR=-2;
var Z_DATA_ERROR=-3;
var Z_MEM_ERROR=-4;
var Z_BUF_ERROR=-5;



var Z_DEFLATED=8;






var HEAD=1;
var FLAGS=2;
var TIME=3;
var OS=4;
var EXLEN=5;
var EXTRA=6;
var NAME=7;
var COMMENT=8;
var HCRC=9;
var DICTID=10;
var DICT=11;
var TYPE=12;
var TYPEDO=13;
var STORED=14;
var COPY_=15;
var COPY=16;
var TABLE=17;
var LENLENS=18;
var CODELENS=19;
var LEN_=20;
var LEN=21;
var LENEXT=22;
var DIST=23;
var DISTEXT=24;
var MATCH=25;
var LIT=26;
var CHECK=27;
var LENGTH=28;
var DONE=29;
var BAD=30;
var MEM=31;
var SYNC=32;





var ENOUGH_LENS=852;
var ENOUGH_DISTS=592;


var MAX_WBITS=15;

var DEF_WBITS=MAX_WBITS;


function ZSWAP32(q){
return (q>>>24&0xff)+(
q>>>8&0xff00)+(
(q&0xff00)<<8)+(
(q&0xff)<<24);}



function InflateState(){
this.mode=0;
this.last=false;
this.wrap=0;
this.havedict=false;
this.flags=0;
this.dmax=0;
this.check=0;
this.total=0;

this.head=null;


this.wbits=0;
this.wsize=0;
this.whave=0;
this.wnext=0;
this.window=null;


this.hold=0;
this.bits=0;


this.length=0;
this.offset=0;


this.extra=0;


this.lencode=null;
this.distcode=null;
this.lenbits=0;
this.distbits=0;


this.ncode=0;
this.nlen=0;
this.ndist=0;
this.have=0;
this.next=null;

this.lens=new utils.Buf16(320);
this.work=new utils.Buf16(288);






this.lendyn=null;
this.distdyn=null;
this.sane=0;
this.back=0;
this.was=0;}


function inflateResetKeep(strm){
var state;

if(!strm||!strm.state){return Z_STREAM_ERROR;}
state=strm.state;
strm.total_in=strm.total_out=state.total=0;
strm.msg='';
if(state.wrap){
strm.adler=state.wrap&1;}

state.mode=HEAD;
state.last=0;
state.havedict=0;
state.dmax=32768;
state.head=null;
state.hold=0;
state.bits=0;

state.lencode=state.lendyn=new utils.Buf32(ENOUGH_LENS);
state.distcode=state.distdyn=new utils.Buf32(ENOUGH_DISTS);

state.sane=1;
state.back=-1;

return Z_OK;}


function inflateReset(strm){
var state;

if(!strm||!strm.state){return Z_STREAM_ERROR;}
state=strm.state;
state.wsize=0;
state.whave=0;
state.wnext=0;
return inflateResetKeep(strm);}



function inflateReset2(strm,windowBits){
var wrap;
var state;


if(!strm||!strm.state){return Z_STREAM_ERROR;}
state=strm.state;


if(windowBits<0){
wrap=0;
windowBits=-windowBits;}else 

{
wrap=(windowBits>>4)+1;
if(windowBits<48){
windowBits&=15;}}




if(windowBits&&(windowBits<8||windowBits>15)){
return Z_STREAM_ERROR;}

if(state.window!==null&&state.wbits!==windowBits){
state.window=null;}



state.wrap=wrap;
state.wbits=windowBits;
return inflateReset(strm);}


function inflateInit2(strm,windowBits){
var ret;
var state;

if(!strm){return Z_STREAM_ERROR;}


state=new InflateState();



strm.state=state;
state.window=null;
ret=inflateReset2(strm,windowBits);
if(ret!==Z_OK){
strm.state=null;}

return ret;}


function inflateInit(strm){
return inflateInit2(strm,DEF_WBITS);}













var virgin=true;

var lenfix,distfix;

function fixedtables(state){

if(virgin){
var sym;

lenfix=new utils.Buf32(512);
distfix=new utils.Buf32(32);


sym=0;
while(sym<144){state.lens[sym++]=8;}
while(sym<256){state.lens[sym++]=9;}
while(sym<280){state.lens[sym++]=7;}
while(sym<288){state.lens[sym++]=8;}

inflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});


sym=0;
while(sym<32){state.lens[sym++]=5;}

inflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});


virgin=false;}


state.lencode=lenfix;
state.lenbits=9;
state.distcode=distfix;
state.distbits=5;}

















function updatewindow(strm,src,end,copy){
var dist;
var state=strm.state;


if(state.window===null){
state.wsize=1<<state.wbits;
state.wnext=0;
state.whave=0;

state.window=new utils.Buf8(state.wsize);}



if(copy>=state.wsize){
utils.arraySet(state.window,src,end-state.wsize,state.wsize,0);
state.wnext=0;
state.whave=state.wsize;}else 

{
dist=state.wsize-state.wnext;
if(dist>copy){
dist=copy;}


utils.arraySet(state.window,src,end-copy,dist,state.wnext);
copy-=dist;
if(copy){

utils.arraySet(state.window,src,end-copy,copy,0);
state.wnext=copy;
state.whave=state.wsize;}else 

{
state.wnext+=dist;
if(state.wnext===state.wsize){state.wnext=0;}
if(state.whave<state.wsize){state.whave+=dist;}}}


return 0;}


function inflate(strm,flush){
var state;
var input,output;
var next;
var put;
var have,left;
var hold;
var bits;
var _in,_out;
var copy;
var from;
var from_source;
var here=0;
var here_bits,here_op,here_val;

var last_bits,last_op,last_val;
var len;
var ret;
var hbuf=new utils.Buf8(4);
var opts;

var n;

var order=
[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];


if(!strm||!strm.state||!strm.output||
!strm.input&&strm.avail_in!==0){
return Z_STREAM_ERROR;}


state=strm.state;
if(state.mode===TYPE){state.mode=TYPEDO;}



put=strm.next_out;
output=strm.output;
left=strm.avail_out;
next=strm.next_in;
input=strm.input;
have=strm.avail_in;
hold=state.hold;
bits=state.bits;


_in=have;
_out=left;
ret=Z_OK;

inf_leave: 
for(;;){
switch(state.mode){
case HEAD:
if(state.wrap===0){
state.mode=TYPEDO;
break;}


while(bits<16){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(state.wrap&2&&hold===0x8b1f){
state.check=0;

hbuf[0]=hold&0xff;
hbuf[1]=hold>>>8&0xff;
state.check=crc32(state.check,hbuf,2,0);



hold=0;
bits=0;

state.mode=FLAGS;
break;}

state.flags=0;
if(state.head){
state.head.done=false;}

if(!(state.wrap&1)||
(((hold&0xff)<<8)+(hold>>8))%31){
strm.msg='incorrect header check';
state.mode=BAD;
break;}

if((hold&0x0f)!==Z_DEFLATED){
strm.msg='unknown compression method';
state.mode=BAD;
break;}


hold>>>=4;
bits-=4;

len=(hold&0x0f)+8;
if(state.wbits===0){
state.wbits=len;}else 

if(len>state.wbits){
strm.msg='invalid window size';
state.mode=BAD;
break;}

state.dmax=1<<len;

strm.adler=state.check=1;
state.mode=hold&0x200?DICTID:TYPE;

hold=0;
bits=0;

break;
case FLAGS:

while(bits<16){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.flags=hold;
if((state.flags&0xff)!==Z_DEFLATED){
strm.msg='unknown compression method';
state.mode=BAD;
break;}

if(state.flags&0xe000){
strm.msg='unknown header flags set';
state.mode=BAD;
break;}

if(state.head){
state.head.text=hold>>8&1;}

if(state.flags&0x0200){

hbuf[0]=hold&0xff;
hbuf[1]=hold>>>8&0xff;
state.check=crc32(state.check,hbuf,2,0);}



hold=0;
bits=0;

state.mode=TIME;

case TIME:

while(bits<32){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(state.head){
state.head.time=hold;}

if(state.flags&0x0200){

hbuf[0]=hold&0xff;
hbuf[1]=hold>>>8&0xff;
hbuf[2]=hold>>>16&0xff;
hbuf[3]=hold>>>24&0xff;
state.check=crc32(state.check,hbuf,4,0);}



hold=0;
bits=0;

state.mode=OS;

case OS:

while(bits<16){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(state.head){
state.head.xflags=hold&0xff;
state.head.os=hold>>8;}

if(state.flags&0x0200){

hbuf[0]=hold&0xff;
hbuf[1]=hold>>>8&0xff;
state.check=crc32(state.check,hbuf,2,0);}



hold=0;
bits=0;

state.mode=EXLEN;

case EXLEN:
if(state.flags&0x0400){

while(bits<16){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.length=hold;
if(state.head){
state.head.extra_len=hold;}

if(state.flags&0x0200){

hbuf[0]=hold&0xff;
hbuf[1]=hold>>>8&0xff;
state.check=crc32(state.check,hbuf,2,0);}



hold=0;
bits=0;}else 


if(state.head){
state.head.extra=null;}

state.mode=EXTRA;

case EXTRA:
if(state.flags&0x0400){
copy=state.length;
if(copy>have){copy=have;}
if(copy){
if(state.head){
len=state.head.extra_len-state.length;
if(!state.head.extra){

state.head.extra=new Array(state.head.extra_len);}

utils.arraySet(
state.head.extra,
input,
next,


copy,

len);}





if(state.flags&0x0200){
state.check=crc32(state.check,input,copy,next);}

have-=copy;
next+=copy;
state.length-=copy;}

if(state.length){break inf_leave;}}

state.length=0;
state.mode=NAME;

case NAME:
if(state.flags&0x0800){
if(have===0){break inf_leave;}
copy=0;
do {

len=input[next+copy++];

if(state.head&&len&&
state.length<65536){
state.head.name+=String.fromCharCode(len);}}while(

len&&copy<have);

if(state.flags&0x0200){
state.check=crc32(state.check,input,copy,next);}

have-=copy;
next+=copy;
if(len){break inf_leave;}}else 

if(state.head){
state.head.name=null;}

state.length=0;
state.mode=COMMENT;

case COMMENT:
if(state.flags&0x1000){
if(have===0){break inf_leave;}
copy=0;
do {
len=input[next+copy++];

if(state.head&&len&&
state.length<65536){
state.head.comment+=String.fromCharCode(len);}}while(

len&&copy<have);
if(state.flags&0x0200){
state.check=crc32(state.check,input,copy,next);}

have-=copy;
next+=copy;
if(len){break inf_leave;}}else 

if(state.head){
state.head.comment=null;}

state.mode=HCRC;

case HCRC:
if(state.flags&0x0200){

while(bits<16){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(hold!==(state.check&0xffff)){
strm.msg='header crc mismatch';
state.mode=BAD;
break;}


hold=0;
bits=0;}


if(state.head){
state.head.hcrc=state.flags>>9&1;
state.head.done=true;}

strm.adler=state.check=0;
state.mode=TYPE;
break;
case DICTID:

while(bits<32){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


strm.adler=state.check=ZSWAP32(hold);

hold=0;
bits=0;

state.mode=DICT;

case DICT:
if(state.havedict===0){

strm.next_out=put;
strm.avail_out=left;
strm.next_in=next;
strm.avail_in=have;
state.hold=hold;
state.bits=bits;

return Z_NEED_DICT;}

strm.adler=state.check=1;
state.mode=TYPE;

case TYPE:
if(flush===Z_BLOCK||flush===Z_TREES){break inf_leave;}

case TYPEDO:
if(state.last){

hold>>>=bits&7;
bits-=bits&7;

state.mode=CHECK;
break;}


while(bits<3){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.last=hold&0x01;

hold>>>=1;
bits-=1;


switch(hold&0x03){
case 0:


state.mode=STORED;
break;
case 1:
fixedtables(state);


state.mode=LEN_;
if(flush===Z_TREES){

hold>>>=2;
bits-=2;

break inf_leave;}

break;
case 2:


state.mode=TABLE;
break;
case 3:
strm.msg='invalid block type';
state.mode=BAD;}


hold>>>=2;
bits-=2;

break;
case STORED:

hold>>>=bits&7;
bits-=bits&7;


while(bits<32){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if((hold&0xffff)!==(hold>>>16^0xffff)){
strm.msg='invalid stored block lengths';
state.mode=BAD;
break;}

state.length=hold&0xffff;



hold=0;
bits=0;

state.mode=COPY_;
if(flush===Z_TREES){break inf_leave;}

case COPY_:
state.mode=COPY;

case COPY:
copy=state.length;
if(copy){
if(copy>have){copy=have;}
if(copy>left){copy=left;}
if(copy===0){break inf_leave;}

utils.arraySet(output,input,next,copy,put);

have-=copy;
next+=copy;
left-=copy;
put+=copy;
state.length-=copy;
break;}


state.mode=TYPE;
break;
case TABLE:

while(bits<14){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.nlen=(hold&0x1f)+257;

hold>>>=5;
bits-=5;

state.ndist=(hold&0x1f)+1;

hold>>>=5;
bits-=5;

state.ncode=(hold&0x0f)+4;

hold>>>=4;
bits-=4;


if(state.nlen>286||state.ndist>30){
strm.msg='too many length or distance symbols';
state.mode=BAD;
break;}



state.have=0;
state.mode=LENLENS;

case LENLENS:
while(state.have<state.ncode){

while(bits<3){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.lens[order[state.have++]]=hold&0x07;

hold>>>=3;
bits-=3;}


while(state.have<19){
state.lens[order[state.have++]]=0;}





state.lencode=state.lendyn;
state.lenbits=7;

opts={bits:state.lenbits};
ret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);
state.lenbits=opts.bits;

if(ret){
strm.msg='invalid code lengths set';
state.mode=BAD;
break;}


state.have=0;
state.mode=CODELENS;

case CODELENS:
while(state.have<state.nlen+state.ndist){
for(;;){
here=state.lencode[hold&(1<<state.lenbits)-1];
here_bits=here>>>24;
here_op=here>>>16&0xff;
here_val=here&0xffff;

if(here_bits<=bits){break;}

if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(here_val<16){

hold>>>=here_bits;
bits-=here_bits;

state.lens[state.have++]=here_val;}else 

{
if(here_val===16){

n=here_bits+2;
while(bits<n){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}



hold>>>=here_bits;
bits-=here_bits;

if(state.have===0){
strm.msg='invalid bit length repeat';
state.mode=BAD;
break;}

len=state.lens[state.have-1];
copy=3+(hold&0x03);

hold>>>=2;
bits-=2;}else 


if(here_val===17){

n=here_bits+3;
while(bits<n){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}



hold>>>=here_bits;
bits-=here_bits;

len=0;
copy=3+(hold&0x07);

hold>>>=3;
bits-=3;}else 


{

n=here_bits+7;
while(bits<n){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}



hold>>>=here_bits;
bits-=here_bits;

len=0;
copy=11+(hold&0x7f);

hold>>>=7;
bits-=7;}


if(state.have+copy>state.nlen+state.ndist){
strm.msg='invalid bit length repeat';
state.mode=BAD;
break;}

while(copy--){
state.lens[state.have++]=len;}}}





if(state.mode===BAD){break;}


if(state.lens[256]===0){
strm.msg='invalid code -- missing end-of-block';
state.mode=BAD;
break;}





state.lenbits=9;

opts={bits:state.lenbits};
ret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);


state.lenbits=opts.bits;


if(ret){
strm.msg='invalid literal/lengths set';
state.mode=BAD;
break;}


state.distbits=6;


state.distcode=state.distdyn;
opts={bits:state.distbits};
ret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);


state.distbits=opts.bits;


if(ret){
strm.msg='invalid distances set';
state.mode=BAD;
break;}


state.mode=LEN_;
if(flush===Z_TREES){break inf_leave;}

case LEN_:
state.mode=LEN;

case LEN:
if(have>=6&&left>=258){

strm.next_out=put;
strm.avail_out=left;
strm.next_in=next;
strm.avail_in=have;
state.hold=hold;
state.bits=bits;

inflate_fast(strm,_out);

put=strm.next_out;
output=strm.output;
left=strm.avail_out;
next=strm.next_in;
input=strm.input;
have=strm.avail_in;
hold=state.hold;
bits=state.bits;


if(state.mode===TYPE){
state.back=-1;}

break;}

state.back=0;
for(;;){
here=state.lencode[hold&(1<<state.lenbits)-1];
here_bits=here>>>24;
here_op=here>>>16&0xff;
here_val=here&0xffff;

if(here_bits<=bits){break;}

if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(here_op&&(here_op&0xf0)===0){
last_bits=here_bits;
last_op=here_op;
last_val=here_val;
for(;;){
here=state.lencode[last_val+(
(hold&(1<<last_bits+last_op)-1)>>last_bits)];
here_bits=here>>>24;
here_op=here>>>16&0xff;
here_val=here&0xffff;

if(last_bits+here_bits<=bits){break;}

if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}



hold>>>=last_bits;
bits-=last_bits;

state.back+=last_bits;}


hold>>>=here_bits;
bits-=here_bits;

state.back+=here_bits;
state.length=here_val;
if(here_op===0){



state.mode=LIT;
break;}

if(here_op&32){

state.back=-1;
state.mode=TYPE;
break;}

if(here_op&64){
strm.msg='invalid literal/length code';
state.mode=BAD;
break;}

state.extra=here_op&15;
state.mode=LENEXT;

case LENEXT:
if(state.extra){

n=state.extra;
while(bits<n){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.length+=hold&(1<<state.extra)-1;

hold>>>=state.extra;
bits-=state.extra;

state.back+=state.extra;}


state.was=state.length;
state.mode=DIST;

case DIST:
for(;;){
here=state.distcode[hold&(1<<state.distbits)-1];
here_bits=here>>>24;
here_op=here>>>16&0xff;
here_val=here&0xffff;

if(here_bits<=bits){break;}

if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if((here_op&0xf0)===0){
last_bits=here_bits;
last_op=here_op;
last_val=here_val;
for(;;){
here=state.distcode[last_val+(
(hold&(1<<last_bits+last_op)-1)>>last_bits)];
here_bits=here>>>24;
here_op=here>>>16&0xff;
here_val=here&0xffff;

if(last_bits+here_bits<=bits){break;}

if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}



hold>>>=last_bits;
bits-=last_bits;

state.back+=last_bits;}


hold>>>=here_bits;
bits-=here_bits;

state.back+=here_bits;
if(here_op&64){
strm.msg='invalid distance code';
state.mode=BAD;
break;}

state.offset=here_val;
state.extra=here_op&15;
state.mode=DISTEXT;

case DISTEXT:
if(state.extra){

n=state.extra;
while(bits<n){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


state.offset+=hold&(1<<state.extra)-1;

hold>>>=state.extra;
bits-=state.extra;

state.back+=state.extra;}


if(state.offset>state.dmax){
strm.msg='invalid distance too far back';
state.mode=BAD;
break;}



state.mode=MATCH;

case MATCH:
if(left===0){break inf_leave;}
copy=_out-left;
if(state.offset>copy){
copy=state.offset-copy;
if(copy>state.whave){
if(state.sane){
strm.msg='invalid distance too far back';
state.mode=BAD;
break;}}

















if(copy>state.wnext){
copy-=state.wnext;
from=state.wsize-copy;}else 

{
from=state.wnext-copy;}

if(copy>state.length){copy=state.length;}
from_source=state.window;}else 

{
from_source=output;
from=put-state.offset;
copy=state.length;}

if(copy>left){copy=left;}
left-=copy;
state.length-=copy;
do {
output[put++]=from_source[from++];}while(
--copy);
if(state.length===0){state.mode=LEN;}
break;
case LIT:
if(left===0){break inf_leave;}
output[put++]=state.length;
left--;
state.mode=LEN;
break;
case CHECK:
if(state.wrap){

while(bits<32){
if(have===0){break inf_leave;}
have--;

hold|=input[next++]<<bits;
bits+=8;}


_out-=left;
strm.total_out+=_out;
state.total+=_out;
if(_out){
strm.adler=state.check=

state.flags?crc32(state.check,output,_out,put-_out):adler32(state.check,output,_out,put-_out);}


_out=left;

if((state.flags?hold:ZSWAP32(hold))!==state.check){
strm.msg='incorrect data check';
state.mode=BAD;
break;}


hold=0;
bits=0;}



state.mode=LENGTH;

case LENGTH:
if(state.wrap&&state.flags){

while(bits<32){
if(have===0){break inf_leave;}
have--;
hold+=input[next++]<<bits;
bits+=8;}


if(hold!==(state.total&0xffffffff)){
strm.msg='incorrect length check';
state.mode=BAD;
break;}


hold=0;
bits=0;}



state.mode=DONE;

case DONE:
ret=Z_STREAM_END;
break inf_leave;
case BAD:
ret=Z_DATA_ERROR;
break inf_leave;
case MEM:
return Z_MEM_ERROR;
case SYNC:

default:
return Z_STREAM_ERROR;}}













strm.next_out=put;
strm.avail_out=left;
strm.next_in=next;
strm.avail_in=have;
state.hold=hold;
state.bits=bits;


if(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(
state.mode<CHECK||flush!==Z_FINISH)){
if(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){
state.mode=MEM;
return Z_MEM_ERROR;}}


_in-=strm.avail_in;
_out-=strm.avail_out;
strm.total_in+=_in;
strm.total_out+=_out;
state.total+=_out;
if(state.wrap&&_out){
strm.adler=state.check=
state.flags?crc32(state.check,output,_out,strm.next_out-_out):adler32(state.check,output,_out,strm.next_out-_out);}

strm.data_type=state.bits+(state.last?64:0)+(
state.mode===TYPE?128:0)+(
state.mode===LEN_||state.mode===COPY_?256:0);
if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){
ret=Z_BUF_ERROR;}

return ret;}


function inflateEnd(strm){

if(!strm||!strm.state){
return Z_STREAM_ERROR;}


var state=strm.state;
if(state.window){
state.window=null;}

strm.state=null;
return Z_OK;}


function inflateGetHeader(strm,head){
var state;


if(!strm||!strm.state){return Z_STREAM_ERROR;}
state=strm.state;
if((state.wrap&2)===0){return Z_STREAM_ERROR;}


state.head=head;
head.done=false;
return Z_OK;}



exports.inflateReset=inflateReset;
exports.inflateReset2=inflateReset2;
exports.inflateResetKeep=inflateResetKeep;
exports.inflateInit=inflateInit;
exports.inflateInit2=inflateInit2;
exports.inflate=inflate;
exports.inflateEnd=inflateEnd;
exports.inflateGetHeader=inflateGetHeader;
exports.inflateInfo='pako inflate (from Nodeca project)';
});
__d('pako/lib/zlib/inffast.js',function(global, require, module, exports) {  'use strict';


var BAD=30;
var TYPE=12;




































module.exports=function inflate_fast(strm,start){
var state;
var _in;
var last;
var _out;
var beg;
var end;

var dmax;

var wsize;
var whave;
var wnext;

var s_window;
var hold;
var bits;
var lcode;
var dcode;
var lmask;
var dmask;
var here;
var op;

var len;
var dist;
var from;
var from_source;


var input,output;


state=strm.state;

_in=strm.next_in;
input=strm.input;
last=_in+(strm.avail_in-5);
_out=strm.next_out;
output=strm.output;
beg=_out-(start-strm.avail_out);
end=_out+(strm.avail_out-257);

dmax=state.dmax;

wsize=state.wsize;
whave=state.whave;
wnext=state.wnext;
s_window=state.window;
hold=state.hold;
bits=state.bits;
lcode=state.lencode;
dcode=state.distcode;
lmask=(1<<state.lenbits)-1;
dmask=(1<<state.distbits)-1;





top: 
do {
if(bits<15){
hold+=input[_in++]<<bits;
bits+=8;
hold+=input[_in++]<<bits;
bits+=8;}


here=lcode[hold&lmask];

dolen: 
for(;;){
op=here>>>24;
hold>>>=op;
bits-=op;
op=here>>>16&0xff;
if(op===0){



output[_out++]=here&0xffff;}else 

if(op&16){
len=here&0xffff;
op&=15;
if(op){
if(bits<op){
hold+=input[_in++]<<bits;
bits+=8;}

len+=hold&(1<<op)-1;
hold>>>=op;
bits-=op;}


if(bits<15){
hold+=input[_in++]<<bits;
bits+=8;
hold+=input[_in++]<<bits;
bits+=8;}

here=dcode[hold&dmask];

dodist: 
for(;;){
op=here>>>24;
hold>>>=op;
bits-=op;
op=here>>>16&0xff;

if(op&16){
dist=here&0xffff;
op&=15;
if(bits<op){
hold+=input[_in++]<<bits;
bits+=8;
if(bits<op){
hold+=input[_in++]<<bits;
bits+=8;}}


dist+=hold&(1<<op)-1;

if(dist>dmax){
strm.msg='invalid distance too far back';
state.mode=BAD;
break top;}


hold>>>=op;
bits-=op;

op=_out-beg;
if(dist>op){
op=dist-op;
if(op>whave){
if(state.sane){
strm.msg='invalid distance too far back';
state.mode=BAD;
break top;}}
























from=0;
from_source=s_window;
if(wnext===0){
from+=wsize-op;
if(op<len){
len-=op;
do {
output[_out++]=s_window[from++];}while(
--op);
from=_out-dist;
from_source=output;}}else 


if(wnext<op){
from+=wsize+wnext-op;
op-=wnext;
if(op<len){
len-=op;
do {
output[_out++]=s_window[from++];}while(
--op);
from=0;
if(wnext<len){
op=wnext;
len-=op;
do {
output[_out++]=s_window[from++];}while(
--op);
from=_out-dist;
from_source=output;}}}else 



{
from+=wnext-op;
if(op<len){
len-=op;
do {
output[_out++]=s_window[from++];}while(
--op);
from=_out-dist;
from_source=output;}}


while(len>2){
output[_out++]=from_source[from++];
output[_out++]=from_source[from++];
output[_out++]=from_source[from++];
len-=3;}

if(len){
output[_out++]=from_source[from++];
if(len>1){
output[_out++]=from_source[from++];}}}else 



{
from=_out-dist;
do {
output[_out++]=output[from++];
output[_out++]=output[from++];
output[_out++]=output[from++];
len-=3;}while(
len>2);
if(len){
output[_out++]=output[from++];
if(len>1){
output[_out++]=output[from++];}}}}else 




if((op&64)===0){
here=dcode[(here&0xffff)+(hold&(1<<op)-1)];
continue dodist;}else 

{
strm.msg='invalid distance code';
state.mode=BAD;
break top;}


break;}}else 


if((op&64)===0){
here=lcode[(here&0xffff)+(hold&(1<<op)-1)];
continue dolen;}else 

if(op&32){

state.mode=TYPE;
break top;}else 

{
strm.msg='invalid literal/length code';
state.mode=BAD;
break top;}


break;}}while(

_in<last&&_out<end);


len=bits>>3;
_in-=len;
bits-=len<<3;
hold&=(1<<bits)-1;


strm.next_in=_in;
strm.next_out=_out;
strm.avail_in=_in<last?5+(last-_in):5-(_in-last);
strm.avail_out=_out<end?257+(end-_out):257-(_out-end);
state.hold=hold;
state.bits=bits;
return;};
});
__d('pako/lib/zlib/inftrees.js',function(global, require, module, exports) {  'use strict';


var utils=require('pako/lib/utils/common.js');

var MAXBITS=15;
var ENOUGH_LENS=852;
var ENOUGH_DISTS=592;


var CODES=0;
var LENS=1;
var DISTS=2;

var lbase=[
3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,
35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];


var lext=[
16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,
19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];


var dbase=[
1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,
257,385,513,769,1025,1537,2049,3073,4097,6145,
8193,12289,16385,24577,0,0];


var dext=[
16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,
23,23,24,24,25,25,26,26,27,27,
28,28,29,29,64,64];


module.exports=function inflate_table(type,lens,lens_index,codes,table,table_index,work,opts)
{
var bits=opts.bits;


var len=0;
var sym=0;
var min=0,max=0;
var root=0;
var curr=0;
var drop=0;
var left=0;
var used=0;
var huff=0;
var incr;
var fill;
var low;
var mask;
var next;
var base=null;
var base_index=0;

var end;
var count=new utils.Buf16(MAXBITS+1);
var offs=new utils.Buf16(MAXBITS+1);
var extra=null;
var extra_index=0;

var here_bits,here_op,here_val;

































for(len=0;len<=MAXBITS;len++){
count[len]=0;}

for(sym=0;sym<codes;sym++){
count[lens[lens_index+sym]]++;}



root=bits;
for(max=MAXBITS;max>=1;max--){
if(count[max]!==0){break;}}

if(root>max){
root=max;}

if(max===0){



table[table_index++]=1<<24|64<<16|0;





table[table_index++]=1<<24|64<<16|0;

opts.bits=1;
return 0;}

for(min=1;min<max;min++){
if(count[min]!==0){break;}}

if(root<min){
root=min;}



left=1;
for(len=1;len<=MAXBITS;len++){
left<<=1;
left-=count[len];
if(left<0){
return -1;}}


if(left>0&&(type===CODES||max!==1)){
return -1;}



offs[1]=0;
for(len=1;len<MAXBITS;len++){
offs[len+1]=offs[len]+count[len];}



for(sym=0;sym<codes;sym++){
if(lens[lens_index+sym]!==0){
work[offs[lens[lens_index+sym]]++]=sym;}}





































if(type===CODES){
base=extra=work;
end=19;}else 

if(type===LENS){
base=lbase;
base_index-=257;
extra=lext;
extra_index-=257;
end=256;}else 

{
base=dbase;
extra=dext;
end=-1;}



huff=0;
sym=0;
len=min;
next=table_index;
curr=root;
drop=0;
low=-1;
used=1<<root;
mask=used-1;


if(type===LENS&&used>ENOUGH_LENS||
type===DISTS&&used>ENOUGH_DISTS){
return 1;}


var i=0;

for(;;){
i++;

here_bits=len-drop;
if(work[sym]<end){
here_op=0;
here_val=work[sym];}else 

if(work[sym]>end){
here_op=extra[extra_index+work[sym]];
here_val=base[base_index+work[sym]];}else 

{
here_op=32+64;
here_val=0;}



incr=1<<len-drop;
fill=1<<curr;
min=fill;
do {
fill-=incr;
table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;}while(
fill!==0);


incr=1<<len-1;
while(huff&incr){
incr>>=1;}

if(incr!==0){
huff&=incr-1;
huff+=incr;}else 
{
huff=0;}



sym++;
if(--count[len]===0){
if(len===max){break;}
len=lens[lens_index+work[sym]];}



if(len>root&&(huff&mask)!==low){

if(drop===0){
drop=root;}



next+=min;


curr=len-drop;
left=1<<curr;
while(curr+drop<max){
left-=count[curr+drop];
if(left<=0){break;}
curr++;
left<<=1;}



used+=1<<curr;
if(type===LENS&&used>ENOUGH_LENS||
type===DISTS&&used>ENOUGH_DISTS){
return 1;}



low=huff&mask;



table[low]=root<<24|curr<<16|next-table_index|0;}}






if(huff!==0){



table[next+huff]=len-drop<<24|64<<16|0;}




opts.bits=root;
return 0;};
});
__d('pako/lib/zlib/constants.js',function(global, require, module, exports) {  module.exports={


Z_NO_FLUSH:0,
Z_PARTIAL_FLUSH:1,
Z_SYNC_FLUSH:2,
Z_FULL_FLUSH:3,
Z_FINISH:4,
Z_BLOCK:5,
Z_TREES:6,




Z_OK:0,
Z_STREAM_END:1,
Z_NEED_DICT:2,
Z_ERRNO:-1,
Z_STREAM_ERROR:-2,
Z_DATA_ERROR:-3,

Z_BUF_ERROR:-5,



Z_NO_COMPRESSION:0,
Z_BEST_SPEED:1,
Z_BEST_COMPRESSION:9,
Z_DEFAULT_COMPRESSION:-1,


Z_FILTERED:1,
Z_HUFFMAN_ONLY:2,
Z_RLE:3,
Z_FIXED:4,
Z_DEFAULT_STRATEGY:0,


Z_BINARY:0,
Z_TEXT:1,

Z_UNKNOWN:2,


Z_DEFLATED:8};
});
__d('pako/lib/zlib/gzheader.js',function(global, require, module, exports) {  'use strict';


function GZheader(){

this.text=0;

this.time=0;

this.xflags=0;

this.os=0;

this.extra=null;

this.extra_len=0;










this.name='';



this.comment='';



this.hcrc=0;

this.done=false;}


module.exports=GZheader;
});
__d('forerunnerdb/js/lib/PersistCrypto.js',function(global, require, module, exports) {  "use strict";

var Shared=require('forerunnerdb/js/lib/Shared.js'),
CryptoJS=require('crypto-js/index.js');

var Plugin=function(){
this.init.apply(this,arguments);};


Plugin.prototype.init=function(options){

if(!options||!options.pass){
throw 'Cannot initialise persistent storage encryption without a passphrase provided in the passed options object as the "pass" field.';}


this._algo=options.algo||'AES';
this._pass=options.pass;};


Shared.mixin(Plugin.prototype,'Mixin.Common');





Shared.synthesize(Plugin.prototype,'pass');

Plugin.prototype.stringify=function(cipherParams){

var jsonObj={
ct:cipherParams.ciphertext.toString(CryptoJS.enc.Base64)};



if(cipherParams.iv){
jsonObj.iv=cipherParams.iv.toString();}

if(cipherParams.salt){
jsonObj.s=cipherParams.salt.toString();}



return this.jStringify(jsonObj);};


Plugin.prototype.parse=function(jsonStr){

var jsonObj=this.jParse(jsonStr);


var cipherParams=CryptoJS.lib.CipherParams.create({
ciphertext:CryptoJS.enc.Base64.parse(jsonObj.ct)});



if(jsonObj.iv){
cipherParams.iv=CryptoJS.enc.Hex.parse(jsonObj.iv);}

if(jsonObj.s){
cipherParams.salt=CryptoJS.enc.Hex.parse(jsonObj.s);}


return cipherParams;};


Plugin.prototype.encode=function(val,meta,finished){
var self=this,
wrapper={
type:'fdbCrypto'},

encryptedVal;


encryptedVal=CryptoJS[this._algo].encrypt(val,this._pass,{
format:{
stringify:function(){return self.stringify.apply(self,arguments);},
parse:function(){return self.parse.apply(self,arguments);}}});



wrapper.data=encryptedVal.toString();
wrapper.enabled=true;

meta.encryption={
enabled:wrapper.enabled};


if(finished){
finished(false,this.jStringify(wrapper),meta);}};



Plugin.prototype.decode=function(wrapper,meta,finished){
var self=this,
data;

if(wrapper){
wrapper=this.jParse(wrapper);

data=CryptoJS[this._algo].decrypt(wrapper.data,this._pass,{
format:{
stringify:function(){return self.stringify.apply(self,arguments);},
parse:function(){return self.parse.apply(self,arguments);}}}).

toString(CryptoJS.enc.Utf8);

if(finished){
finished(false,data,meta);}}else 

{
if(finished){
finished(false,wrapper,meta);}}};





Shared.plugins.FdbCrypto=Plugin;

module.exports=Plugin;
});
__d('crypto-js/index.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/x64-core.js"),require("crypto-js/lib-typedarrays.js"),require("crypto-js/enc-utf16.js"),require("crypto-js/enc-base64.js"),require("crypto-js/md5.js"),require("crypto-js/sha1.js"),require("crypto-js/sha256.js"),require("crypto-js/sha224.js"),require("crypto-js/sha512.js"),require("crypto-js/sha384.js"),require("crypto-js/sha3.js"),require("crypto-js/ripemd160.js"),require("crypto-js/hmac.js"),require("crypto-js/pbkdf2.js"),require("crypto-js/evpkdf.js"),require("crypto-js/cipher-core.js"),require("crypto-js/mode-cfb.js"),require("crypto-js/mode-ctr.js"),require("crypto-js/mode-ctr-gladman.js"),require("crypto-js/mode-ofb.js"),require("crypto-js/mode-ecb.js"),require("crypto-js/pad-ansix923.js"),require("crypto-js/pad-iso10126.js"),require("crypto-js/pad-iso97971.js"),require("crypto-js/pad-zeropadding.js"),require("crypto-js/pad-nopadding.js"),require("crypto-js/format-hex.js"),require("crypto-js/aes.js"),require("crypto-js/tripledes.js"),require("crypto-js/rc4.js"),require("crypto-js/rabbit.js"),require("crypto-js/rabbit-legacy.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./x64-core","./lib-typedarrays","./enc-utf16","./enc-base64","./md5","./sha1","./sha256","./sha224","./sha512","./sha384","./sha3","./ripemd160","./hmac","./pbkdf2","./evpkdf","./cipher-core","./mode-cfb","./mode-ctr","./mode-ctr-gladman","./mode-ofb","./mode-ecb","./pad-ansix923","./pad-iso10126","./pad-iso97971","./pad-zeropadding","./pad-nopadding","./format-hex","./aes","./tripledes","./rc4","./rabbit","./rabbit-legacy"],factory);}else 

{

root.CryptoJS=factory(root.CryptoJS);}})(

this,function(CryptoJS){

return CryptoJS;});
});
__d('crypto-js/core.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory();}else 

if(typeof define==="function"&&define.amd){

define([],factory);}else 

{

root.CryptoJS=factory();}})(

this,function(){




var CryptoJS=CryptoJS||function(Math,undefined){



var C={};




var C_lib=C.lib={};




var Base=C_lib.Base=function(){
function F(){}

return {


















extend:function(overrides){

F.prototype=this;
var subtype=new F();


if(overrides){
subtype.mixIn(overrides);}



if(!subtype.hasOwnProperty('init')){
subtype.init=function(){
subtype.$super.init.apply(this,arguments);};}




subtype.init.prototype=subtype;


subtype.$super=this;

return subtype;},














create:function(){
var instance=this.extend();
instance.init.apply(instance,arguments);

return instance;},














init:function(){},













mixIn:function(properties){
for(var propertyName in properties){
if(properties.hasOwnProperty(propertyName)){
this[propertyName]=properties[propertyName];}}




if(properties.hasOwnProperty('toString')){
this.toString=properties.toString;}},












clone:function(){
return this.init.prototype.extend(this);}};}();










var WordArray=C_lib.WordArray=Base.extend({












init:function(words,sigBytes){
words=this.words=words||[];

if(sigBytes!=undefined){
this.sigBytes=sigBytes;}else 
{
this.sigBytes=words.length*4;}},
















toString:function(encoder){
return (encoder||Hex).stringify(this);},













concat:function(wordArray){

var thisWords=this.words;
var thatWords=wordArray.words;
var thisSigBytes=this.sigBytes;
var thatSigBytes=wordArray.sigBytes;


this.clamp();


if(thisSigBytes%4){

for(var i=0;i<thatSigBytes;i++){
var thatByte=thatWords[i>>>2]>>>24-i%4*8&0xff;
thisWords[thisSigBytes+i>>>2]|=thatByte<<24-(thisSigBytes+i)%4*8;}}else 

{

for(var i=0;i<thatSigBytes;i+=4){
thisWords[thisSigBytes+i>>>2]=thatWords[i>>>2];}}


this.sigBytes+=thatSigBytes;


return this;},









clamp:function(){

var words=this.words;
var sigBytes=this.sigBytes;


words[sigBytes>>>2]&=0xffffffff<<32-sigBytes%4*8;
words.length=Math.ceil(sigBytes/4);},











clone:function(){
var clone=Base.clone.call(this);
clone.words=this.words.slice(0);

return clone;},















random:function(nBytes){
var words=[];

var r=function(m_w){
var m_w=m_w;
var m_z=0x3ade68b1;
var mask=0xffffffff;

return function(){
m_z=0x9069*(m_z&0xFFFF)+(m_z>>0x10)&mask;
m_w=0x4650*(m_w&0xFFFF)+(m_w>>0x10)&mask;
var result=(m_z<<0x10)+m_w&mask;
result/=0x100000000;
result+=0.5;
return result*(Math.random()>.5?1:-1);};};



for(var i=0,rcache;i<nBytes;i+=4){
var _r=r((rcache||Math.random())*0x100000000);

rcache=_r()*0x3ade67b7;
words.push(_r()*0x100000000|0);}


return new WordArray.init(words,nBytes);}});






var C_enc=C.enc={};




var Hex=C_enc.Hex={













stringify:function(wordArray){

var words=wordArray.words;
var sigBytes=wordArray.sigBytes;


var hexChars=[];
for(var i=0;i<sigBytes;i++){
var bite=words[i>>>2]>>>24-i%4*8&0xff;
hexChars.push((bite>>>4).toString(16));
hexChars.push((bite&0x0f).toString(16));}


return hexChars.join('');},















parse:function(hexStr){

var hexStrLength=hexStr.length;


var words=[];
for(var i=0;i<hexStrLength;i+=2){
words[i>>>3]|=parseInt(hexStr.substr(i,2),16)<<24-i%8*4;}


return new WordArray.init(words,hexStrLength/2);}};






var Latin1=C_enc.Latin1={













stringify:function(wordArray){

var words=wordArray.words;
var sigBytes=wordArray.sigBytes;


var latin1Chars=[];
for(var i=0;i<sigBytes;i++){
var bite=words[i>>>2]>>>24-i%4*8&0xff;
latin1Chars.push(String.fromCharCode(bite));}


return latin1Chars.join('');},















parse:function(latin1Str){

var latin1StrLength=latin1Str.length;


var words=[];
for(var i=0;i<latin1StrLength;i++){
words[i>>>2]|=(latin1Str.charCodeAt(i)&0xff)<<24-i%4*8;}


return new WordArray.init(words,latin1StrLength);}};






var Utf8=C_enc.Utf8={













stringify:function(wordArray){
try{
return decodeURIComponent(escape(Latin1.stringify(wordArray)));}
catch(e){
throw new Error('Malformed UTF-8 data');}},
















parse:function(utf8Str){
return Latin1.parse(unescape(encodeURIComponent(utf8Str)));}};










var BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm=Base.extend({







reset:function(){

this._data=new WordArray.init();
this._nDataBytes=0;},












_append:function(data){

if(typeof data=='string'){
data=Utf8.parse(data);}



this._data.concat(data);
this._nDataBytes+=data.sigBytes;},
















_process:function(doFlush){

var data=this._data;
var dataWords=data.words;
var dataSigBytes=data.sigBytes;
var blockSize=this.blockSize;
var blockSizeBytes=blockSize*4;


var nBlocksReady=dataSigBytes/blockSizeBytes;
if(doFlush){

nBlocksReady=Math.ceil(nBlocksReady);}else 
{


nBlocksReady=Math.max((nBlocksReady|0)-this._minBufferSize,0);}



var nWordsReady=nBlocksReady*blockSize;


var nBytesReady=Math.min(nWordsReady*4,dataSigBytes);


if(nWordsReady){
for(var offset=0;offset<nWordsReady;offset+=blockSize){

this._doProcessBlock(dataWords,offset);}



var processedWords=dataWords.splice(0,nWordsReady);
data.sigBytes-=nBytesReady;}



return new WordArray.init(processedWords,nBytesReady);},











clone:function(){
var clone=Base.clone.call(this);
clone._data=this._data.clone();

return clone;},


_minBufferSize:0});







var Hasher=C_lib.Hasher=BufferedBlockAlgorithm.extend({



cfg:Base.extend(),










init:function(cfg){

this.cfg=this.cfg.extend(cfg);


this.reset();},









reset:function(){

BufferedBlockAlgorithm.reset.call(this);


this._doReset();},














update:function(messageUpdate){

this._append(messageUpdate);


this._process();


return this;},
















finalize:function(messageUpdate){

if(messageUpdate){
this._append(messageUpdate);}



var hash=this._doFinalize();

return hash;},


blockSize:512/32,














_createHelper:function(hasher){
return function(message,cfg){
return new hasher.init(cfg).finalize(message);};},
















_createHmacHelper:function(hasher){
return function(message,key){
return new C_algo.HMAC.init(hasher,key).finalize(message);};}});







var C_algo=C.algo={};

return C;}(
Math);


return CryptoJS;});
});
__d('crypto-js/x64-core.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(undefined){

var C=CryptoJS;
var C_lib=C.lib;
var Base=C_lib.Base;
var X32WordArray=C_lib.WordArray;




var C_x64=C.x64={};




var X64Word=C_x64.Word=Base.extend({










init:function(high,low){
this.high=high;
this.low=low;}});














































































































































































var X64WordArray=C_x64.WordArray=Base.extend({




















init:function(words,sigBytes){
words=this.words=words||[];

if(sigBytes!=undefined){
this.sigBytes=sigBytes;}else 
{
this.sigBytes=words.length*8;}},












toX32:function(){

var x64Words=this.words;
var x64WordsLength=x64Words.length;


var x32Words=[];
for(var i=0;i<x64WordsLength;i++){
var x64Word=x64Words[i];
x32Words.push(x64Word.high);
x32Words.push(x64Word.low);}


return X32WordArray.create(x32Words,this.sigBytes);},











clone:function(){
var clone=Base.clone.call(this);


var words=clone.words=this.words.slice(0);


var wordsLength=words.length;
for(var i=0;i<wordsLength;i++){
words[i]=words[i].clone();}


return clone;}});})();





return CryptoJS;});
});
__d('crypto-js/lib-typedarrays.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

if(typeof ArrayBuffer!='function'){
return;}



var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;


var superInit=WordArray.init;


var subInit=WordArray.init=function(typedArray){

if(typedArray instanceof ArrayBuffer){
typedArray=new Uint8Array(typedArray);}



if(
typedArray instanceof Int8Array||
typeof Uint8ClampedArray!=="undefined"&&typedArray instanceof Uint8ClampedArray||
typedArray instanceof Int16Array||
typedArray instanceof Uint16Array||
typedArray instanceof Int32Array||
typedArray instanceof Uint32Array||
typedArray instanceof Float32Array||
typedArray instanceof Float64Array)
{
typedArray=new Uint8Array(typedArray.buffer,typedArray.byteOffset,typedArray.byteLength);}



if(typedArray instanceof Uint8Array){

var typedArrayByteLength=typedArray.byteLength;


var words=[];
for(var i=0;i<typedArrayByteLength;i++){
words[i>>>2]|=typedArray[i]<<24-i%4*8;}



superInit.call(this,words,typedArrayByteLength);}else 
{

superInit.apply(this,arguments);}};



subInit.prototype=WordArray;})();



return CryptoJS.lib.WordArray;});
});
__d('crypto-js/enc-utf16.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var C_enc=C.enc;




var Utf16BE=C_enc.Utf16=C_enc.Utf16BE={













stringify:function(wordArray){

var words=wordArray.words;
var sigBytes=wordArray.sigBytes;


var utf16Chars=[];
for(var i=0;i<sigBytes;i+=2){
var codePoint=words[i>>>2]>>>16-i%4*8&0xffff;
utf16Chars.push(String.fromCharCode(codePoint));}


return utf16Chars.join('');},















parse:function(utf16Str){

var utf16StrLength=utf16Str.length;


var words=[];
for(var i=0;i<utf16StrLength;i++){
words[i>>>1]|=utf16Str.charCodeAt(i)<<16-i%2*16;}


return WordArray.create(words,utf16StrLength*2);}};






C_enc.Utf16LE={













stringify:function(wordArray){

var words=wordArray.words;
var sigBytes=wordArray.sigBytes;


var utf16Chars=[];
for(var i=0;i<sigBytes;i+=2){
var codePoint=swapEndian(words[i>>>2]>>>16-i%4*8&0xffff);
utf16Chars.push(String.fromCharCode(codePoint));}


return utf16Chars.join('');},















parse:function(utf16Str){

var utf16StrLength=utf16Str.length;


var words=[];
for(var i=0;i<utf16StrLength;i++){
words[i>>>1]|=swapEndian(utf16Str.charCodeAt(i)<<16-i%2*16);}


return WordArray.create(words,utf16StrLength*2);}};



function swapEndian(word){
return word<<8&0xff00ff00|word>>>8&0x00ff00ff;}})();




return CryptoJS.enc.Utf16;});
});
__d('crypto-js/enc-base64.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var C_enc=C.enc;




var Base64=C_enc.Base64={













stringify:function(wordArray){

var words=wordArray.words;
var sigBytes=wordArray.sigBytes;
var map=this._map;


wordArray.clamp();


var base64Chars=[];
for(var i=0;i<sigBytes;i+=3){
var byte1=words[i>>>2]>>>24-i%4*8&0xff;
var byte2=words[i+1>>>2]>>>24-(i+1)%4*8&0xff;
var byte3=words[i+2>>>2]>>>24-(i+2)%4*8&0xff;

var triplet=byte1<<16|byte2<<8|byte3;

for(var j=0;j<4&&i+j*0.75<sigBytes;j++){
base64Chars.push(map.charAt(triplet>>>6*(3-j)&0x3f));}}




var paddingChar=map.charAt(64);
if(paddingChar){
while(base64Chars.length%4){
base64Chars.push(paddingChar);}}



return base64Chars.join('');},















parse:function(base64Str){

var base64StrLength=base64Str.length;
var map=this._map;


var paddingChar=map.charAt(64);
if(paddingChar){
var paddingIndex=base64Str.indexOf(paddingChar);
if(paddingIndex!=-1){
base64StrLength=paddingIndex;}}




var words=[];
var nBytes=0;
for(var i=0;i<base64StrLength;i++){
if(i%4){
var bits1=map.indexOf(base64Str.charAt(i-1))<<i%4*2;
var bits2=map.indexOf(base64Str.charAt(i))>>>6-i%4*2;
var bitsCombined=bits1|bits2;
words[nBytes>>>2]|=bitsCombined<<24-nBytes%4*8;
nBytes++;}}



return WordArray.create(words,nBytes);},


_map:'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='};})();




return CryptoJS.enc.Base64;});
});
__d('crypto-js/md5.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(Math){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var Hasher=C_lib.Hasher;
var C_algo=C.algo;


var T=[];


(function(){
for(var i=0;i<64;i++){
T[i]=Math.abs(Math.sin(i+1))*0x100000000|0;}})();






var MD5=C_algo.MD5=Hasher.extend({
_doReset:function(){
this._hash=new WordArray.init([
0x67452301,0xefcdab89,
0x98badcfe,0x10325476]);},



_doProcessBlock:function(M,offset){

for(var i=0;i<16;i++){

var offset_i=offset+i;
var M_offset_i=M[offset_i];

M[offset_i]=
(M_offset_i<<8|M_offset_i>>>24)&0x00ff00ff|
(M_offset_i<<24|M_offset_i>>>8)&0xff00ff00;}




var H=this._hash.words;

var M_offset_0=M[offset+0];
var M_offset_1=M[offset+1];
var M_offset_2=M[offset+2];
var M_offset_3=M[offset+3];
var M_offset_4=M[offset+4];
var M_offset_5=M[offset+5];
var M_offset_6=M[offset+6];
var M_offset_7=M[offset+7];
var M_offset_8=M[offset+8];
var M_offset_9=M[offset+9];
var M_offset_10=M[offset+10];
var M_offset_11=M[offset+11];
var M_offset_12=M[offset+12];
var M_offset_13=M[offset+13];
var M_offset_14=M[offset+14];
var M_offset_15=M[offset+15];


var a=H[0];
var b=H[1];
var c=H[2];
var d=H[3];


a=FF(a,b,c,d,M_offset_0,7,T[0]);
d=FF(d,a,b,c,M_offset_1,12,T[1]);
c=FF(c,d,a,b,M_offset_2,17,T[2]);
b=FF(b,c,d,a,M_offset_3,22,T[3]);
a=FF(a,b,c,d,M_offset_4,7,T[4]);
d=FF(d,a,b,c,M_offset_5,12,T[5]);
c=FF(c,d,a,b,M_offset_6,17,T[6]);
b=FF(b,c,d,a,M_offset_7,22,T[7]);
a=FF(a,b,c,d,M_offset_8,7,T[8]);
d=FF(d,a,b,c,M_offset_9,12,T[9]);
c=FF(c,d,a,b,M_offset_10,17,T[10]);
b=FF(b,c,d,a,M_offset_11,22,T[11]);
a=FF(a,b,c,d,M_offset_12,7,T[12]);
d=FF(d,a,b,c,M_offset_13,12,T[13]);
c=FF(c,d,a,b,M_offset_14,17,T[14]);
b=FF(b,c,d,a,M_offset_15,22,T[15]);

a=GG(a,b,c,d,M_offset_1,5,T[16]);
d=GG(d,a,b,c,M_offset_6,9,T[17]);
c=GG(c,d,a,b,M_offset_11,14,T[18]);
b=GG(b,c,d,a,M_offset_0,20,T[19]);
a=GG(a,b,c,d,M_offset_5,5,T[20]);
d=GG(d,a,b,c,M_offset_10,9,T[21]);
c=GG(c,d,a,b,M_offset_15,14,T[22]);
b=GG(b,c,d,a,M_offset_4,20,T[23]);
a=GG(a,b,c,d,M_offset_9,5,T[24]);
d=GG(d,a,b,c,M_offset_14,9,T[25]);
c=GG(c,d,a,b,M_offset_3,14,T[26]);
b=GG(b,c,d,a,M_offset_8,20,T[27]);
a=GG(a,b,c,d,M_offset_13,5,T[28]);
d=GG(d,a,b,c,M_offset_2,9,T[29]);
c=GG(c,d,a,b,M_offset_7,14,T[30]);
b=GG(b,c,d,a,M_offset_12,20,T[31]);

a=HH(a,b,c,d,M_offset_5,4,T[32]);
d=HH(d,a,b,c,M_offset_8,11,T[33]);
c=HH(c,d,a,b,M_offset_11,16,T[34]);
b=HH(b,c,d,a,M_offset_14,23,T[35]);
a=HH(a,b,c,d,M_offset_1,4,T[36]);
d=HH(d,a,b,c,M_offset_4,11,T[37]);
c=HH(c,d,a,b,M_offset_7,16,T[38]);
b=HH(b,c,d,a,M_offset_10,23,T[39]);
a=HH(a,b,c,d,M_offset_13,4,T[40]);
d=HH(d,a,b,c,M_offset_0,11,T[41]);
c=HH(c,d,a,b,M_offset_3,16,T[42]);
b=HH(b,c,d,a,M_offset_6,23,T[43]);
a=HH(a,b,c,d,M_offset_9,4,T[44]);
d=HH(d,a,b,c,M_offset_12,11,T[45]);
c=HH(c,d,a,b,M_offset_15,16,T[46]);
b=HH(b,c,d,a,M_offset_2,23,T[47]);

a=II(a,b,c,d,M_offset_0,6,T[48]);
d=II(d,a,b,c,M_offset_7,10,T[49]);
c=II(c,d,a,b,M_offset_14,15,T[50]);
b=II(b,c,d,a,M_offset_5,21,T[51]);
a=II(a,b,c,d,M_offset_12,6,T[52]);
d=II(d,a,b,c,M_offset_3,10,T[53]);
c=II(c,d,a,b,M_offset_10,15,T[54]);
b=II(b,c,d,a,M_offset_1,21,T[55]);
a=II(a,b,c,d,M_offset_8,6,T[56]);
d=II(d,a,b,c,M_offset_15,10,T[57]);
c=II(c,d,a,b,M_offset_6,15,T[58]);
b=II(b,c,d,a,M_offset_13,21,T[59]);
a=II(a,b,c,d,M_offset_4,6,T[60]);
d=II(d,a,b,c,M_offset_11,10,T[61]);
c=II(c,d,a,b,M_offset_2,15,T[62]);
b=II(b,c,d,a,M_offset_9,21,T[63]);


H[0]=H[0]+a|0;
H[1]=H[1]+b|0;
H[2]=H[2]+c|0;
H[3]=H[3]+d|0;},


_doFinalize:function(){

var data=this._data;
var dataWords=data.words;

var nBitsTotal=this._nDataBytes*8;
var nBitsLeft=data.sigBytes*8;


dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;

var nBitsTotalH=Math.floor(nBitsTotal/0x100000000);
var nBitsTotalL=nBitsTotal;
dataWords[(nBitsLeft+64>>>9<<4)+15]=
(nBitsTotalH<<8|nBitsTotalH>>>24)&0x00ff00ff|
(nBitsTotalH<<24|nBitsTotalH>>>8)&0xff00ff00;

dataWords[(nBitsLeft+64>>>9<<4)+14]=
(nBitsTotalL<<8|nBitsTotalL>>>24)&0x00ff00ff|
(nBitsTotalL<<24|nBitsTotalL>>>8)&0xff00ff00;


data.sigBytes=(dataWords.length+1)*4;


this._process();


var hash=this._hash;
var H=hash.words;


for(var i=0;i<4;i++){

var H_i=H[i];

H[i]=(H_i<<8|H_i>>>24)&0x00ff00ff|
(H_i<<24|H_i>>>8)&0xff00ff00;}



return hash;},


clone:function(){
var clone=Hasher.clone.call(this);
clone._hash=this._hash.clone();

return clone;}});



function FF(a,b,c,d,x,s,t){
var n=a+(b&c|~b&d)+x+t;
return (n<<s|n>>>32-s)+b;}


function GG(a,b,c,d,x,s,t){
var n=a+(b&d|c&~d)+x+t;
return (n<<s|n>>>32-s)+b;}


function HH(a,b,c,d,x,s,t){
var n=a+(b^c^d)+x+t;
return (n<<s|n>>>32-s)+b;}


function II(a,b,c,d,x,s,t){
var n=a+(c^(b|~d))+x+t;
return (n<<s|n>>>32-s)+b;}
















C.MD5=Hasher._createHelper(MD5);















C.HmacMD5=Hasher._createHmacHelper(MD5);})(
Math);


return CryptoJS.MD5;});
});
__d('crypto-js/sha1.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var Hasher=C_lib.Hasher;
var C_algo=C.algo;


var W=[];




var SHA1=C_algo.SHA1=Hasher.extend({
_doReset:function(){
this._hash=new WordArray.init([
0x67452301,0xefcdab89,
0x98badcfe,0x10325476,
0xc3d2e1f0]);},



_doProcessBlock:function(M,offset){

var H=this._hash.words;


var a=H[0];
var b=H[1];
var c=H[2];
var d=H[3];
var e=H[4];


for(var i=0;i<80;i++){
if(i<16){
W[i]=M[offset+i]|0;}else 
{
var n=W[i-3]^W[i-8]^W[i-14]^W[i-16];
W[i]=n<<1|n>>>31;}


var t=(a<<5|a>>>27)+e+W[i];
if(i<20){
t+=(b&c|~b&d)+0x5a827999;}else 
if(i<40){
t+=(b^c^d)+0x6ed9eba1;}else 
if(i<60){
t+=(b&c|b&d|c&d)-0x70e44324;}else 
{
t+=(b^c^d)-0x359d3e2a;}


e=d;
d=c;
c=b<<30|b>>>2;
b=a;
a=t;}



H[0]=H[0]+a|0;
H[1]=H[1]+b|0;
H[2]=H[2]+c|0;
H[3]=H[3]+d|0;
H[4]=H[4]+e|0;},


_doFinalize:function(){

var data=this._data;
var dataWords=data.words;

var nBitsTotal=this._nDataBytes*8;
var nBitsLeft=data.sigBytes*8;


dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;
dataWords[(nBitsLeft+64>>>9<<4)+14]=Math.floor(nBitsTotal/0x100000000);
dataWords[(nBitsLeft+64>>>9<<4)+15]=nBitsTotal;
data.sigBytes=dataWords.length*4;


this._process();


return this._hash;},


clone:function(){
var clone=Hasher.clone.call(this);
clone._hash=this._hash.clone();

return clone;}});

















C.SHA1=Hasher._createHelper(SHA1);















C.HmacSHA1=Hasher._createHmacHelper(SHA1);})();



return CryptoJS.SHA1;});
});
__d('crypto-js/sha256.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(Math){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var Hasher=C_lib.Hasher;
var C_algo=C.algo;


var H=[];
var K=[];


(function(){
function isPrime(n){
var sqrtN=Math.sqrt(n);
for(var factor=2;factor<=sqrtN;factor++){
if(!(n%factor)){
return false;}}



return true;}


function getFractionalBits(n){
return (n-(n|0))*0x100000000|0;}


var n=2;
var nPrime=0;
while(nPrime<64){
if(isPrime(n)){
if(nPrime<8){
H[nPrime]=getFractionalBits(Math.pow(n,1/2));}

K[nPrime]=getFractionalBits(Math.pow(n,1/3));

nPrime++;}


n++;}})();




var W=[];




var SHA256=C_algo.SHA256=Hasher.extend({
_doReset:function(){
this._hash=new WordArray.init(H.slice(0));},


_doProcessBlock:function(M,offset){

var H=this._hash.words;


var a=H[0];
var b=H[1];
var c=H[2];
var d=H[3];
var e=H[4];
var f=H[5];
var g=H[6];
var h=H[7];


for(var i=0;i<64;i++){
if(i<16){
W[i]=M[offset+i]|0;}else 
{
var gamma0x=W[i-15];
var gamma0=(gamma0x<<25|gamma0x>>>7)^(
gamma0x<<14|gamma0x>>>18)^
gamma0x>>>3;

var gamma1x=W[i-2];
var gamma1=(gamma1x<<15|gamma1x>>>17)^(
gamma1x<<13|gamma1x>>>19)^
gamma1x>>>10;

W[i]=gamma0+W[i-7]+gamma1+W[i-16];}


var ch=e&f^~e&g;
var maj=a&b^a&c^b&c;

var sigma0=(a<<30|a>>>2)^(a<<19|a>>>13)^(a<<10|a>>>22);
var sigma1=(e<<26|e>>>6)^(e<<21|e>>>11)^(e<<7|e>>>25);

var t1=h+sigma1+ch+K[i]+W[i];
var t2=sigma0+maj;

h=g;
g=f;
f=e;
e=d+t1|0;
d=c;
c=b;
b=a;
a=t1+t2|0;}



H[0]=H[0]+a|0;
H[1]=H[1]+b|0;
H[2]=H[2]+c|0;
H[3]=H[3]+d|0;
H[4]=H[4]+e|0;
H[5]=H[5]+f|0;
H[6]=H[6]+g|0;
H[7]=H[7]+h|0;},


_doFinalize:function(){

var data=this._data;
var dataWords=data.words;

var nBitsTotal=this._nDataBytes*8;
var nBitsLeft=data.sigBytes*8;


dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;
dataWords[(nBitsLeft+64>>>9<<4)+14]=Math.floor(nBitsTotal/0x100000000);
dataWords[(nBitsLeft+64>>>9<<4)+15]=nBitsTotal;
data.sigBytes=dataWords.length*4;


this._process();


return this._hash;},


clone:function(){
var clone=Hasher.clone.call(this);
clone._hash=this._hash.clone();

return clone;}});

















C.SHA256=Hasher._createHelper(SHA256);















C.HmacSHA256=Hasher._createHmacHelper(SHA256);})(
Math);


return CryptoJS.SHA256;});
});
__d('crypto-js/sha224.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/sha256.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./sha256"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var C_algo=C.algo;
var SHA256=C_algo.SHA256;




var SHA224=C_algo.SHA224=SHA256.extend({
_doReset:function(){
this._hash=new WordArray.init([
0xc1059ed8,0x367cd507,0x3070dd17,0xf70e5939,
0xffc00b31,0x68581511,0x64f98fa7,0xbefa4fa4]);},



_doFinalize:function(){
var hash=SHA256._doFinalize.call(this);

hash.sigBytes-=4;

return hash;}});

















C.SHA224=SHA256._createHelper(SHA224);















C.HmacSHA224=SHA256._createHmacHelper(SHA224);})();



return CryptoJS.SHA224;});
});
__d('crypto-js/sha512.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/x64-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./x64-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var Hasher=C_lib.Hasher;
var C_x64=C.x64;
var X64Word=C_x64.Word;
var X64WordArray=C_x64.WordArray;
var C_algo=C.algo;

function X64Word_create(){
return X64Word.create.apply(X64Word,arguments);}



var K=[
X64Word_create(0x428a2f98,0xd728ae22),X64Word_create(0x71374491,0x23ef65cd),
X64Word_create(0xb5c0fbcf,0xec4d3b2f),X64Word_create(0xe9b5dba5,0x8189dbbc),
X64Word_create(0x3956c25b,0xf348b538),X64Word_create(0x59f111f1,0xb605d019),
X64Word_create(0x923f82a4,0xaf194f9b),X64Word_create(0xab1c5ed5,0xda6d8118),
X64Word_create(0xd807aa98,0xa3030242),X64Word_create(0x12835b01,0x45706fbe),
X64Word_create(0x243185be,0x4ee4b28c),X64Word_create(0x550c7dc3,0xd5ffb4e2),
X64Word_create(0x72be5d74,0xf27b896f),X64Word_create(0x80deb1fe,0x3b1696b1),
X64Word_create(0x9bdc06a7,0x25c71235),X64Word_create(0xc19bf174,0xcf692694),
X64Word_create(0xe49b69c1,0x9ef14ad2),X64Word_create(0xefbe4786,0x384f25e3),
X64Word_create(0x0fc19dc6,0x8b8cd5b5),X64Word_create(0x240ca1cc,0x77ac9c65),
X64Word_create(0x2de92c6f,0x592b0275),X64Word_create(0x4a7484aa,0x6ea6e483),
X64Word_create(0x5cb0a9dc,0xbd41fbd4),X64Word_create(0x76f988da,0x831153b5),
X64Word_create(0x983e5152,0xee66dfab),X64Word_create(0xa831c66d,0x2db43210),
X64Word_create(0xb00327c8,0x98fb213f),X64Word_create(0xbf597fc7,0xbeef0ee4),
X64Word_create(0xc6e00bf3,0x3da88fc2),X64Word_create(0xd5a79147,0x930aa725),
X64Word_create(0x06ca6351,0xe003826f),X64Word_create(0x14292967,0x0a0e6e70),
X64Word_create(0x27b70a85,0x46d22ffc),X64Word_create(0x2e1b2138,0x5c26c926),
X64Word_create(0x4d2c6dfc,0x5ac42aed),X64Word_create(0x53380d13,0x9d95b3df),
X64Word_create(0x650a7354,0x8baf63de),X64Word_create(0x766a0abb,0x3c77b2a8),
X64Word_create(0x81c2c92e,0x47edaee6),X64Word_create(0x92722c85,0x1482353b),
X64Word_create(0xa2bfe8a1,0x4cf10364),X64Word_create(0xa81a664b,0xbc423001),
X64Word_create(0xc24b8b70,0xd0f89791),X64Word_create(0xc76c51a3,0x0654be30),
X64Word_create(0xd192e819,0xd6ef5218),X64Word_create(0xd6990624,0x5565a910),
X64Word_create(0xf40e3585,0x5771202a),X64Word_create(0x106aa070,0x32bbd1b8),
X64Word_create(0x19a4c116,0xb8d2d0c8),X64Word_create(0x1e376c08,0x5141ab53),
X64Word_create(0x2748774c,0xdf8eeb99),X64Word_create(0x34b0bcb5,0xe19b48a8),
X64Word_create(0x391c0cb3,0xc5c95a63),X64Word_create(0x4ed8aa4a,0xe3418acb),
X64Word_create(0x5b9cca4f,0x7763e373),X64Word_create(0x682e6ff3,0xd6b2b8a3),
X64Word_create(0x748f82ee,0x5defb2fc),X64Word_create(0x78a5636f,0x43172f60),
X64Word_create(0x84c87814,0xa1f0ab72),X64Word_create(0x8cc70208,0x1a6439ec),
X64Word_create(0x90befffa,0x23631e28),X64Word_create(0xa4506ceb,0xde82bde9),
X64Word_create(0xbef9a3f7,0xb2c67915),X64Word_create(0xc67178f2,0xe372532b),
X64Word_create(0xca273ece,0xea26619c),X64Word_create(0xd186b8c7,0x21c0c207),
X64Word_create(0xeada7dd6,0xcde0eb1e),X64Word_create(0xf57d4f7f,0xee6ed178),
X64Word_create(0x06f067aa,0x72176fba),X64Word_create(0x0a637dc5,0xa2c898a6),
X64Word_create(0x113f9804,0xbef90dae),X64Word_create(0x1b710b35,0x131c471b),
X64Word_create(0x28db77f5,0x23047d84),X64Word_create(0x32caab7b,0x40c72493),
X64Word_create(0x3c9ebe0a,0x15c9bebc),X64Word_create(0x431d67c4,0x9c100d4c),
X64Word_create(0x4cc5d4be,0xcb3e42b6),X64Word_create(0x597f299c,0xfc657e2a),
X64Word_create(0x5fcb6fab,0x3ad6faec),X64Word_create(0x6c44198c,0x4a475817)];



var W=[];
(function(){
for(var i=0;i<80;i++){
W[i]=X64Word_create();}})();






var SHA512=C_algo.SHA512=Hasher.extend({
_doReset:function(){
this._hash=new X64WordArray.init([
new X64Word.init(0x6a09e667,0xf3bcc908),new X64Word.init(0xbb67ae85,0x84caa73b),
new X64Word.init(0x3c6ef372,0xfe94f82b),new X64Word.init(0xa54ff53a,0x5f1d36f1),
new X64Word.init(0x510e527f,0xade682d1),new X64Word.init(0x9b05688c,0x2b3e6c1f),
new X64Word.init(0x1f83d9ab,0xfb41bd6b),new X64Word.init(0x5be0cd19,0x137e2179)]);},



_doProcessBlock:function(M,offset){

var H=this._hash.words;

var H0=H[0];
var H1=H[1];
var H2=H[2];
var H3=H[3];
var H4=H[4];
var H5=H[5];
var H6=H[6];
var H7=H[7];

var H0h=H0.high;
var H0l=H0.low;
var H1h=H1.high;
var H1l=H1.low;
var H2h=H2.high;
var H2l=H2.low;
var H3h=H3.high;
var H3l=H3.low;
var H4h=H4.high;
var H4l=H4.low;
var H5h=H5.high;
var H5l=H5.low;
var H6h=H6.high;
var H6l=H6.low;
var H7h=H7.high;
var H7l=H7.low;


var ah=H0h;
var al=H0l;
var bh=H1h;
var bl=H1l;
var ch=H2h;
var cl=H2l;
var dh=H3h;
var dl=H3l;
var eh=H4h;
var el=H4l;
var fh=H5h;
var fl=H5l;
var gh=H6h;
var gl=H6l;
var hh=H7h;
var hl=H7l;


for(var i=0;i<80;i++){

var Wi=W[i];


if(i<16){
var Wih=Wi.high=M[offset+i*2]|0;
var Wil=Wi.low=M[offset+i*2+1]|0;}else 
{

var gamma0x=W[i-15];
var gamma0xh=gamma0x.high;
var gamma0xl=gamma0x.low;
var gamma0h=(gamma0xh>>>1|gamma0xl<<31)^(gamma0xh>>>8|gamma0xl<<24)^gamma0xh>>>7;
var gamma0l=(gamma0xl>>>1|gamma0xh<<31)^(gamma0xl>>>8|gamma0xh<<24)^(gamma0xl>>>7|gamma0xh<<25);


var gamma1x=W[i-2];
var gamma1xh=gamma1x.high;
var gamma1xl=gamma1x.low;
var gamma1h=(gamma1xh>>>19|gamma1xl<<13)^(gamma1xh<<3|gamma1xl>>>29)^gamma1xh>>>6;
var gamma1l=(gamma1xl>>>19|gamma1xh<<13)^(gamma1xl<<3|gamma1xh>>>29)^(gamma1xl>>>6|gamma1xh<<26);


var Wi7=W[i-7];
var Wi7h=Wi7.high;
var Wi7l=Wi7.low;

var Wi16=W[i-16];
var Wi16h=Wi16.high;
var Wi16l=Wi16.low;

var Wil=gamma0l+Wi7l;
var Wih=gamma0h+Wi7h+(Wil>>>0<gamma0l>>>0?1:0);
var Wil=Wil+gamma1l;
var Wih=Wih+gamma1h+(Wil>>>0<gamma1l>>>0?1:0);
var Wil=Wil+Wi16l;
var Wih=Wih+Wi16h+(Wil>>>0<Wi16l>>>0?1:0);

Wi.high=Wih;
Wi.low=Wil;}


var chh=eh&fh^~eh&gh;
var chl=el&fl^~el&gl;
var majh=ah&bh^ah&ch^bh&ch;
var majl=al&bl^al&cl^bl&cl;

var sigma0h=(ah>>>28|al<<4)^(ah<<30|al>>>2)^(ah<<25|al>>>7);
var sigma0l=(al>>>28|ah<<4)^(al<<30|ah>>>2)^(al<<25|ah>>>7);
var sigma1h=(eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9);
var sigma1l=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9);


var Ki=K[i];
var Kih=Ki.high;
var Kil=Ki.low;

var t1l=hl+sigma1l;
var t1h=hh+sigma1h+(t1l>>>0<hl>>>0?1:0);
var t1l=t1l+chl;
var t1h=t1h+chh+(t1l>>>0<chl>>>0?1:0);
var t1l=t1l+Kil;
var t1h=t1h+Kih+(t1l>>>0<Kil>>>0?1:0);
var t1l=t1l+Wil;
var t1h=t1h+Wih+(t1l>>>0<Wil>>>0?1:0);


var t2l=sigma0l+majl;
var t2h=sigma0h+majh+(t2l>>>0<sigma0l>>>0?1:0);


hh=gh;
hl=gl;
gh=fh;
gl=fl;
fh=eh;
fl=el;
el=dl+t1l|0;
eh=dh+t1h+(el>>>0<dl>>>0?1:0)|0;
dh=ch;
dl=cl;
ch=bh;
cl=bl;
bh=ah;
bl=al;
al=t1l+t2l|0;
ah=t1h+t2h+(al>>>0<t1l>>>0?1:0)|0;}



H0l=H0.low=H0l+al;
H0.high=H0h+ah+(H0l>>>0<al>>>0?1:0);
H1l=H1.low=H1l+bl;
H1.high=H1h+bh+(H1l>>>0<bl>>>0?1:0);
H2l=H2.low=H2l+cl;
H2.high=H2h+ch+(H2l>>>0<cl>>>0?1:0);
H3l=H3.low=H3l+dl;
H3.high=H3h+dh+(H3l>>>0<dl>>>0?1:0);
H4l=H4.low=H4l+el;
H4.high=H4h+eh+(H4l>>>0<el>>>0?1:0);
H5l=H5.low=H5l+fl;
H5.high=H5h+fh+(H5l>>>0<fl>>>0?1:0);
H6l=H6.low=H6l+gl;
H6.high=H6h+gh+(H6l>>>0<gl>>>0?1:0);
H7l=H7.low=H7l+hl;
H7.high=H7h+hh+(H7l>>>0<hl>>>0?1:0);},


_doFinalize:function(){

var data=this._data;
var dataWords=data.words;

var nBitsTotal=this._nDataBytes*8;
var nBitsLeft=data.sigBytes*8;


dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;
dataWords[(nBitsLeft+128>>>10<<5)+30]=Math.floor(nBitsTotal/0x100000000);
dataWords[(nBitsLeft+128>>>10<<5)+31]=nBitsTotal;
data.sigBytes=dataWords.length*4;


this._process();


var hash=this._hash.toX32();


return hash;},


clone:function(){
var clone=Hasher.clone.call(this);
clone._hash=this._hash.clone();

return clone;},


blockSize:1024/32});
















C.SHA512=Hasher._createHelper(SHA512);















C.HmacSHA512=Hasher._createHmacHelper(SHA512);})();



return CryptoJS.SHA512;});
});
__d('crypto-js/sha384.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/x64-core.js"),require("crypto-js/sha512.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./x64-core","./sha512"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_x64=C.x64;
var X64Word=C_x64.Word;
var X64WordArray=C_x64.WordArray;
var C_algo=C.algo;
var SHA512=C_algo.SHA512;




var SHA384=C_algo.SHA384=SHA512.extend({
_doReset:function(){
this._hash=new X64WordArray.init([
new X64Word.init(0xcbbb9d5d,0xc1059ed8),new X64Word.init(0x629a292a,0x367cd507),
new X64Word.init(0x9159015a,0x3070dd17),new X64Word.init(0x152fecd8,0xf70e5939),
new X64Word.init(0x67332667,0xffc00b31),new X64Word.init(0x8eb44a87,0x68581511),
new X64Word.init(0xdb0c2e0d,0x64f98fa7),new X64Word.init(0x47b5481d,0xbefa4fa4)]);},



_doFinalize:function(){
var hash=SHA512._doFinalize.call(this);

hash.sigBytes-=16;

return hash;}});

















C.SHA384=SHA512._createHelper(SHA384);















C.HmacSHA384=SHA512._createHmacHelper(SHA384);})();



return CryptoJS.SHA384;});
});
__d('crypto-js/sha3.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/x64-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./x64-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(Math){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var Hasher=C_lib.Hasher;
var C_x64=C.x64;
var X64Word=C_x64.Word;
var C_algo=C.algo;


var RHO_OFFSETS=[];
var PI_INDEXES=[];
var ROUND_CONSTANTS=[];


(function(){

var x=1,y=0;
for(var t=0;t<24;t++){
RHO_OFFSETS[x+5*y]=(t+1)*(t+2)/2%64;

var newX=y%5;
var newY=(2*x+3*y)%5;
x=newX;
y=newY;}



for(var x=0;x<5;x++){
for(var y=0;y<5;y++){
PI_INDEXES[x+5*y]=y+(2*x+3*y)%5*5;}}




var LFSR=0x01;
for(var i=0;i<24;i++){
var roundConstantMsw=0;
var roundConstantLsw=0;

for(var j=0;j<7;j++){
if(LFSR&0x01){
var bitPosition=(1<<j)-1;
if(bitPosition<32){
roundConstantLsw^=1<<bitPosition;}else 
{
roundConstantMsw^=1<<bitPosition-32;}}




if(LFSR&0x80){

LFSR=LFSR<<1^0x71;}else 
{
LFSR<<=1;}}



ROUND_CONSTANTS[i]=X64Word.create(roundConstantMsw,roundConstantLsw);}})();




var T=[];
(function(){
for(var i=0;i<25;i++){
T[i]=X64Word.create();}})();






var SHA3=C_algo.SHA3=Hasher.extend({








cfg:Hasher.cfg.extend({
outputLength:512}),


_doReset:function(){
var state=this._state=[];
for(var i=0;i<25;i++){
state[i]=new X64Word.init();}


this.blockSize=(1600-2*this.cfg.outputLength)/32;},


_doProcessBlock:function(M,offset){

var state=this._state;
var nBlockSizeLanes=this.blockSize/2;


for(var i=0;i<nBlockSizeLanes;i++){

var M2i=M[offset+2*i];
var M2i1=M[offset+2*i+1];


M2i=
(M2i<<8|M2i>>>24)&0x00ff00ff|
(M2i<<24|M2i>>>8)&0xff00ff00;

M2i1=
(M2i1<<8|M2i1>>>24)&0x00ff00ff|
(M2i1<<24|M2i1>>>8)&0xff00ff00;



var lane=state[i];
lane.high^=M2i1;
lane.low^=M2i;}



for(var round=0;round<24;round++){

for(var x=0;x<5;x++){

var tMsw=0,tLsw=0;
for(var y=0;y<5;y++){
var lane=state[x+5*y];
tMsw^=lane.high;
tLsw^=lane.low;}



var Tx=T[x];
Tx.high=tMsw;
Tx.low=tLsw;}

for(var x=0;x<5;x++){

var Tx4=T[(x+4)%5];
var Tx1=T[(x+1)%5];
var Tx1Msw=Tx1.high;
var Tx1Lsw=Tx1.low;


var tMsw=Tx4.high^(Tx1Msw<<1|Tx1Lsw>>>31);
var tLsw=Tx4.low^(Tx1Lsw<<1|Tx1Msw>>>31);
for(var y=0;y<5;y++){
var lane=state[x+5*y];
lane.high^=tMsw;
lane.low^=tLsw;}}




for(var laneIndex=1;laneIndex<25;laneIndex++){

var lane=state[laneIndex];
var laneMsw=lane.high;
var laneLsw=lane.low;
var rhoOffset=RHO_OFFSETS[laneIndex];


if(rhoOffset<32){
var tMsw=laneMsw<<rhoOffset|laneLsw>>>32-rhoOffset;
var tLsw=laneLsw<<rhoOffset|laneMsw>>>32-rhoOffset;}else 
{
var tMsw=laneLsw<<rhoOffset-32|laneMsw>>>64-rhoOffset;
var tLsw=laneMsw<<rhoOffset-32|laneLsw>>>64-rhoOffset;}



var TPiLane=T[PI_INDEXES[laneIndex]];
TPiLane.high=tMsw;
TPiLane.low=tLsw;}



var T0=T[0];
var state0=state[0];
T0.high=state0.high;
T0.low=state0.low;


for(var x=0;x<5;x++){
for(var y=0;y<5;y++){

var laneIndex=x+5*y;
var lane=state[laneIndex];
var TLane=T[laneIndex];
var Tx1Lane=T[(x+1)%5+5*y];
var Tx2Lane=T[(x+2)%5+5*y];


lane.high=TLane.high^~Tx1Lane.high&Tx2Lane.high;
lane.low=TLane.low^~Tx1Lane.low&Tx2Lane.low;}}




var lane=state[0];
var roundConstant=ROUND_CONSTANTS[round];
lane.high^=roundConstant.high;
lane.low^=roundConstant.low;;}},



_doFinalize:function(){

var data=this._data;
var dataWords=data.words;
var nBitsTotal=this._nDataBytes*8;
var nBitsLeft=data.sigBytes*8;
var blockSizeBits=this.blockSize*32;


dataWords[nBitsLeft>>>5]|=0x1<<24-nBitsLeft%32;
dataWords[(Math.ceil((nBitsLeft+1)/blockSizeBits)*blockSizeBits>>>5)-1]|=0x80;
data.sigBytes=dataWords.length*4;


this._process();


var state=this._state;
var outputLengthBytes=this.cfg.outputLength/8;
var outputLengthLanes=outputLengthBytes/8;


var hashWords=[];
for(var i=0;i<outputLengthLanes;i++){

var lane=state[i];
var laneMsw=lane.high;
var laneLsw=lane.low;


laneMsw=
(laneMsw<<8|laneMsw>>>24)&0x00ff00ff|
(laneMsw<<24|laneMsw>>>8)&0xff00ff00;

laneLsw=
(laneLsw<<8|laneLsw>>>24)&0x00ff00ff|
(laneLsw<<24|laneLsw>>>8)&0xff00ff00;



hashWords.push(laneLsw);
hashWords.push(laneMsw);}



return new WordArray.init(hashWords,outputLengthBytes);},


clone:function(){
var clone=Hasher.clone.call(this);

var state=clone._state=this._state.slice(0);
for(var i=0;i<25;i++){
state[i]=state[i].clone();}


return clone;}});

















C.SHA3=Hasher._createHelper(SHA3);















C.HmacSHA3=Hasher._createHmacHelper(SHA3);})(
Math);


return CryptoJS.SHA3;});
});
__d('crypto-js/ripemd160.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

(function(Math){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var Hasher=C_lib.Hasher;
var C_algo=C.algo;


var _zl=WordArray.create([
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,
7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,
3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,
1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,
4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]);
var _zr=WordArray.create([
5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,
6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,
15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,
8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,
12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]);
var _sl=WordArray.create([
11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,
7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,
11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,
11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,
9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]);
var _sr=WordArray.create([
8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,
9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,
9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,
15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,
8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]);

var _hl=WordArray.create([0x00000000,0x5A827999,0x6ED9EBA1,0x8F1BBCDC,0xA953FD4E]);
var _hr=WordArray.create([0x50A28BE6,0x5C4DD124,0x6D703EF3,0x7A6D76E9,0x00000000]);




var RIPEMD160=C_algo.RIPEMD160=Hasher.extend({
_doReset:function(){
this._hash=WordArray.create([0x67452301,0xEFCDAB89,0x98BADCFE,0x10325476,0xC3D2E1F0]);},


_doProcessBlock:function(M,offset){


for(var i=0;i<16;i++){

var offset_i=offset+i;
var M_offset_i=M[offset_i];


M[offset_i]=
(M_offset_i<<8|M_offset_i>>>24)&0x00ff00ff|
(M_offset_i<<24|M_offset_i>>>8)&0xff00ff00;}



var H=this._hash.words;
var hl=_hl.words;
var hr=_hr.words;
var zl=_zl.words;
var zr=_zr.words;
var sl=_sl.words;
var sr=_sr.words;


var al,bl,cl,dl,el;
var ar,br,cr,dr,er;

ar=al=H[0];
br=bl=H[1];
cr=cl=H[2];
dr=dl=H[3];
er=el=H[4];

var t;
for(var i=0;i<80;i+=1){
t=al+M[offset+zl[i]]|0;
if(i<16){
t+=f1(bl,cl,dl)+hl[0];}else 
if(i<32){
t+=f2(bl,cl,dl)+hl[1];}else 
if(i<48){
t+=f3(bl,cl,dl)+hl[2];}else 
if(i<64){
t+=f4(bl,cl,dl)+hl[3];}else 
{
t+=f5(bl,cl,dl)+hl[4];}

t=t|0;
t=rotl(t,sl[i]);
t=t+el|0;
al=el;
el=dl;
dl=rotl(cl,10);
cl=bl;
bl=t;

t=ar+M[offset+zr[i]]|0;
if(i<16){
t+=f5(br,cr,dr)+hr[0];}else 
if(i<32){
t+=f4(br,cr,dr)+hr[1];}else 
if(i<48){
t+=f3(br,cr,dr)+hr[2];}else 
if(i<64){
t+=f2(br,cr,dr)+hr[3];}else 
{
t+=f1(br,cr,dr)+hr[4];}

t=t|0;
t=rotl(t,sr[i]);
t=t+er|0;
ar=er;
er=dr;
dr=rotl(cr,10);
cr=br;
br=t;}


t=H[1]+cl+dr|0;
H[1]=H[2]+dl+er|0;
H[2]=H[3]+el+ar|0;
H[3]=H[4]+al+br|0;
H[4]=H[0]+bl+cr|0;
H[0]=t;},


_doFinalize:function(){

var data=this._data;
var dataWords=data.words;

var nBitsTotal=this._nDataBytes*8;
var nBitsLeft=data.sigBytes*8;


dataWords[nBitsLeft>>>5]|=0x80<<24-nBitsLeft%32;
dataWords[(nBitsLeft+64>>>9<<4)+14]=
(nBitsTotal<<8|nBitsTotal>>>24)&0x00ff00ff|
(nBitsTotal<<24|nBitsTotal>>>8)&0xff00ff00;

data.sigBytes=(dataWords.length+1)*4;


this._process();


var hash=this._hash;
var H=hash.words;


for(var i=0;i<5;i++){

var H_i=H[i];


H[i]=(H_i<<8|H_i>>>24)&0x00ff00ff|
(H_i<<24|H_i>>>8)&0xff00ff00;}



return hash;},


clone:function(){
var clone=Hasher.clone.call(this);
clone._hash=this._hash.clone();

return clone;}});




function f1(x,y,z){
return x^y^z;}



function f2(x,y,z){
return x&y|~x&z;}


function f3(x,y,z){
return (x|~y)^z;}


function f4(x,y,z){
return x&z|y&~z;}


function f5(x,y,z){
return x^(y|~z);}



function rotl(x,n){
return x<<n|x>>>32-n;}

















C.RIPEMD160=Hasher._createHelper(RIPEMD160);















C.HmacRIPEMD160=Hasher._createHmacHelper(RIPEMD160);})(
Math);


return CryptoJS.RIPEMD160;});
});
__d('crypto-js/hmac.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var Base=C_lib.Base;
var C_enc=C.enc;
var Utf8=C_enc.Utf8;
var C_algo=C.algo;




var HMAC=C_algo.HMAC=Base.extend({










init:function(hasher,key){

hasher=this._hasher=new hasher.init();


if(typeof key=='string'){
key=Utf8.parse(key);}



var hasherBlockSize=hasher.blockSize;
var hasherBlockSizeBytes=hasherBlockSize*4;


if(key.sigBytes>hasherBlockSizeBytes){
key=hasher.finalize(key);}



key.clamp();


var oKey=this._oKey=key.clone();
var iKey=this._iKey=key.clone();


var oKeyWords=oKey.words;
var iKeyWords=iKey.words;


for(var i=0;i<hasherBlockSize;i++){
oKeyWords[i]^=0x5c5c5c5c;
iKeyWords[i]^=0x36363636;}

oKey.sigBytes=iKey.sigBytes=hasherBlockSizeBytes;


this.reset();},









reset:function(){

var hasher=this._hasher;


hasher.reset();
hasher.update(this._iKey);},














update:function(messageUpdate){
this._hasher.update(messageUpdate);


return this;},
















finalize:function(messageUpdate){

var hasher=this._hasher;


var innerHash=hasher.finalize(messageUpdate);
hasher.reset();
var hmac=hasher.finalize(this._oKey.clone().concat(innerHash));

return hmac;}});})();});
});
__d('crypto-js/pbkdf2.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/sha1.js"),require("crypto-js/hmac.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./sha1","./hmac"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var Base=C_lib.Base;
var WordArray=C_lib.WordArray;
var C_algo=C.algo;
var SHA1=C_algo.SHA1;
var HMAC=C_algo.HMAC;




var PBKDF2=C_algo.PBKDF2=Base.extend({







cfg:Base.extend({
keySize:128/32,
hasher:SHA1,
iterations:1}),













init:function(cfg){
this.cfg=this.cfg.extend(cfg);},














compute:function(password,salt){

var cfg=this.cfg;


var hmac=HMAC.create(cfg.hasher,password);


var derivedKey=WordArray.create();
var blockIndex=WordArray.create([0x00000001]);


var derivedKeyWords=derivedKey.words;
var blockIndexWords=blockIndex.words;
var keySize=cfg.keySize;
var iterations=cfg.iterations;


while(derivedKeyWords.length<keySize){
var block=hmac.update(salt).finalize(blockIndex);
hmac.reset();


var blockWords=block.words;
var blockWordsLength=blockWords.length;


var intermediate=block;
for(var i=1;i<iterations;i++){
intermediate=hmac.finalize(intermediate);
hmac.reset();


var intermediateWords=intermediate.words;


for(var j=0;j<blockWordsLength;j++){
blockWords[j]^=intermediateWords[j];}}



derivedKey.concat(block);
blockIndexWords[0]++;}

derivedKey.sigBytes=keySize*4;

return derivedKey;}});




















C.PBKDF2=function(password,salt,cfg){
return PBKDF2.create(cfg).compute(password,salt);};})();




return CryptoJS.PBKDF2;});
});
__d('crypto-js/evpkdf.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/sha1.js"),require("crypto-js/hmac.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./sha1","./hmac"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var Base=C_lib.Base;
var WordArray=C_lib.WordArray;
var C_algo=C.algo;
var MD5=C_algo.MD5;





var EvpKDF=C_algo.EvpKDF=Base.extend({







cfg:Base.extend({
keySize:128/32,
hasher:MD5,
iterations:1}),













init:function(cfg){
this.cfg=this.cfg.extend(cfg);},














compute:function(password,salt){

var cfg=this.cfg;


var hasher=cfg.hasher.create();


var derivedKey=WordArray.create();


var derivedKeyWords=derivedKey.words;
var keySize=cfg.keySize;
var iterations=cfg.iterations;


while(derivedKeyWords.length<keySize){
if(block){
hasher.update(block);}

var block=hasher.update(password).finalize(salt);
hasher.reset();


for(var i=1;i<iterations;i++){
block=hasher.finalize(block);
hasher.reset();}


derivedKey.concat(block);}

derivedKey.sigBytes=keySize*4;

return derivedKey;}});




















C.EvpKDF=function(password,salt,cfg){
return EvpKDF.create(cfg).compute(password,salt);};})();




return CryptoJS.EvpKDF;});
});
__d('crypto-js/cipher-core.js',function(global, require, module, exports) {  ;(function(root,factory){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.lib.Cipher||function(undefined){

var C=CryptoJS;
var C_lib=C.lib;
var Base=C_lib.Base;
var WordArray=C_lib.WordArray;
var BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm;
var C_enc=C.enc;
var Utf8=C_enc.Utf8;
var Base64=C_enc.Base64;
var C_algo=C.algo;
var EvpKDF=C_algo.EvpKDF;









var Cipher=C_lib.Cipher=BufferedBlockAlgorithm.extend({





cfg:Base.extend(),















createEncryptor:function(key,cfg){
return this.create(this._ENC_XFORM_MODE,key,cfg);},
















createDecryptor:function(key,cfg){
return this.create(this._DEC_XFORM_MODE,key,cfg);},













init:function(xformMode,key,cfg){

this.cfg=this.cfg.extend(cfg);


this._xformMode=xformMode;
this._key=key;


this.reset();},









reset:function(){

BufferedBlockAlgorithm.reset.call(this);


this._doReset();},














process:function(dataUpdate){

this._append(dataUpdate);


return this._process();},
















finalize:function(dataUpdate){

if(dataUpdate){
this._append(dataUpdate);}



var finalProcessedData=this._doFinalize();

return finalProcessedData;},


keySize:128/32,

ivSize:128/32,

_ENC_XFORM_MODE:1,

_DEC_XFORM_MODE:2,














_createHelper:function(){
function selectCipherStrategy(key){
if(typeof key=='string'){
return PasswordBasedCipher;}else 
{
return SerializableCipher;}}



return function(cipher){
return {
encrypt:function(message,key,cfg){
return selectCipherStrategy(key).encrypt(cipher,message,key,cfg);},


decrypt:function(ciphertext,key,cfg){
return selectCipherStrategy(key).decrypt(cipher,ciphertext,key,cfg);}};};}()});











var StreamCipher=C_lib.StreamCipher=Cipher.extend({
_doFinalize:function(){

var finalProcessedBlocks=this._process(!!'flush');

return finalProcessedBlocks;},


blockSize:1});





var C_mode=C.mode={};




var BlockCipherMode=C_lib.BlockCipherMode=Base.extend({












createEncryptor:function(cipher,iv){
return this.Encryptor.create(cipher,iv);},














createDecryptor:function(cipher,iv){
return this.Decryptor.create(cipher,iv);},












init:function(cipher,iv){
this._cipher=cipher;
this._iv=iv;}});






var CBC=C_mode.CBC=function(){



var CBC=BlockCipherMode.extend();




CBC.Encryptor=CBC.extend({










processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;


xorBlock.call(this,words,offset,blockSize);
cipher.encryptBlock(words,offset);


this._prevBlock=words.slice(offset,offset+blockSize);}});






CBC.Decryptor=CBC.extend({










processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;


var thisBlock=words.slice(offset,offset+blockSize);


cipher.decryptBlock(words,offset);
xorBlock.call(this,words,offset,blockSize);


this._prevBlock=thisBlock;}});



function xorBlock(words,offset,blockSize){

var iv=this._iv;


if(iv){
var block=iv;


this._iv=undefined;}else 
{
var block=this._prevBlock;}



for(var i=0;i<blockSize;i++){
words[offset+i]^=block[i];}}



return CBC;}();





var C_pad=C.pad={};




var Pkcs7=C_pad.Pkcs7={












pad:function(data,blockSize){

var blockSizeBytes=blockSize*4;


var nPaddingBytes=blockSizeBytes-data.sigBytes%blockSizeBytes;


var paddingWord=nPaddingBytes<<24|nPaddingBytes<<16|nPaddingBytes<<8|nPaddingBytes;


var paddingWords=[];
for(var i=0;i<nPaddingBytes;i+=4){
paddingWords.push(paddingWord);}

var padding=WordArray.create(paddingWords,nPaddingBytes);


data.concat(padding);},













unpad:function(data){

var nPaddingBytes=data.words[data.sigBytes-1>>>2]&0xff;


data.sigBytes-=nPaddingBytes;}};








var BlockCipher=C_lib.BlockCipher=Cipher.extend({






cfg:Cipher.cfg.extend({
mode:CBC,
padding:Pkcs7}),


reset:function(){

Cipher.reset.call(this);


var cfg=this.cfg;
var iv=cfg.iv;
var mode=cfg.mode;


if(this._xformMode==this._ENC_XFORM_MODE){
var modeCreator=mode.createEncryptor;}else 
{
var modeCreator=mode.createDecryptor;


this._minBufferSize=1;}

this._mode=modeCreator.call(mode,this,iv&&iv.words);},


_doProcessBlock:function(words,offset){
this._mode.processBlock(words,offset);},


_doFinalize:function(){

var padding=this.cfg.padding;


if(this._xformMode==this._ENC_XFORM_MODE){

padding.pad(this._data,this.blockSize);


var finalProcessedBlocks=this._process(!!'flush');}else 
{

var finalProcessedBlocks=this._process(!!'flush');


padding.unpad(finalProcessedBlocks);}


return finalProcessedBlocks;},


blockSize:128/32});















var CipherParams=C_lib.CipherParams=Base.extend({



















init:function(cipherParams){
this.mixIn(cipherParams);},

















toString:function(formatter){
return (formatter||this.formatter).stringify(this);}});






var C_format=C.format={};




var OpenSSLFormatter=C_format.OpenSSL={













stringify:function(cipherParams){

var ciphertext=cipherParams.ciphertext;
var salt=cipherParams.salt;


if(salt){
var wordArray=WordArray.create([0x53616c74,0x65645f5f]).concat(salt).concat(ciphertext);}else 
{
var wordArray=ciphertext;}


return wordArray.toString(Base64);},















parse:function(openSSLStr){

var ciphertext=Base64.parse(openSSLStr);


var ciphertextWords=ciphertext.words;


if(ciphertextWords[0]==0x53616c74&&ciphertextWords[1]==0x65645f5f){

var salt=WordArray.create(ciphertextWords.slice(2,4));


ciphertextWords.splice(0,4);
ciphertext.sigBytes-=16;}


return CipherParams.create({ciphertext:ciphertext,salt:salt});}};






var SerializableCipher=C_lib.SerializableCipher=Base.extend({





cfg:Base.extend({
format:OpenSSLFormatter}),




















encrypt:function(cipher,message,key,cfg){

cfg=this.cfg.extend(cfg);


var encryptor=cipher.createEncryptor(key,cfg);
var ciphertext=encryptor.finalize(message);


var cipherCfg=encryptor.cfg;


return CipherParams.create({
ciphertext:ciphertext,
key:key,
iv:cipherCfg.iv,
algorithm:cipher,
mode:cipherCfg.mode,
padding:cipherCfg.padding,
blockSize:cipher.blockSize,
formatter:cfg.format});},




















decrypt:function(cipher,ciphertext,key,cfg){

cfg=this.cfg.extend(cfg);


ciphertext=this._parse(ciphertext,cfg.format);


var plaintext=cipher.createDecryptor(key,cfg).finalize(ciphertext.ciphertext);

return plaintext;},

















_parse:function(ciphertext,format){
if(typeof ciphertext=='string'){
return format.parse(ciphertext,this);}else 
{
return ciphertext;}}});







var C_kdf=C.kdf={};




var OpenSSLKdf=C_kdf.OpenSSL={

















execute:function(password,keySize,ivSize,salt){

if(!salt){
salt=WordArray.random(64/8);}



var key=EvpKDF.create({keySize:keySize+ivSize}).compute(password,salt);


var iv=WordArray.create(key.words.slice(keySize),ivSize*4);
key.sigBytes=keySize*4;


return CipherParams.create({key:key,iv:iv,salt:salt});}};







var PasswordBasedCipher=C_lib.PasswordBasedCipher=SerializableCipher.extend({





cfg:SerializableCipher.cfg.extend({
kdf:OpenSSLKdf}),



















encrypt:function(cipher,message,password,cfg){

cfg=this.cfg.extend(cfg);


var derivedParams=cfg.kdf.execute(password,cipher.keySize,cipher.ivSize);


cfg.iv=derivedParams.iv;


var ciphertext=SerializableCipher.encrypt.call(this,cipher,message,derivedParams.key,cfg);


ciphertext.mixIn(derivedParams);

return ciphertext;},



















decrypt:function(cipher,ciphertext,password,cfg){

cfg=this.cfg.extend(cfg);


ciphertext=this._parse(ciphertext,cfg.format);


var derivedParams=cfg.kdf.execute(password,cipher.keySize,cipher.ivSize,ciphertext.salt);


cfg.iv=derivedParams.iv;


var plaintext=SerializableCipher.decrypt.call(this,cipher,ciphertext,derivedParams.key,cfg);

return plaintext;}});}();});
});
__d('crypto-js/mode-cfb.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.mode.CFB=function(){
var CFB=CryptoJS.lib.BlockCipherMode.extend();

CFB.Encryptor=CFB.extend({
processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;

generateKeystreamAndEncrypt.call(this,words,offset,blockSize,cipher);


this._prevBlock=words.slice(offset,offset+blockSize);}});



CFB.Decryptor=CFB.extend({
processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;


var thisBlock=words.slice(offset,offset+blockSize);

generateKeystreamAndEncrypt.call(this,words,offset,blockSize,cipher);


this._prevBlock=thisBlock;}});



function generateKeystreamAndEncrypt(words,offset,blockSize,cipher){

var iv=this._iv;


if(iv){
var keystream=iv.slice(0);


this._iv=undefined;}else 
{
var keystream=this._prevBlock;}

cipher.encryptBlock(keystream,0);


for(var i=0;i<blockSize;i++){
words[offset+i]^=keystream[i];}}



return CFB;}();



return CryptoJS.mode.CFB;});
});
__d('crypto-js/mode-ctr.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.mode.CTR=function(){
var CTR=CryptoJS.lib.BlockCipherMode.extend();

var Encryptor=CTR.Encryptor=CTR.extend({
processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;
var iv=this._iv;
var counter=this._counter;


if(iv){
counter=this._counter=iv.slice(0);


this._iv=undefined;}

var keystream=counter.slice(0);
cipher.encryptBlock(keystream,0);


counter[blockSize-1]=counter[blockSize-1]+1|0;


for(var i=0;i<blockSize;i++){
words[offset+i]^=keystream[i];}}});




CTR.Decryptor=Encryptor;

return CTR;}();



return CryptoJS.mode.CTR;});
});
__d('crypto-js/mode-ctr-gladman.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
CryptoJS.mode.CTRGladman=function(){
var CTRGladman=CryptoJS.lib.BlockCipherMode.extend();

function incWord(word)
{
if((word>>24&0xff)===0xff){
var b1=word>>16&0xff;
var b2=word>>8&0xff;
var b3=word&0xff;

if(b1===0xff)
{
b1=0;
if(b2===0xff)
{
b2=0;
if(b3===0xff)
{
b3=0;}else 


{
++b3;}}else 



{
++b2;}}else 



{
++b1;}


word=0;
word+=b1<<16;
word+=b2<<8;
word+=b3;}else 


{
word+=0x01<<24;}

return word;}


function incCounter(counter)
{
if((counter[0]=incWord(counter[0]))===0)
{

counter[1]=incWord(counter[1]);}

return counter;}


var Encryptor=CTRGladman.Encryptor=CTRGladman.extend({
processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;
var iv=this._iv;
var counter=this._counter;


if(iv){
counter=this._counter=iv.slice(0);


this._iv=undefined;}


incCounter(counter);

var keystream=counter.slice(0);
cipher.encryptBlock(keystream,0);


for(var i=0;i<blockSize;i++){
words[offset+i]^=keystream[i];}}});




CTRGladman.Decryptor=Encryptor;

return CTRGladman;}();





return CryptoJS.mode.CTRGladman;});
});
__d('crypto-js/mode-ofb.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.mode.OFB=function(){
var OFB=CryptoJS.lib.BlockCipherMode.extend();

var Encryptor=OFB.Encryptor=OFB.extend({
processBlock:function(words,offset){

var cipher=this._cipher;
var blockSize=cipher.blockSize;
var iv=this._iv;
var keystream=this._keystream;


if(iv){
keystream=this._keystream=iv.slice(0);


this._iv=undefined;}

cipher.encryptBlock(keystream,0);


for(var i=0;i<blockSize;i++){
words[offset+i]^=keystream[i];}}});




OFB.Decryptor=Encryptor;

return OFB;}();



return CryptoJS.mode.OFB;});
});
__d('crypto-js/mode-ecb.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.mode.ECB=function(){
var ECB=CryptoJS.lib.BlockCipherMode.extend();

ECB.Encryptor=ECB.extend({
processBlock:function(words,offset){
this._cipher.encryptBlock(words,offset);}});



ECB.Decryptor=ECB.extend({
processBlock:function(words,offset){
this._cipher.decryptBlock(words,offset);}});



return ECB;}();



return CryptoJS.mode.ECB;});
});
__d('crypto-js/pad-ansix923.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.pad.AnsiX923={
pad:function(data,blockSize){

var dataSigBytes=data.sigBytes;
var blockSizeBytes=blockSize*4;


var nPaddingBytes=blockSizeBytes-dataSigBytes%blockSizeBytes;


var lastBytePos=dataSigBytes+nPaddingBytes-1;


data.clamp();
data.words[lastBytePos>>>2]|=nPaddingBytes<<24-lastBytePos%4*8;
data.sigBytes+=nPaddingBytes;},


unpad:function(data){

var nPaddingBytes=data.words[data.sigBytes-1>>>2]&0xff;


data.sigBytes-=nPaddingBytes;}};




return CryptoJS.pad.Ansix923;});
});
__d('crypto-js/pad-iso10126.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.pad.Iso10126={
pad:function(data,blockSize){

var blockSizeBytes=blockSize*4;


var nPaddingBytes=blockSizeBytes-data.sigBytes%blockSizeBytes;


data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes-1)).
concat(CryptoJS.lib.WordArray.create([nPaddingBytes<<24],1));},


unpad:function(data){

var nPaddingBytes=data.words[data.sigBytes-1>>>2]&0xff;


data.sigBytes-=nPaddingBytes;}};




return CryptoJS.pad.Iso10126;});
});
__d('crypto-js/pad-iso97971.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.pad.Iso97971={
pad:function(data,blockSize){

data.concat(CryptoJS.lib.WordArray.create([0x80000000],1));


CryptoJS.pad.ZeroPadding.pad(data,blockSize);},


unpad:function(data){

CryptoJS.pad.ZeroPadding.unpad(data);


data.sigBytes--;}};




return CryptoJS.pad.Iso97971;});
});
__d('crypto-js/pad-zeropadding.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.pad.ZeroPadding={
pad:function(data,blockSize){

var blockSizeBytes=blockSize*4;


data.clamp();
data.sigBytes+=blockSizeBytes-(data.sigBytes%blockSizeBytes||blockSizeBytes);},


unpad:function(data){

var dataWords=data.words;


var i=data.sigBytes-1;
while(!(dataWords[i>>>2]>>>24-i%4*8&0xff)){
i--;}

data.sigBytes=i+1;}};




return CryptoJS.pad.ZeroPadding;});
});
__d('crypto-js/pad-nopadding.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){




CryptoJS.pad.NoPadding={
pad:function(){},


unpad:function(){}};




return CryptoJS.pad.NoPadding;});
});
__d('crypto-js/format-hex.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(undefined){

var C=CryptoJS;
var C_lib=C.lib;
var CipherParams=C_lib.CipherParams;
var C_enc=C.enc;
var Hex=C_enc.Hex;
var C_format=C.format;

var HexFormatter=C_format.Hex={













stringify:function(cipherParams){
return cipherParams.ciphertext.toString(Hex);},















parse:function(input){
var ciphertext=Hex.parse(input);
return CipherParams.create({ciphertext:ciphertext});}};})();





return CryptoJS.format.Hex;});
});
__d('crypto-js/aes.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/enc-base64.js"),require("crypto-js/md5.js"),require("crypto-js/evpkdf.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var BlockCipher=C_lib.BlockCipher;
var C_algo=C.algo;


var SBOX=[];
var INV_SBOX=[];
var SUB_MIX_0=[];
var SUB_MIX_1=[];
var SUB_MIX_2=[];
var SUB_MIX_3=[];
var INV_SUB_MIX_0=[];
var INV_SUB_MIX_1=[];
var INV_SUB_MIX_2=[];
var INV_SUB_MIX_3=[];


(function(){

var d=[];
for(var i=0;i<256;i++){
if(i<128){
d[i]=i<<1;}else 
{
d[i]=i<<1^0x11b;}}




var x=0;
var xi=0;
for(var i=0;i<256;i++){

var sx=xi^xi<<1^xi<<2^xi<<3^xi<<4;
sx=sx>>>8^sx&0xff^0x63;
SBOX[x]=sx;
INV_SBOX[sx]=x;


var x2=d[x];
var x4=d[x2];
var x8=d[x4];


var t=d[sx]*0x101^sx*0x1010100;
SUB_MIX_0[x]=t<<24|t>>>8;
SUB_MIX_1[x]=t<<16|t>>>16;
SUB_MIX_2[x]=t<<8|t>>>24;
SUB_MIX_3[x]=t;


var t=x8*0x1010101^x4*0x10001^x2*0x101^x*0x1010100;
INV_SUB_MIX_0[sx]=t<<24|t>>>8;
INV_SUB_MIX_1[sx]=t<<16|t>>>16;
INV_SUB_MIX_2[sx]=t<<8|t>>>24;
INV_SUB_MIX_3[sx]=t;


if(!x){
x=xi=1;}else 
{
x=x2^d[d[d[x8^x2]]];
xi^=d[d[xi]];}}})();





var RCON=[0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36];




var AES=C_algo.AES=BlockCipher.extend({
_doReset:function(){

var key=this._key;
var keyWords=key.words;
var keySize=key.sigBytes/4;


var nRounds=this._nRounds=keySize+6;


var ksRows=(nRounds+1)*4;


var keySchedule=this._keySchedule=[];
for(var ksRow=0;ksRow<ksRows;ksRow++){
if(ksRow<keySize){
keySchedule[ksRow]=keyWords[ksRow];}else 
{
var t=keySchedule[ksRow-1];

if(!(ksRow%keySize)){

t=t<<8|t>>>24;


t=SBOX[t>>>24]<<24|SBOX[t>>>16&0xff]<<16|SBOX[t>>>8&0xff]<<8|SBOX[t&0xff];


t^=RCON[ksRow/keySize|0]<<24;}else 
if(keySize>6&&ksRow%keySize==4){

t=SBOX[t>>>24]<<24|SBOX[t>>>16&0xff]<<16|SBOX[t>>>8&0xff]<<8|SBOX[t&0xff];}


keySchedule[ksRow]=keySchedule[ksRow-keySize]^t;}}




var invKeySchedule=this._invKeySchedule=[];
for(var invKsRow=0;invKsRow<ksRows;invKsRow++){
var ksRow=ksRows-invKsRow;

if(invKsRow%4){
var t=keySchedule[ksRow];}else 
{
var t=keySchedule[ksRow-4];}


if(invKsRow<4||ksRow<=4){
invKeySchedule[invKsRow]=t;}else 
{
invKeySchedule[invKsRow]=INV_SUB_MIX_0[SBOX[t>>>24]]^INV_SUB_MIX_1[SBOX[t>>>16&0xff]]^
INV_SUB_MIX_2[SBOX[t>>>8&0xff]]^INV_SUB_MIX_3[SBOX[t&0xff]];}}},




encryptBlock:function(M,offset){
this._doCryptBlock(M,offset,this._keySchedule,SUB_MIX_0,SUB_MIX_1,SUB_MIX_2,SUB_MIX_3,SBOX);},


decryptBlock:function(M,offset){

var t=M[offset+1];
M[offset+1]=M[offset+3];
M[offset+3]=t;

this._doCryptBlock(M,offset,this._invKeySchedule,INV_SUB_MIX_0,INV_SUB_MIX_1,INV_SUB_MIX_2,INV_SUB_MIX_3,INV_SBOX);


var t=M[offset+1];
M[offset+1]=M[offset+3];
M[offset+3]=t;},


_doCryptBlock:function(M,offset,keySchedule,SUB_MIX_0,SUB_MIX_1,SUB_MIX_2,SUB_MIX_3,SBOX){

var nRounds=this._nRounds;


var s0=M[offset]^keySchedule[0];
var s1=M[offset+1]^keySchedule[1];
var s2=M[offset+2]^keySchedule[2];
var s3=M[offset+3]^keySchedule[3];


var ksRow=4;


for(var round=1;round<nRounds;round++){

var t0=SUB_MIX_0[s0>>>24]^SUB_MIX_1[s1>>>16&0xff]^SUB_MIX_2[s2>>>8&0xff]^SUB_MIX_3[s3&0xff]^keySchedule[ksRow++];
var t1=SUB_MIX_0[s1>>>24]^SUB_MIX_1[s2>>>16&0xff]^SUB_MIX_2[s3>>>8&0xff]^SUB_MIX_3[s0&0xff]^keySchedule[ksRow++];
var t2=SUB_MIX_0[s2>>>24]^SUB_MIX_1[s3>>>16&0xff]^SUB_MIX_2[s0>>>8&0xff]^SUB_MIX_3[s1&0xff]^keySchedule[ksRow++];
var t3=SUB_MIX_0[s3>>>24]^SUB_MIX_1[s0>>>16&0xff]^SUB_MIX_2[s1>>>8&0xff]^SUB_MIX_3[s2&0xff]^keySchedule[ksRow++];


s0=t0;
s1=t1;
s2=t2;
s3=t3;}



var t0=(SBOX[s0>>>24]<<24|SBOX[s1>>>16&0xff]<<16|SBOX[s2>>>8&0xff]<<8|SBOX[s3&0xff])^keySchedule[ksRow++];
var t1=(SBOX[s1>>>24]<<24|SBOX[s2>>>16&0xff]<<16|SBOX[s3>>>8&0xff]<<8|SBOX[s0&0xff])^keySchedule[ksRow++];
var t2=(SBOX[s2>>>24]<<24|SBOX[s3>>>16&0xff]<<16|SBOX[s0>>>8&0xff]<<8|SBOX[s1&0xff])^keySchedule[ksRow++];
var t3=(SBOX[s3>>>24]<<24|SBOX[s0>>>16&0xff]<<16|SBOX[s1>>>8&0xff]<<8|SBOX[s2&0xff])^keySchedule[ksRow++];


M[offset]=t0;
M[offset+1]=t1;
M[offset+2]=t2;
M[offset+3]=t3;},


keySize:256/32});










C.AES=BlockCipher._createHelper(AES);})();



return CryptoJS.AES;});
});
__d('crypto-js/tripledes.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/enc-base64.js"),require("crypto-js/md5.js"),require("crypto-js/evpkdf.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var WordArray=C_lib.WordArray;
var BlockCipher=C_lib.BlockCipher;
var C_algo=C.algo;


var PC1=[
57,49,41,33,25,17,9,1,
58,50,42,34,26,18,10,2,
59,51,43,35,27,19,11,3,
60,52,44,36,63,55,47,39,
31,23,15,7,62,54,46,38,
30,22,14,6,61,53,45,37,
29,21,13,5,28,20,12,4];



var PC2=[
14,17,11,24,1,5,
3,28,15,6,21,10,
23,19,12,4,26,8,
16,7,27,20,13,2,
41,52,31,37,47,55,
30,40,51,45,33,48,
44,49,39,56,34,53,
46,42,50,36,29,32];



var BIT_SHIFTS=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28];


var SBOX_P=[
{
0x0:0x808200,
0x10000000:0x8000,
0x20000000:0x808002,
0x30000000:0x2,
0x40000000:0x200,
0x50000000:0x808202,
0x60000000:0x800202,
0x70000000:0x800000,
0x80000000:0x202,
0x90000000:0x800200,
0xa0000000:0x8200,
0xb0000000:0x808000,
0xc0000000:0x8002,
0xd0000000:0x800002,
0xe0000000:0x0,
0xf0000000:0x8202,
0x8000000:0x0,
0x18000000:0x808202,
0x28000000:0x8202,
0x38000000:0x8000,
0x48000000:0x808200,
0x58000000:0x200,
0x68000000:0x808002,
0x78000000:0x2,
0x88000000:0x800200,
0x98000000:0x8200,
0xa8000000:0x808000,
0xb8000000:0x800202,
0xc8000000:0x800002,
0xd8000000:0x8002,
0xe8000000:0x202,
0xf8000000:0x800000,
0x1:0x8000,
0x10000001:0x2,
0x20000001:0x808200,
0x30000001:0x800000,
0x40000001:0x808002,
0x50000001:0x8200,
0x60000001:0x200,
0x70000001:0x800202,
0x80000001:0x808202,
0x90000001:0x808000,
0xa0000001:0x800002,
0xb0000001:0x8202,
0xc0000001:0x202,
0xd0000001:0x800200,
0xe0000001:0x8002,
0xf0000001:0x0,
0x8000001:0x808202,
0x18000001:0x808000,
0x28000001:0x800000,
0x38000001:0x200,
0x48000001:0x8000,
0x58000001:0x800002,
0x68000001:0x2,
0x78000001:0x8202,
0x88000001:0x8002,
0x98000001:0x800202,
0xa8000001:0x202,
0xb8000001:0x808200,
0xc8000001:0x800200,
0xd8000001:0x0,
0xe8000001:0x8200,
0xf8000001:0x808002},

{
0x0:0x40084010,
0x1000000:0x4000,
0x2000000:0x80000,
0x3000000:0x40080010,
0x4000000:0x40000010,
0x5000000:0x40084000,
0x6000000:0x40004000,
0x7000000:0x10,
0x8000000:0x84000,
0x9000000:0x40004010,
0xa000000:0x40000000,
0xb000000:0x84010,
0xc000000:0x80010,
0xd000000:0x0,
0xe000000:0x4010,
0xf000000:0x40080000,
0x800000:0x40004000,
0x1800000:0x84010,
0x2800000:0x10,
0x3800000:0x40004010,
0x4800000:0x40084010,
0x5800000:0x40000000,
0x6800000:0x80000,
0x7800000:0x40080010,
0x8800000:0x80010,
0x9800000:0x0,
0xa800000:0x4000,
0xb800000:0x40080000,
0xc800000:0x40000010,
0xd800000:0x84000,
0xe800000:0x40084000,
0xf800000:0x4010,
0x10000000:0x0,
0x11000000:0x40080010,
0x12000000:0x40004010,
0x13000000:0x40084000,
0x14000000:0x40080000,
0x15000000:0x10,
0x16000000:0x84010,
0x17000000:0x4000,
0x18000000:0x4010,
0x19000000:0x80000,
0x1a000000:0x80010,
0x1b000000:0x40000010,
0x1c000000:0x84000,
0x1d000000:0x40004000,
0x1e000000:0x40000000,
0x1f000000:0x40084010,
0x10800000:0x84010,
0x11800000:0x80000,
0x12800000:0x40080000,
0x13800000:0x4000,
0x14800000:0x40004000,
0x15800000:0x40084010,
0x16800000:0x10,
0x17800000:0x40000000,
0x18800000:0x40084000,
0x19800000:0x40000010,
0x1a800000:0x40004010,
0x1b800000:0x80010,
0x1c800000:0x0,
0x1d800000:0x4010,
0x1e800000:0x40080010,
0x1f800000:0x84000},

{
0x0:0x104,
0x100000:0x0,
0x200000:0x4000100,
0x300000:0x10104,
0x400000:0x10004,
0x500000:0x4000004,
0x600000:0x4010104,
0x700000:0x4010000,
0x800000:0x4000000,
0x900000:0x4010100,
0xa00000:0x10100,
0xb00000:0x4010004,
0xc00000:0x4000104,
0xd00000:0x10000,
0xe00000:0x4,
0xf00000:0x100,
0x80000:0x4010100,
0x180000:0x4010004,
0x280000:0x0,
0x380000:0x4000100,
0x480000:0x4000004,
0x580000:0x10000,
0x680000:0x10004,
0x780000:0x104,
0x880000:0x4,
0x980000:0x100,
0xa80000:0x4010000,
0xb80000:0x10104,
0xc80000:0x10100,
0xd80000:0x4000104,
0xe80000:0x4010104,
0xf80000:0x4000000,
0x1000000:0x4010100,
0x1100000:0x10004,
0x1200000:0x10000,
0x1300000:0x4000100,
0x1400000:0x100,
0x1500000:0x4010104,
0x1600000:0x4000004,
0x1700000:0x0,
0x1800000:0x4000104,
0x1900000:0x4000000,
0x1a00000:0x4,
0x1b00000:0x10100,
0x1c00000:0x4010000,
0x1d00000:0x104,
0x1e00000:0x10104,
0x1f00000:0x4010004,
0x1080000:0x4000000,
0x1180000:0x104,
0x1280000:0x4010100,
0x1380000:0x0,
0x1480000:0x10004,
0x1580000:0x4000100,
0x1680000:0x100,
0x1780000:0x4010004,
0x1880000:0x10000,
0x1980000:0x4010104,
0x1a80000:0x10104,
0x1b80000:0x4000004,
0x1c80000:0x4000104,
0x1d80000:0x4010000,
0x1e80000:0x4,
0x1f80000:0x10100},

{
0x0:0x80401000,
0x10000:0x80001040,
0x20000:0x401040,
0x30000:0x80400000,
0x40000:0x0,
0x50000:0x401000,
0x60000:0x80000040,
0x70000:0x400040,
0x80000:0x80000000,
0x90000:0x400000,
0xa0000:0x40,
0xb0000:0x80001000,
0xc0000:0x80400040,
0xd0000:0x1040,
0xe0000:0x1000,
0xf0000:0x80401040,
0x8000:0x80001040,
0x18000:0x40,
0x28000:0x80400040,
0x38000:0x80001000,
0x48000:0x401000,
0x58000:0x80401040,
0x68000:0x0,
0x78000:0x80400000,
0x88000:0x1000,
0x98000:0x80401000,
0xa8000:0x400000,
0xb8000:0x1040,
0xc8000:0x80000000,
0xd8000:0x400040,
0xe8000:0x401040,
0xf8000:0x80000040,
0x100000:0x400040,
0x110000:0x401000,
0x120000:0x80000040,
0x130000:0x0,
0x140000:0x1040,
0x150000:0x80400040,
0x160000:0x80401000,
0x170000:0x80001040,
0x180000:0x80401040,
0x190000:0x80000000,
0x1a0000:0x80400000,
0x1b0000:0x401040,
0x1c0000:0x80001000,
0x1d0000:0x400000,
0x1e0000:0x40,
0x1f0000:0x1000,
0x108000:0x80400000,
0x118000:0x80401040,
0x128000:0x0,
0x138000:0x401000,
0x148000:0x400040,
0x158000:0x80000000,
0x168000:0x80001040,
0x178000:0x40,
0x188000:0x80000040,
0x198000:0x1000,
0x1a8000:0x80001000,
0x1b8000:0x80400040,
0x1c8000:0x1040,
0x1d8000:0x80401000,
0x1e8000:0x400000,
0x1f8000:0x401040},

{
0x0:0x80,
0x1000:0x1040000,
0x2000:0x40000,
0x3000:0x20000000,
0x4000:0x20040080,
0x5000:0x1000080,
0x6000:0x21000080,
0x7000:0x40080,
0x8000:0x1000000,
0x9000:0x20040000,
0xa000:0x20000080,
0xb000:0x21040080,
0xc000:0x21040000,
0xd000:0x0,
0xe000:0x1040080,
0xf000:0x21000000,
0x800:0x1040080,
0x1800:0x21000080,
0x2800:0x80,
0x3800:0x1040000,
0x4800:0x40000,
0x5800:0x20040080,
0x6800:0x21040000,
0x7800:0x20000000,
0x8800:0x20040000,
0x9800:0x0,
0xa800:0x21040080,
0xb800:0x1000080,
0xc800:0x20000080,
0xd800:0x21000000,
0xe800:0x1000000,
0xf800:0x40080,
0x10000:0x40000,
0x11000:0x80,
0x12000:0x20000000,
0x13000:0x21000080,
0x14000:0x1000080,
0x15000:0x21040000,
0x16000:0x20040080,
0x17000:0x1000000,
0x18000:0x21040080,
0x19000:0x21000000,
0x1a000:0x1040000,
0x1b000:0x20040000,
0x1c000:0x40080,
0x1d000:0x20000080,
0x1e000:0x0,
0x1f000:0x1040080,
0x10800:0x21000080,
0x11800:0x1000000,
0x12800:0x1040000,
0x13800:0x20040080,
0x14800:0x20000000,
0x15800:0x1040080,
0x16800:0x80,
0x17800:0x21040000,
0x18800:0x40080,
0x19800:0x21040080,
0x1a800:0x0,
0x1b800:0x21000000,
0x1c800:0x1000080,
0x1d800:0x40000,
0x1e800:0x20040000,
0x1f800:0x20000080},

{
0x0:0x10000008,
0x100:0x2000,
0x200:0x10200000,
0x300:0x10202008,
0x400:0x10002000,
0x500:0x200000,
0x600:0x200008,
0x700:0x10000000,
0x800:0x0,
0x900:0x10002008,
0xa00:0x202000,
0xb00:0x8,
0xc00:0x10200008,
0xd00:0x202008,
0xe00:0x2008,
0xf00:0x10202000,
0x80:0x10200000,
0x180:0x10202008,
0x280:0x8,
0x380:0x200000,
0x480:0x202008,
0x580:0x10000008,
0x680:0x10002000,
0x780:0x2008,
0x880:0x200008,
0x980:0x2000,
0xa80:0x10002008,
0xb80:0x10200008,
0xc80:0x0,
0xd80:0x10202000,
0xe80:0x202000,
0xf80:0x10000000,
0x1000:0x10002000,
0x1100:0x10200008,
0x1200:0x10202008,
0x1300:0x2008,
0x1400:0x200000,
0x1500:0x10000000,
0x1600:0x10000008,
0x1700:0x202000,
0x1800:0x202008,
0x1900:0x0,
0x1a00:0x8,
0x1b00:0x10200000,
0x1c00:0x2000,
0x1d00:0x10002008,
0x1e00:0x10202000,
0x1f00:0x200008,
0x1080:0x8,
0x1180:0x202000,
0x1280:0x200000,
0x1380:0x10000008,
0x1480:0x10002000,
0x1580:0x2008,
0x1680:0x10202008,
0x1780:0x10200000,
0x1880:0x10202000,
0x1980:0x10200008,
0x1a80:0x2000,
0x1b80:0x202008,
0x1c80:0x200008,
0x1d80:0x0,
0x1e80:0x10000000,
0x1f80:0x10002008},

{
0x0:0x100000,
0x10:0x2000401,
0x20:0x400,
0x30:0x100401,
0x40:0x2100401,
0x50:0x0,
0x60:0x1,
0x70:0x2100001,
0x80:0x2000400,
0x90:0x100001,
0xa0:0x2000001,
0xb0:0x2100400,
0xc0:0x2100000,
0xd0:0x401,
0xe0:0x100400,
0xf0:0x2000000,
0x8:0x2100001,
0x18:0x0,
0x28:0x2000401,
0x38:0x2100400,
0x48:0x100000,
0x58:0x2000001,
0x68:0x2000000,
0x78:0x401,
0x88:0x100401,
0x98:0x2000400,
0xa8:0x2100000,
0xb8:0x100001,
0xc8:0x400,
0xd8:0x2100401,
0xe8:0x1,
0xf8:0x100400,
0x100:0x2000000,
0x110:0x100000,
0x120:0x2000401,
0x130:0x2100001,
0x140:0x100001,
0x150:0x2000400,
0x160:0x2100400,
0x170:0x100401,
0x180:0x401,
0x190:0x2100401,
0x1a0:0x100400,
0x1b0:0x1,
0x1c0:0x0,
0x1d0:0x2100000,
0x1e0:0x2000001,
0x1f0:0x400,
0x108:0x100400,
0x118:0x2000401,
0x128:0x2100001,
0x138:0x1,
0x148:0x2000000,
0x158:0x100000,
0x168:0x401,
0x178:0x2100400,
0x188:0x2000001,
0x198:0x2100000,
0x1a8:0x0,
0x1b8:0x2100401,
0x1c8:0x100401,
0x1d8:0x400,
0x1e8:0x2000400,
0x1f8:0x100001},

{
0x0:0x8000820,
0x1:0x20000,
0x2:0x8000000,
0x3:0x20,
0x4:0x20020,
0x5:0x8020820,
0x6:0x8020800,
0x7:0x800,
0x8:0x8020000,
0x9:0x8000800,
0xa:0x20800,
0xb:0x8020020,
0xc:0x820,
0xd:0x0,
0xe:0x8000020,
0xf:0x20820,
0x80000000:0x800,
0x80000001:0x8020820,
0x80000002:0x8000820,
0x80000003:0x8000000,
0x80000004:0x8020000,
0x80000005:0x20800,
0x80000006:0x20820,
0x80000007:0x20,
0x80000008:0x8000020,
0x80000009:0x820,
0x8000000a:0x20020,
0x8000000b:0x8020800,
0x8000000c:0x0,
0x8000000d:0x8020020,
0x8000000e:0x8000800,
0x8000000f:0x20000,
0x10:0x20820,
0x11:0x8020800,
0x12:0x20,
0x13:0x800,
0x14:0x8000800,
0x15:0x8000020,
0x16:0x8020020,
0x17:0x20000,
0x18:0x0,
0x19:0x20020,
0x1a:0x8020000,
0x1b:0x8000820,
0x1c:0x8020820,
0x1d:0x20800,
0x1e:0x820,
0x1f:0x8000000,
0x80000010:0x20000,
0x80000011:0x800,
0x80000012:0x8020020,
0x80000013:0x20820,
0x80000014:0x20,
0x80000015:0x8020000,
0x80000016:0x8000000,
0x80000017:0x8000820,
0x80000018:0x8020820,
0x80000019:0x8000020,
0x8000001a:0x8000800,
0x8000001b:0x0,
0x8000001c:0x20800,
0x8000001d:0x820,
0x8000001e:0x20020,
0x8000001f:0x8020800}];




var SBOX_MASK=[
0xf8000001,0x1f800000,0x01f80000,0x001f8000,
0x0001f800,0x00001f80,0x000001f8,0x8000001f];





var DES=C_algo.DES=BlockCipher.extend({
_doReset:function(){

var key=this._key;
var keyWords=key.words;


var keyBits=[];
for(var i=0;i<56;i++){
var keyBitPos=PC1[i]-1;
keyBits[i]=keyWords[keyBitPos>>>5]>>>31-keyBitPos%32&1;}



var subKeys=this._subKeys=[];
for(var nSubKey=0;nSubKey<16;nSubKey++){

var subKey=subKeys[nSubKey]=[];


var bitShift=BIT_SHIFTS[nSubKey];


for(var i=0;i<24;i++){

subKey[i/6|0]|=keyBits[(PC2[i]-1+bitShift)%28]<<31-i%6;


subKey[4+(i/6|0)]|=keyBits[28+(PC2[i+24]-1+bitShift)%28]<<31-i%6;}





subKey[0]=subKey[0]<<1|subKey[0]>>>31;
for(var i=1;i<7;i++){
subKey[i]=subKey[i]>>>(i-1)*4+3;}

subKey[7]=subKey[7]<<5|subKey[7]>>>27;}



var invSubKeys=this._invSubKeys=[];
for(var i=0;i<16;i++){
invSubKeys[i]=subKeys[15-i];}},



encryptBlock:function(M,offset){
this._doCryptBlock(M,offset,this._subKeys);},


decryptBlock:function(M,offset){
this._doCryptBlock(M,offset,this._invSubKeys);},


_doCryptBlock:function(M,offset,subKeys){

this._lBlock=M[offset];
this._rBlock=M[offset+1];


exchangeLR.call(this,4,0x0f0f0f0f);
exchangeLR.call(this,16,0x0000ffff);
exchangeRL.call(this,2,0x33333333);
exchangeRL.call(this,8,0x00ff00ff);
exchangeLR.call(this,1,0x55555555);


for(var round=0;round<16;round++){

var subKey=subKeys[round];
var lBlock=this._lBlock;
var rBlock=this._rBlock;


var f=0;
for(var i=0;i<8;i++){
f|=SBOX_P[i][((rBlock^subKey[i])&SBOX_MASK[i])>>>0];}

this._lBlock=rBlock;
this._rBlock=lBlock^f;}



var t=this._lBlock;
this._lBlock=this._rBlock;
this._rBlock=t;


exchangeLR.call(this,1,0x55555555);
exchangeRL.call(this,8,0x00ff00ff);
exchangeRL.call(this,2,0x33333333);
exchangeLR.call(this,16,0x0000ffff);
exchangeLR.call(this,4,0x0f0f0f0f);


M[offset]=this._lBlock;
M[offset+1]=this._rBlock;},


keySize:64/32,

ivSize:64/32,

blockSize:64/32});



function exchangeLR(offset,mask){
var t=(this._lBlock>>>offset^this._rBlock)&mask;
this._rBlock^=t;
this._lBlock^=t<<offset;}


function exchangeRL(offset,mask){
var t=(this._rBlock>>>offset^this._lBlock)&mask;
this._lBlock^=t;
this._rBlock^=t<<offset;}










C.DES=BlockCipher._createHelper(DES);




var TripleDES=C_algo.TripleDES=BlockCipher.extend({
_doReset:function(){

var key=this._key;
var keyWords=key.words;


this._des1=DES.createEncryptor(WordArray.create(keyWords.slice(0,2)));
this._des2=DES.createEncryptor(WordArray.create(keyWords.slice(2,4)));
this._des3=DES.createEncryptor(WordArray.create(keyWords.slice(4,6)));},


encryptBlock:function(M,offset){
this._des1.encryptBlock(M,offset);
this._des2.decryptBlock(M,offset);
this._des3.encryptBlock(M,offset);},


decryptBlock:function(M,offset){
this._des3.decryptBlock(M,offset);
this._des2.encryptBlock(M,offset);
this._des1.decryptBlock(M,offset);},


keySize:192/32,

ivSize:64/32,

blockSize:64/32});










C.TripleDES=BlockCipher._createHelper(TripleDES);})();



return CryptoJS.TripleDES;});
});
__d('crypto-js/rc4.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/enc-base64.js"),require("crypto-js/md5.js"),require("crypto-js/evpkdf.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var StreamCipher=C_lib.StreamCipher;
var C_algo=C.algo;




var RC4=C_algo.RC4=StreamCipher.extend({
_doReset:function(){

var key=this._key;
var keyWords=key.words;
var keySigBytes=key.sigBytes;


var S=this._S=[];
for(var i=0;i<256;i++){
S[i]=i;}



for(var i=0,j=0;i<256;i++){
var keyByteIndex=i%keySigBytes;
var keyByte=keyWords[keyByteIndex>>>2]>>>24-keyByteIndex%4*8&0xff;

j=(j+S[i]+keyByte)%256;


var t=S[i];
S[i]=S[j];
S[j]=t;}



this._i=this._j=0;},


_doProcessBlock:function(M,offset){
M[offset]^=generateKeystreamWord.call(this);},


keySize:256/32,

ivSize:0});


function generateKeystreamWord(){

var S=this._S;
var i=this._i;
var j=this._j;


var keystreamWord=0;
for(var n=0;n<4;n++){
i=(i+1)%256;
j=(j+S[i])%256;


var t=S[i];
S[i]=S[j];
S[j]=t;

keystreamWord|=S[(S[i]+S[j])%256]<<24-n*8;}



this._i=i;
this._j=j;

return keystreamWord;}










C.RC4=StreamCipher._createHelper(RC4);




var RC4Drop=C_algo.RC4Drop=RC4.extend({





cfg:RC4.cfg.extend({
drop:192}),


_doReset:function(){
RC4._doReset.call(this);


for(var i=this.cfg.drop;i>0;i--){
generateKeystreamWord.call(this);}}});












C.RC4Drop=StreamCipher._createHelper(RC4Drop);})();



return CryptoJS.RC4;});
});
__d('crypto-js/rabbit.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/enc-base64.js"),require("crypto-js/md5.js"),require("crypto-js/evpkdf.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var StreamCipher=C_lib.StreamCipher;
var C_algo=C.algo;


var S=[];
var C_=[];
var G=[];




var Rabbit=C_algo.Rabbit=StreamCipher.extend({
_doReset:function(){

var K=this._key.words;
var iv=this.cfg.iv;


for(var i=0;i<4;i++){
K[i]=(K[i]<<8|K[i]>>>24)&0x00ff00ff|
(K[i]<<24|K[i]>>>8)&0xff00ff00;}



var X=this._X=[
K[0],K[3]<<16|K[2]>>>16,
K[1],K[0]<<16|K[3]>>>16,
K[2],K[1]<<16|K[0]>>>16,
K[3],K[2]<<16|K[1]>>>16];



var C=this._C=[
K[2]<<16|K[2]>>>16,K[0]&0xffff0000|K[1]&0x0000ffff,
K[3]<<16|K[3]>>>16,K[1]&0xffff0000|K[2]&0x0000ffff,
K[0]<<16|K[0]>>>16,K[2]&0xffff0000|K[3]&0x0000ffff,
K[1]<<16|K[1]>>>16,K[3]&0xffff0000|K[0]&0x0000ffff];



this._b=0;


for(var i=0;i<4;i++){
nextState.call(this);}



for(var i=0;i<8;i++){
C[i]^=X[i+4&7];}



if(iv){

var IV=iv.words;
var IV_0=IV[0];
var IV_1=IV[1];


var i0=(IV_0<<8|IV_0>>>24)&0x00ff00ff|(IV_0<<24|IV_0>>>8)&0xff00ff00;
var i2=(IV_1<<8|IV_1>>>24)&0x00ff00ff|(IV_1<<24|IV_1>>>8)&0xff00ff00;
var i1=i0>>>16|i2&0xffff0000;
var i3=i2<<16|i0&0x0000ffff;


C[0]^=i0;
C[1]^=i1;
C[2]^=i2;
C[3]^=i3;
C[4]^=i0;
C[5]^=i1;
C[6]^=i2;
C[7]^=i3;


for(var i=0;i<4;i++){
nextState.call(this);}}},




_doProcessBlock:function(M,offset){

var X=this._X;


nextState.call(this);


S[0]=X[0]^X[5]>>>16^X[3]<<16;
S[1]=X[2]^X[7]>>>16^X[5]<<16;
S[2]=X[4]^X[1]>>>16^X[7]<<16;
S[3]=X[6]^X[3]>>>16^X[1]<<16;

for(var i=0;i<4;i++){

S[i]=(S[i]<<8|S[i]>>>24)&0x00ff00ff|
(S[i]<<24|S[i]>>>8)&0xff00ff00;


M[offset+i]^=S[i];}},



blockSize:128/32,

ivSize:64/32});


function nextState(){

var X=this._X;
var C=this._C;


for(var i=0;i<8;i++){
C_[i]=C[i];}



C[0]=C[0]+0x4d34d34d+this._b|0;
C[1]=C[1]+0xd34d34d3+(C[0]>>>0<C_[0]>>>0?1:0)|0;
C[2]=C[2]+0x34d34d34+(C[1]>>>0<C_[1]>>>0?1:0)|0;
C[3]=C[3]+0x4d34d34d+(C[2]>>>0<C_[2]>>>0?1:0)|0;
C[4]=C[4]+0xd34d34d3+(C[3]>>>0<C_[3]>>>0?1:0)|0;
C[5]=C[5]+0x34d34d34+(C[4]>>>0<C_[4]>>>0?1:0)|0;
C[6]=C[6]+0x4d34d34d+(C[5]>>>0<C_[5]>>>0?1:0)|0;
C[7]=C[7]+0xd34d34d3+(C[6]>>>0<C_[6]>>>0?1:0)|0;
this._b=C[7]>>>0<C_[7]>>>0?1:0;


for(var i=0;i<8;i++){
var gx=X[i]+C[i];


var ga=gx&0xffff;
var gb=gx>>>16;


var gh=((ga*ga>>>17)+ga*gb>>>15)+gb*gb;
var gl=((gx&0xffff0000)*gx|0)+((gx&0x0000ffff)*gx|0);


G[i]=gh^gl;}



X[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0;
X[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0;
X[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0;
X[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0;
X[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0;
X[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0;
X[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0;
X[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0;}










C.Rabbit=StreamCipher._createHelper(Rabbit);})();



return CryptoJS.Rabbit;});
});
__d('crypto-js/rabbit-legacy.js',function(global, require, module, exports) {  ;(function(root,factory,undef){
if(typeof exports==="object"){

module.exports=exports=factory(require("crypto-js/core.js"),require("crypto-js/enc-base64.js"),require("crypto-js/md5.js"),require("crypto-js/evpkdf.js"),require("crypto-js/cipher-core.js"));}else 

if(typeof define==="function"&&define.amd){

define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],factory);}else 

{

factory(root.CryptoJS);}})(

this,function(CryptoJS){

(function(){

var C=CryptoJS;
var C_lib=C.lib;
var StreamCipher=C_lib.StreamCipher;
var C_algo=C.algo;


var S=[];
var C_=[];
var G=[];








var RabbitLegacy=C_algo.RabbitLegacy=StreamCipher.extend({
_doReset:function(){

var K=this._key.words;
var iv=this.cfg.iv;


var X=this._X=[
K[0],K[3]<<16|K[2]>>>16,
K[1],K[0]<<16|K[3]>>>16,
K[2],K[1]<<16|K[0]>>>16,
K[3],K[2]<<16|K[1]>>>16];



var C=this._C=[
K[2]<<16|K[2]>>>16,K[0]&0xffff0000|K[1]&0x0000ffff,
K[3]<<16|K[3]>>>16,K[1]&0xffff0000|K[2]&0x0000ffff,
K[0]<<16|K[0]>>>16,K[2]&0xffff0000|K[3]&0x0000ffff,
K[1]<<16|K[1]>>>16,K[3]&0xffff0000|K[0]&0x0000ffff];



this._b=0;


for(var i=0;i<4;i++){
nextState.call(this);}



for(var i=0;i<8;i++){
C[i]^=X[i+4&7];}



if(iv){

var IV=iv.words;
var IV_0=IV[0];
var IV_1=IV[1];


var i0=(IV_0<<8|IV_0>>>24)&0x00ff00ff|(IV_0<<24|IV_0>>>8)&0xff00ff00;
var i2=(IV_1<<8|IV_1>>>24)&0x00ff00ff|(IV_1<<24|IV_1>>>8)&0xff00ff00;
var i1=i0>>>16|i2&0xffff0000;
var i3=i2<<16|i0&0x0000ffff;


C[0]^=i0;
C[1]^=i1;
C[2]^=i2;
C[3]^=i3;
C[4]^=i0;
C[5]^=i1;
C[6]^=i2;
C[7]^=i3;


for(var i=0;i<4;i++){
nextState.call(this);}}},




_doProcessBlock:function(M,offset){

var X=this._X;


nextState.call(this);


S[0]=X[0]^X[5]>>>16^X[3]<<16;
S[1]=X[2]^X[7]>>>16^X[5]<<16;
S[2]=X[4]^X[1]>>>16^X[7]<<16;
S[3]=X[6]^X[3]>>>16^X[1]<<16;

for(var i=0;i<4;i++){

S[i]=(S[i]<<8|S[i]>>>24)&0x00ff00ff|
(S[i]<<24|S[i]>>>8)&0xff00ff00;


M[offset+i]^=S[i];}},



blockSize:128/32,

ivSize:64/32});


function nextState(){

var X=this._X;
var C=this._C;


for(var i=0;i<8;i++){
C_[i]=C[i];}



C[0]=C[0]+0x4d34d34d+this._b|0;
C[1]=C[1]+0xd34d34d3+(C[0]>>>0<C_[0]>>>0?1:0)|0;
C[2]=C[2]+0x34d34d34+(C[1]>>>0<C_[1]>>>0?1:0)|0;
C[3]=C[3]+0x4d34d34d+(C[2]>>>0<C_[2]>>>0?1:0)|0;
C[4]=C[4]+0xd34d34d3+(C[3]>>>0<C_[3]>>>0?1:0)|0;
C[5]=C[5]+0x34d34d34+(C[4]>>>0<C_[4]>>>0?1:0)|0;
C[6]=C[6]+0x4d34d34d+(C[5]>>>0<C_[5]>>>0?1:0)|0;
C[7]=C[7]+0xd34d34d3+(C[6]>>>0<C_[6]>>>0?1:0)|0;
this._b=C[7]>>>0<C_[7]>>>0?1:0;


for(var i=0;i<8;i++){
var gx=X[i]+C[i];


var ga=gx&0xffff;
var gb=gx>>>16;


var gh=((ga*ga>>>17)+ga*gb>>>15)+gb*gb;
var gl=((gx&0xffff0000)*gx|0)+((gx&0x0000ffff)*gx|0);


G[i]=gh^gl;}



X[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0;
X[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0;
X[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0;
X[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0;
X[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0;
X[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0;
X[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0;
X[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0;}










C.RabbitLegacy=StreamCipher._createHelper(RabbitLegacy);})();



return CryptoJS.RabbitLegacy;});
});
__d('forerunnerdb/js/lib/CollectionGroup.js',function(global, require, module, exports) {  "use strict";


var Shared,
Db,
DbInit,
Collection;

Shared=require('forerunnerdb/js/lib/Shared.js');








var CollectionGroup=function(){
this.init.apply(this,arguments);};


CollectionGroup.prototype.init=function(name){
var self=this;

self._name=name;
self._data=new Collection('__FDB__cg_data_'+self._name);
self._collections=[];
self._view=[];};


Shared.addModule('CollectionGroup',CollectionGroup);
Shared.mixin(CollectionGroup.prototype,'Mixin.Common');
Shared.mixin(CollectionGroup.prototype,'Mixin.ChainReactor');
Shared.mixin(CollectionGroup.prototype,'Mixin.Constants');
Shared.mixin(CollectionGroup.prototype,'Mixin.Triggers');
Shared.mixin(CollectionGroup.prototype,'Mixin.Tags');

Collection=require('forerunnerdb/js/lib/Collection.js');
Db=Shared.modules.Db;
DbInit=Shared.modules.Db.prototype.init;

CollectionGroup.prototype.on=function(){
this._data.on.apply(this._data,arguments);};


CollectionGroup.prototype.off=function(){
this._data.off.apply(this._data,arguments);};


CollectionGroup.prototype.emit=function(){
this._data.emit.apply(this._data,arguments);};







CollectionGroup.prototype.primaryKey=function(keyName){
if(keyName!==undefined){
this._primaryKey=keyName;
return this;}


return this._primaryKey;};







Shared.synthesize(CollectionGroup.prototype,'state');






Shared.synthesize(CollectionGroup.prototype,'db');






Shared.synthesize(CollectionGroup.prototype,'name');

CollectionGroup.prototype.addCollection=function(collection){
if(collection){
if(this._collections.indexOf(collection)===-1){



if(this._collections.length){
if(this._primaryKey!==collection.primaryKey()){
throw this.logIdentifier()+' All collections in a collection group must have the same primary key!';}}else 

{

this.primaryKey(collection.primaryKey());}



this._collections.push(collection);
collection._groups=collection._groups||[];
collection._groups.push(this);
collection.chain(this);


collection.on('drop',function(){

if(collection._groups&&collection._groups.length){
var groupArr=[],
i;



for(i=0;i<collection._groups.length;i++){
groupArr.push(collection._groups[i]);}



for(i=0;i<groupArr.length;i++){
collection._groups[i].removeCollection(collection);}}



delete collection._groups;});



this._data.insert(collection.find());}}



return this;};


CollectionGroup.prototype.removeCollection=function(collection){
if(collection){
var collectionIndex=this._collections.indexOf(collection),
groupIndex;

if(collectionIndex!==-1){
collection.unChain(this);
this._collections.splice(collectionIndex,1);

collection._groups=collection._groups||[];
groupIndex=collection._groups.indexOf(this);

if(groupIndex!==-1){
collection._groups.splice(groupIndex,1);}


collection.off('drop');}


if(this._collections.length===0){

delete this._primaryKey;}}



return this;};


CollectionGroup.prototype._chainHandler=function(chainPacket){

switch(chainPacket.type){
case 'setData':

chainPacket.data=this.decouple(chainPacket.data);


this._data.remove(chainPacket.options.oldData);


this._data.insert(chainPacket.data);
break;

case 'insert':

chainPacket.data=this.decouple(chainPacket.data);


this._data.insert(chainPacket.data);
break;

case 'update':

this._data.update(chainPacket.data.query,chainPacket.data.update,chainPacket.options);
break;

case 'remove':
this._data.remove(chainPacket.data.query,chainPacket.options);
break;

default:
break;}};



CollectionGroup.prototype.insert=function(){
this._collectionsRun('insert',arguments);};


CollectionGroup.prototype.update=function(){
this._collectionsRun('update',arguments);};


CollectionGroup.prototype.updateById=function(){
this._collectionsRun('updateById',arguments);};


CollectionGroup.prototype.remove=function(){
this._collectionsRun('remove',arguments);};


CollectionGroup.prototype._collectionsRun=function(type,args){
for(var i=0;i<this._collections.length;i++){
this._collections[i][type].apply(this._collections[i],args);}};



CollectionGroup.prototype.find=function(query,options){
return this._data.find(query,options);};






CollectionGroup.prototype.removeById=function(id){

for(var i=0;i<this._collections.length;i++){
this._collections[i].removeById(id);}};











CollectionGroup.prototype.subset=function(query,options){
var result=this.find(query,options);

return new Collection().
subsetOf(this).
primaryKey(this._primaryKey).
setData(result);};






CollectionGroup.prototype.drop=function(callback){
if(!this.isDropped()){
var i,
collArr,
viewArr;

if(this._debug){
console.log(this.logIdentifier()+' Dropping');}


this._state='dropped';

if(this._collections&&this._collections.length){
collArr=[].concat(this._collections);

for(i=0;i<collArr.length;i++){
this.removeCollection(collArr[i]);}}



if(this._view&&this._view.length){
viewArr=[].concat(this._view);

for(i=0;i<viewArr.length;i++){
this._removeView(viewArr[i]);}}



this.emit('drop',this);

if(callback){callback(false,true);}}


return true;};



Db.prototype.init=function(){
this._collectionGroup={};
DbInit.apply(this,arguments);};


Db.prototype.collectionGroup=function(collectionGroupName){
if(collectionGroupName){

if(collectionGroupName instanceof CollectionGroup){
return collectionGroupName;}


this._collectionGroup[collectionGroupName]=this._collectionGroup[collectionGroupName]||new CollectionGroup(collectionGroupName).db(this);
return this._collectionGroup[collectionGroupName];}else 
{

return this._collectionGroup;}};








Db.prototype.collectionGroups=function(){
var arr=[],
i;

for(i in this._collectionGroup){
if(this._collectionGroup.hasOwnProperty(i)){
arr.push({
name:i});}}




return arr;};


module.exports=CollectionGroup;
});
__d('XenformaMobileSync/mobile_utils.js',function(global, require, module, exports) {  var async=require('async/lib/async.js');








function for_each_async(array,fn,options,state,callback){
if(!array){
return callback();}



var args={
array:array,
func:fn,
options:options};


args.options=set_options(args.options,{
parallel:false,
skip_nulls:false},
true);

console.log("foe each");
if(!args.options.parallel){

return for_each_async_series(args,state,callback);}else 

{
return for_each_async_parallel(args,state,callback);}}








function for_each_async_series(args,state,callback){
var array=args.array;
var fn=args.func;
var options=set_options(args.options,{
skip_nulls:false},
true);

var function_array=[];
var error_state={};

if(!Array.isArray(array)){
var dictionary=array;
array=null;
var func_maker=function(_field_name){
return function(cb){
var args={
data_object:dictionary[_field_name],
setter_function:function(new_value){
dictionary[_field_name]=new_value;}};


var err=error_state.err;
if(err){
return callback(err);}

if(dictionary[_field_name]==null&&options.skip_nulls){
return cb();}else 

{
return fn(err,args,state,function(_err){
error_state.err=_err;
cb();});}};};





for(var field_name in dictionary){
if(dictionary[field_name]&&typeof dictionary[field_name]!="function"||!dictionary[field_name]){
function_array.push(func_maker(field_name));}}}else 



{
var func_maker=function(index){
return function(cb){
var args={
data_object:array[index],
setter_function:function(new_value){
array[index]=new_value;},

getter_function:function(){
return array[index];}};


var err=error_state.err;
if(err){
return callback(err);}

if(array[index]==null&&options.skip_nulls){
return cb();}else 

{
return fn(err,args,state,function(_err){
error_state.err=_err;
return cb();});}};};




for(var i=0;i<array.length;i++){
function_array.push(func_maker(i));}}



if(function_array.length==0){
return callback();}


return async.series(function_array,function(){
return callback(error_state.err);});}









function for_each_async_parallel(args,state,callback){
var array=args.array;
var fn=args.func;
var options=set_options(args.options,{
skip_nulls:false},
true);

var function_array=[];
var func_results;

if(!Array.isArray(array)){
func_results={};
var dictionary=array;
array=null;
var func_maker=function(_field_name){
return function(cb){
var args={
data_object:dictionary[_field_name],
setter_function:function(new_value){
dictionary[_field_name]=new_value;}};


var err=func_results[_field_name];

if(dictionary[_field_name]==null&&options.skip_nulls){
return cb();}else 

{
return fn(err,args,state,function(_err){
func_results[_field_name]=_err;
return cb();});}};};




for(var field_name in dictionary){
if(dictionary[field_name]&&typeof dictionary[field_name]!="function"||!dictionary[field_name]){
function_array.push(func_maker(field_name));}}}else 



{
func_results=[];
var func_maker=function(index){
return function(cb){
var args={
data_object:array[index],
setter_function:function(new_value){
array[index]=new_value;},

getter_function:function(){
return array[index];}};


var err=func_results[index];

if(array[index]==null&&options.skip_nulls){
return cb();}else 

{
return fn(err,args,state,function(_err){
func_results[index]=_err;
return cb();});}};};




for(var i=0;i<array.length;i++){
function_array.push(func_maker(i));}}



return async.parallel(function_array,function(){
var error_arr=[];
for(field_name in func_results){
if(func_results[field_name]){
error_arr.push(func_results[field_name]);}}


if(error_arr.length>0){
if(error_arr.length==1){
return callback([error_arr[0]]);}

var error_message_string="";
for(var i=0;i<error_arr.length;i++){
error_message_string=error_message_string+"<br />"+"{"+i+"}";}}



return callback();});}




function set_options(options,default_options,shallow_extend){
if(!options){
options={};}

if(shallow_extend){
for(var field_name in default_options){
if(options[field_name]==null){
options[field_name]=default_options[field_name];}}}else 



{
extend_object(options,default_options);}

return options;}












function extend_object(base_object,extender_object,options){
if(base_object===extender_object){
return base_object;}

if(!base_object){
if(!is_object_or_array(extender_object)){
return extender_object;}

if(Array.isArray(extender_object)){
base_object=[];}else 

{
base_object={};}}



options=set_options(options,{
shallow_copy:false,
replace_whole_obj_fields:false,
replace_shallow_fields:false,
ignore_functions:false,
ignore_null_and_undefined:true,
trigger_deletes_on_extender_nulls:false,
extend_arrays:false,
array_match_field:""},
true);
options.set_func_array=[];
var obj_struc_options={include_null:true,include_undefined:true,include_functions:!options.ignore_functions,traverse_arrays:true,mark_object_ref_duplicates:true};
var obj_structure=extract_object_structure(extender_object,obj_struc_options);
extend_object_recursive_helper(obj_structure,base_object,extender_object,options,obj_struc_options.obj_ref_arr);

for(var i=0;i<options.set_func_array.length;i++){
options.set_func_array[i]();}


return base_object;}



function extend_object_recursive_helper(extend_object_structure,base_object,extender_object,options,obj_ref_arr){
if(!extend_object_structure||!base_object){
return;}


if(base_object===extender_object){
return base_object;}


var my_index=-1;
if(extender_object&&is_object_or_array(extender_object)){
my_index=obj_ref_arr.indexOf(extender_object);}

if(my_index>=0){
obj_ref_arr[my_index]=base_object;}


for(var field_name in extend_object_structure){
if(extend_object_structure[field_name]&&typeof extend_object_structure[field_name]=="number"){

options.set_func_array.push(function(f_name){
return function(){
if(base_object[f_name]==null||options.replace_whole_obj_fields){
base_object[f_name]=obj_ref_arr[extend_object_structure[f_name]];}else 

if(options.replace_shallow_fields){
var temp=options.set_func_array;
delete options.set_func_array;
extend_object(base_object[f_name],obj_ref_arr[extend_object_structure[f_name]]);
options.set_func_array=temp;}};}(


field_name));}else 

{
if(extender_object[field_name]==null){
if(options.trigger_deletes_on_extender_nulls){
delete base_object[field_name];}

if(!options.ignore_null_and_undefined){
base_object[field_name]=extender_object[field_name];}}else 


if(options.ignore_functions&&typeof extender_object[field_name]=="function"){}else 


if(base_object[field_name]==null||options.replace_whole_obj_fields&&!options.shallow_copy){
if(options.shallow_copy){
base_object[field_name]=extender_object[field_name];}else 

if(Array.isArray(extend_object_structure[field_name])){
base_object[field_name]=[];
extend_object_recursive_helper(extend_object_structure[field_name],base_object[field_name],extender_object[field_name],options,obj_ref_arr);}else 

if(is_object_or_array(extend_object_structure[field_name])){
base_object[field_name]={};
extend_object_recursive_helper(extend_object_structure[field_name],base_object[field_name],extender_object[field_name],options,obj_ref_arr);}else 

{
base_object[field_name]=extender_object[field_name];}}else 


if(options.replace_whole_obj_fields&&options.shallow_copy){
if(is_object_or_array(extender_object[field_name])){
var my_index=obj_ref_arr.indexOf(extend_object_structure);
if(my_index>=0){
obj_ref_arr[my_index]=extender_object[field_name];}}


base_object[field_name]=extender_object[field_name];}else 

if(options.replace_shallow_fields){
if(!is_object_or_array(base_object[field_name])||!is_object_or_array(extender_object[field_name])){
base_object[field_name]=extender_object[field_name];}else 

{
extend_object_recursive_helper(extend_object_structure[field_name],base_object[field_name],extender_object[field_name],options,obj_ref_arr);}}else 


if(is_object_or_array(extender_object[field_name])){
if(Array.isArray(base_object[field_name])){
if(options.extend_arrays&&Array.isArray(base_object[field_name])&&Array.isArray(extender_object[field_name])){
extend_list(base_object[field_name],extender_object[field_name],options.array_match_field);}}else 


{
extend_object_recursive_helper(extend_object_structure[field_name],base_object[field_name],extender_object[field_name],options,obj_ref_arr);}}}}




return base_object;}




function extend_list(base_arr,extend_arr,array_match_field){
if(!base_arr){base_arr=[];}
if(!extend_arr||!Array.isArray(base_arr)||!Array.isArray(extend_arr)){
return;}

for(var i=0;i<extend_arr.length;i++){
if(array_match_field&&array_match_field.length>0){
var extend_arr_value=extend_arr[i][array_match_field];
if(extend_arr_value){
var found=false;
for(var j=0;j<base_arr.length;j++){
if(base_arr[j][array_match_field]==extend_arr_value){
found=true;
for(var key in extend_arr[i]){
if(base_arr[j][key]==undefined){
base_arr[j][key]=extend_arr[i][key];}}


break;}}



if(!found){
if(base_arr.indexOf(extend_arr[i])==-1){
base_arr.push(extend_arr[i]);}}}else 



{
if(base_arr.indexOf(extend_arr[i])==-1){
base_arr.push(extend_arr[i]);}}}else 



{
if(base_arr.indexOf(extend_arr[i])==-1){
base_arr.push(extend_arr[i]);}}}



return base_arr;}


function is_object_or_array(obj){
var string_val=Object.prototype.toString.call(obj);
return string_val==='[object Array]'||string_val==='[object Object]';}











function extract_object_structure(object,options){
var obj_ref_arr=[];
if(object==null||!is_object_or_array(object)){
if(options.mark_object_ref_duplicates){
options.obj_ref_arr=obj_ref_arr;}


return object;}

options=set_options(options,{
include_null:false,
include_undefined:false,
include_functions:false,
mark_object_ref_duplicates:false,
traverse_arrays:false,
recursive:true},
true);

obj_ref_arr.push(object);

var copy_obj=Array.isArray(object)?[]:{};

if(Array.isArray(object)){

if(!options.traverse_arrays){
options.recursive=false;}


for(var i=0;i<object.length;i++){
extract_object_structure_helper(object,copy_obj,i,obj_ref_arr,options);}


if(options.mark_object_ref_duplicates){
options.obj_ref_arr=obj_ref_arr;}


return copy_obj;}else 

{
for(var field_name in object){
extract_object_structure_helper(object,copy_obj,field_name,obj_ref_arr,options);}}



if(options.mark_object_ref_duplicates){
options.obj_ref_arr=obj_ref_arr;}


return copy_obj;}



function extract_object_structure_helper(object,copy_obj,prop_name,obj_ref_arr,options){
if(object[prop_name]==null){
if(Array.isArray(object)||object[prop_name]===null&&options.include_null||object[prop_name]===undefined&&options.include_undefined){
copy_obj[prop_name]=true;}

return;}


var prop_type=Object.prototype.toString.call(object[prop_name]);

if(!options.recursive){
if(prop_type=="function"&&options.include_functions||prop_type!="function"){
copy_obj[prop_name]=true;}else 

if(Array.isArray(object)){
copy_obj[prop_name]=null;}

return;}


switch(prop_type){
case "[object Object]":
{
var prop_obj=object[prop_name];
var index_of_ref=obj_ref_arr.indexOf(prop_obj);
if(index_of_ref==-1){
obj_ref_arr.push(prop_obj);
copy_obj[prop_name]={};
for(var field_name in prop_obj){
extract_object_structure_helper(prop_obj,copy_obj[prop_name],field_name,obj_ref_arr,options);}}else 


if(options.mark_object_ref_duplicates){
copy_obj[prop_name]=index_of_ref;}

break;}

case "[object Array]":
{
var prop_obj=object[prop_name];
var index_of_ref=obj_ref_arr.indexOf(prop_obj);
if(index_of_ref==-1){
obj_ref_arr.push(prop_obj);
if(options.traverse_arrays){
copy_obj[prop_name]=[];
for(var i=0;i<prop_obj.length;i++){
extract_object_structure_helper(prop_obj,copy_obj[prop_name],i,obj_ref_arr,options);}}else 


{
copy_obj[prop_name]=true;}}else 


if(options.mark_object_ref_duplicates){
copy_obj[prop_name]=index_of_ref;}

break;}

case "[object Function]":
{
if(options.include_functions){
copy_obj[prop_name]=true;}else 

if(Array.isArray(object)){
copy_obj[prop_name]=null;}

break;}

default:
{
copy_obj[prop_name]=true;
break;}}


return;}


exports.extend_object=extend_object;
exports.for_each_async=for_each_async;
});
__d('async/lib/async.js',function(global, require, module, exports) {  (
function(){

var async={};


var root,previous_async;

root=this;
if(root!=null){
previous_async=root.async;}


async.noConflict=function(){
root.async=previous_async;
return async;};


function only_once(fn){
var called=false;
return function(){
if(called)throw new Error("Callback was already called.");
called=true;
fn.apply(root,arguments);};}





var _each=function(arr,iterator){
if(arr.forEach){
return arr.forEach(iterator);}

for(var i=0;i<arr.length;i+=1){
iterator(arr[i],i,arr);}};



var _map=function(arr,iterator){
if(arr.map){
return arr.map(iterator);}

var results=[];
_each(arr,function(x,i,a){
results.push(iterator(x,i,a));});

return results;};


var _reduce=function(arr,iterator,memo){
if(arr.reduce){
return arr.reduce(iterator,memo);}

_each(arr,function(x,i,a){
memo=iterator(memo,x,i,a);});

return memo;};


var _keys=function(obj){
if(Object.keys){
return Object.keys(obj);}

var keys=[];
for(var k in obj){
if(obj.hasOwnProperty(k)){
keys.push(k);}}


return keys;};





if(typeof process==='undefined'||!process.nextTick){
if(typeof setImmediate==='function'){
async.nextTick=function(fn){

setImmediate(fn);};

async.setImmediate=async.nextTick;}else 

{
async.nextTick=function(fn){
setTimeout(fn,0);};

async.setImmediate=async.nextTick;}}else 


{
async.nextTick=process.nextTick;
if(typeof setImmediate!=='undefined'){
async.setImmediate=function(fn){

setImmediate(fn);};}else 


{
async.setImmediate=async.nextTick;}}



async.each=function(arr,iterator,callback){
callback=callback||function(){};
if(!arr.length){
return callback();}

var completed=0;
_each(arr,function(x){
iterator(x,only_once(function(err){
if(err){
callback(err);
callback=function(){};}else 

{
completed+=1;
if(completed>=arr.length){
callback(null);}}}));});};





async.forEach=async.each;

async.eachSeries=function(arr,iterator,callback){
callback=callback||function(){};
if(!arr.length){
return callback();}

var completed=0;
var iterate=function(){
iterator(arr[completed],function(err){
if(err){
callback(err);
callback=function(){};}else 

{
completed+=1;
if(completed>=arr.length){
callback(null);}else 

{
iterate();}}});};




iterate();};

async.forEachSeries=async.eachSeries;

async.eachLimit=function(arr,limit,iterator,callback){
var fn=_eachLimit(limit);
fn.apply(null,[arr,iterator,callback]);};

async.forEachLimit=async.eachLimit;

var _eachLimit=function(limit){

return function(arr,iterator,callback){
callback=callback||function(){};
if(!arr.length||limit<=0){
return callback();}

var completed=0;
var started=0;
var running=0;

(function replenish(){
if(completed>=arr.length){
return callback();}


while(running<limit&&started<arr.length){
started+=1;
running+=1;
iterator(arr[started-1],function(err){
if(err){
callback(err);
callback=function(){};}else 

{
completed+=1;
running-=1;
if(completed>=arr.length){
callback();}else 

{
replenish();}}});}})();};};









var doParallel=function(fn){
return function(){
var args=Array.prototype.slice.call(arguments);
return fn.apply(null,[async.each].concat(args));};};


var doParallelLimit=function(limit,fn){
return function(){
var args=Array.prototype.slice.call(arguments);
return fn.apply(null,[_eachLimit(limit)].concat(args));};};


var doSeries=function(fn){
return function(){
var args=Array.prototype.slice.call(arguments);
return fn.apply(null,[async.eachSeries].concat(args));};};




var _asyncMap=function(eachfn,arr,iterator,callback){
var results=[];
arr=_map(arr,function(x,i){
return {index:i,value:x};});

eachfn(arr,function(x,callback){
iterator(x.value,function(err,v){
results[x.index]=v;
callback(err);});},

function(err){
callback(err,results);});};


async.map=doParallel(_asyncMap);
async.mapSeries=doSeries(_asyncMap);
async.mapLimit=function(arr,limit,iterator,callback){
return _mapLimit(limit)(arr,iterator,callback);};


var _mapLimit=function(limit){
return doParallelLimit(limit,_asyncMap);};




async.reduce=function(arr,memo,iterator,callback){
async.eachSeries(arr,function(x,callback){
iterator(memo,x,function(err,v){
memo=v;
callback(err);});},

function(err){
callback(err,memo);});};



async.inject=async.reduce;

async.foldl=async.reduce;

async.reduceRight=function(arr,memo,iterator,callback){
var reversed=_map(arr,function(x){
return x;}).
reverse();
async.reduce(reversed,memo,iterator,callback);};


async.foldr=async.reduceRight;

var _filter=function(eachfn,arr,iterator,callback){
var results=[];
arr=_map(arr,function(x,i){
return {index:i,value:x};});

eachfn(arr,function(x,callback){
iterator(x.value,function(v){
if(v){
results.push(x);}

callback();});},

function(err){
callback(_map(results.sort(function(a,b){
return a.index-b.index;}),
function(x){
return x.value;}));});};



async.filter=doParallel(_filter);
async.filterSeries=doSeries(_filter);

async.select=async.filter;
async.selectSeries=async.filterSeries;

var _reject=function(eachfn,arr,iterator,callback){
var results=[];
arr=_map(arr,function(x,i){
return {index:i,value:x};});

eachfn(arr,function(x,callback){
iterator(x.value,function(v){
if(!v){
results.push(x);}

callback();});},

function(err){
callback(_map(results.sort(function(a,b){
return a.index-b.index;}),
function(x){
return x.value;}));});};



async.reject=doParallel(_reject);
async.rejectSeries=doSeries(_reject);

var _detect=function(eachfn,arr,iterator,main_callback){
eachfn(arr,function(x,callback){
iterator(x,function(result){
if(result){
main_callback(x);
main_callback=function(){};}else 

{
callback();}});},


function(err){
main_callback();});};


async.detect=doParallel(_detect);
async.detectSeries=doSeries(_detect);

async.some=function(arr,iterator,main_callback){
async.each(arr,function(x,callback){
iterator(x,function(v){
if(v){
main_callback(true);
main_callback=function(){};}

callback();});},

function(err){
main_callback(false);});};



async.any=async.some;

async.every=function(arr,iterator,main_callback){
async.each(arr,function(x,callback){
iterator(x,function(v){
if(!v){
main_callback(false);
main_callback=function(){};}

callback();});},

function(err){
main_callback(true);});};



async.all=async.every;

async.sortBy=function(arr,iterator,callback){
async.map(arr,function(x,callback){
iterator(x,function(err,criteria){
if(err){
callback(err);}else 

{
callback(null,{value:x,criteria:criteria});}});},


function(err,results){
if(err){
return callback(err);}else 

{
var fn=function(left,right){
var a=left.criteria,b=right.criteria;
return a<b?-1:a>b?1:0;};

callback(null,_map(results.sort(fn),function(x){
return x.value;}));}});};





async.auto=function(tasks,callback){
callback=callback||function(){};
var keys=_keys(tasks);
if(!keys.length){
return callback(null);}


var results={};

var listeners=[];
var addListener=function(fn){
listeners.unshift(fn);};

var removeListener=function(fn){
for(var i=0;i<listeners.length;i+=1){
if(listeners[i]===fn){
listeners.splice(i,1);
return;}}};



var taskComplete=function(){
_each(listeners.slice(0),function(fn){
fn();});};



addListener(function(){
if(_keys(results).length===keys.length){
callback(null,results);
callback=function(){};}});



_each(keys,function(k){
var task=tasks[k] instanceof Function?[tasks[k]]:tasks[k];
var taskCallback=function(err){
var args=Array.prototype.slice.call(arguments,1);
if(args.length<=1){
args=args[0];}

if(err){
var safeResults={};
_each(_keys(results),function(rkey){
safeResults[rkey]=results[rkey];});

safeResults[k]=args;
callback(err,safeResults);

callback=function(){};}else 

{
results[k]=args;
async.setImmediate(taskComplete);}};


var requires=task.slice(0,Math.abs(task.length-1))||[];
var ready=function(){
return _reduce(requires,function(a,x){
return a&&results.hasOwnProperty(x);},
true)&&!results.hasOwnProperty(k);};

if(ready()){
task[task.length-1](taskCallback,results);}else 

{
var listener=function(){
if(ready()){
removeListener(listener);
task[task.length-1](taskCallback,results);}};


addListener(listener);}});};




async.waterfall=function(tasks,callback){
callback=callback||function(){};
if(tasks.constructor!==Array){
var err=new Error('First argument to waterfall must be an array of functions');
return callback(err);}

if(!tasks.length){
return callback();}

var wrapIterator=function(iterator){
return function(err){
if(err){
callback.apply(null,arguments);
callback=function(){};}else 

{
var args=Array.prototype.slice.call(arguments,1);
var next=iterator.next();
if(next){
args.push(wrapIterator(next));}else 

{
args.push(callback);}

async.setImmediate(function(){
iterator.apply(null,args);});}};};




wrapIterator(async.iterator(tasks))();};


var _parallel=function(eachfn,tasks,callback){
callback=callback||function(){};
if(tasks.constructor===Array){
eachfn.map(tasks,function(fn,callback){
if(fn){
fn(function(err){
var args=Array.prototype.slice.call(arguments,1);
if(args.length<=1){
args=args[0];}

callback.call(null,err,args);});}},


callback);}else 

{
var results={};
eachfn.each(_keys(tasks),function(k,callback){
tasks[k](function(err){
var args=Array.prototype.slice.call(arguments,1);
if(args.length<=1){
args=args[0];}

results[k]=args;
callback(err);});},

function(err){
callback(err,results);});}};




async.parallel=function(tasks,callback){
_parallel({map:async.map,each:async.each},tasks,callback);};


async.parallelLimit=function(tasks,limit,callback){
_parallel({map:_mapLimit(limit),each:_eachLimit(limit)},tasks,callback);};


async.series=function(tasks,callback){
callback=callback||function(){};
if(tasks.constructor===Array){
async.mapSeries(tasks,function(fn,callback){
if(fn){
fn(function(err){
var args=Array.prototype.slice.call(arguments,1);
if(args.length<=1){
args=args[0];}

callback.call(null,err,args);});}},


callback);}else 

{
var results={};
async.eachSeries(_keys(tasks),function(k,callback){
tasks[k](function(err){
var args=Array.prototype.slice.call(arguments,1);
if(args.length<=1){
args=args[0];}

results[k]=args;
callback(err);});},

function(err){
callback(err,results);});}};




async.iterator=function(tasks){
var makeCallback=function(index){
var fn=function(){
if(tasks.length){
tasks[index].apply(null,arguments);}

return fn.next();};

fn.next=function(){
return index<tasks.length-1?makeCallback(index+1):null;};

return fn;};

return makeCallback(0);};


async.apply=function(fn){
var args=Array.prototype.slice.call(arguments,1);
return function(){
return fn.apply(
null,args.concat(Array.prototype.slice.call(arguments)));};};




var _concat=function(eachfn,arr,fn,callback){
var r=[];
eachfn(arr,function(x,cb){
fn(x,function(err,y){
r=r.concat(y||[]);
cb(err);});},

function(err){
callback(err,r);});};


async.concat=doParallel(_concat);
async.concatSeries=doSeries(_concat);

async.whilst=function(test,iterator,callback){
if(test()){
iterator(function(err){
if(err){
return callback(err);}

async.whilst(test,iterator,callback);});}else 


{
callback();}};



async.doWhilst=function(iterator,test,callback){
iterator(function(err){
if(err){
return callback(err);}

if(test()){
async.doWhilst(iterator,test,callback);}else 

{
callback();}});};




async.until=function(test,iterator,callback){
if(!test()){
iterator(function(err){
if(err){
return callback(err);}

async.until(test,iterator,callback);});}else 


{
callback();}};



async.doUntil=function(iterator,test,callback){
iterator(function(err){
if(err){
return callback(err);}

if(!test()){
async.doUntil(iterator,test,callback);}else 

{
callback();}});};




async.queue=function(worker,concurrency){
if(concurrency===undefined){
concurrency=1;}

function _insert(q,data,pos,callback){
if(data.constructor!==Array){
data=[data];}

_each(data,function(task){
var item={
data:task,
callback:typeof callback==='function'?callback:null};


if(pos){
q.tasks.unshift(item);}else 
{
q.tasks.push(item);}


if(q.saturated&&q.tasks.length===concurrency){
q.saturated();}

async.setImmediate(q.process);});}



var workers=0;
var q={
tasks:[],
concurrency:concurrency,
saturated:null,
empty:null,
drain:null,
push:function(data,callback){
_insert(q,data,false,callback);},

unshift:function(data,callback){
_insert(q,data,true,callback);},

process:function(){
if(workers<q.concurrency&&q.tasks.length){
var task=q.tasks.shift();
if(q.empty&&q.tasks.length===0){
q.empty();}

workers+=1;
var next=function(){
workers-=1;
if(task.callback){
task.callback.apply(task,arguments);}

if(q.drain&&q.tasks.length+workers===0){
q.drain();}

q.process();};

var cb=only_once(next);
worker(task.data,cb);}},


length:function(){
return q.tasks.length;},

running:function(){
return workers;}};


return q;};


async.cargo=function(worker,payload){
var working=false,
tasks=[];

var cargo={
tasks:tasks,
payload:payload,
saturated:null,
empty:null,
drain:null,
push:function(data,callback){
if(data.constructor!==Array){
data=[data];}

_each(data,function(task){
tasks.push({
data:task,
callback:typeof callback==='function'?callback:null});

if(cargo.saturated&&tasks.length===payload){
cargo.saturated();}});


async.setImmediate(cargo.process);},

process:function process(){
if(working)return;
if(tasks.length===0){
if(cargo.drain)cargo.drain();
return;}


var ts=typeof payload==='number'?
tasks.splice(0,payload):
tasks.splice(0);

var ds=_map(ts,function(task){
return task.data;});


if(cargo.empty)cargo.empty();
working=true;
worker(ds,function(){
working=false;

var args=arguments;
_each(ts,function(data){
if(data.callback){
data.callback.apply(null,args);}});



process();});},


length:function(){
return tasks.length;},

running:function(){
return working;}};


return cargo;};


var _console_fn=function(name){
return function(fn){
var args=Array.prototype.slice.call(arguments,1);
fn.apply(null,args.concat([function(err){
var args=Array.prototype.slice.call(arguments,1);
if(typeof console!=='undefined'){
if(err){
if(console.error){
console.error(err);}}else 


if(console[name]){
_each(args,function(x){
console[name](x);});}}}]));};};






async.log=_console_fn('log');
async.dir=_console_fn('dir');




async.memoize=function(fn,hasher){
var memo={};
var queues={};
hasher=hasher||function(x){
return x;};

var memoized=function(){
var args=Array.prototype.slice.call(arguments);
var callback=args.pop();
var key=hasher.apply(null,args);
if(key in memo){
callback.apply(null,memo[key]);}else 

if(key in queues){
queues[key].push(callback);}else 

{
queues[key]=[callback];
fn.apply(null,args.concat([function(){
memo[key]=arguments;
var q=queues[key];
delete queues[key];
for(var i=0,l=q.length;i<l;i++){
q[i].apply(null,arguments);}}]));}};




memoized.memo=memo;
memoized.unmemoized=fn;
return memoized;};


async.unmemoize=function(fn){
return function(){
return (fn.unmemoized||fn).apply(null,arguments);};};



async.times=function(count,iterator,callback){
var counter=[];
for(var i=0;i<count;i++){
counter.push(i);}

return async.map(counter,iterator,callback);};


async.timesSeries=function(count,iterator,callback){
var counter=[];
for(var i=0;i<count;i++){
counter.push(i);}

return async.mapSeries(counter,iterator,callback);};


async.compose=function(){
var fns=Array.prototype.reverse.call(arguments);
return function(){
var that=this;
var args=Array.prototype.slice.call(arguments);
var callback=args.pop();
async.reduce(fns,args,function(newargs,fn,cb){
fn.apply(that,newargs.concat([function(){
var err=arguments[0];
var nextargs=Array.prototype.slice.call(arguments,1);
cb(err,nextargs);}]));},


function(err,results){
callback.apply(that,[err].concat(results));});};};




var _applyEach=function(eachfn,fns){
var go=function(){
var that=this;
var args=Array.prototype.slice.call(arguments);
var callback=args.pop();
return eachfn(fns,function(fn,cb){
fn.apply(that,args.concat([cb]));},

callback);};

if(arguments.length>2){
var args=Array.prototype.slice.call(arguments,2);
return go.apply(this,args);}else 

{
return go;}};


async.applyEach=doParallel(_applyEach);
async.applyEachSeries=doSeries(_applyEach);

async.forever=function(fn,callback){
function next(err){
if(err){
if(callback){
return callback(err);}

throw err;}

fn(next);}

next();};



if(typeof define!=='undefined'&&define.amd){
define([],function(){
return async;});}else 



if(typeof module!=='undefined'&&module.exports){
module.exports=async;}else 


{
root.async=async;}})();
});
__d('XenformaMobileSync/network.js',function(global, require, module, exports) {  "use strict";














var React=require('react-native/Libraries/react-native/react-native.js');var 
NetInfo=React.NetInfo;

var is_device_online=function(callback){
NetInfo.isConnected.fetch().done(function(isConnected){
return callback(isConnected);});};



exports.is_device_online=is_device_online;
});
__d('XenformaMobileSync/server_auth.js',function(global, require, module, exports) {  "use strict";















var ForerunnerDB=require("forerunnerdb/js/builds/nodecore.js");
var mobile_utils=require('XenformaMobileSync/mobile_utils.js');

var fdb=new ForerunnerDB();
var db=fdb.db('xenforma');
var Buffer=require('buffer/index.js').Buffer;

var auth_info;

var authenticate_username_password=function(server_url,username,password){
return new Promise(function(resolve,reject){
var login_route=server_url+'api/auth/login';
console.log(server_url);
var credentials=username+":"+password;
credentials=btoa(credentials);
fetch(login_route,{
method:"POST",
headers:{
"Authorization":"Basic "+credentials,
"Accept":"application/json",
"Content-Type":"application/json"},

body:"{}"}).
then(function(response){
response.json().then(function(json_response){
if(json_response.login_token){
var xenforma_auth_info=db.collection('xenforma_auth_info');
xenforma_auth_info.load(function(err){
if(err){
return reject(err);}


var auth_record=xenforma_auth_info.find({});
if(auth_record.length>0){
xenforma_auth_info.remove({});}


xenforma_auth_info.insert({server_url:server_url,login_token:json_response.login_token,username:username});
xenforma_auth_info.save(function(err){
if(err){
return reject(err);}


auth_info={server_url:server_url,login_token:json_response.login_token,username:username};
return resolve();});});



resolve();}else 

{
return reject(json_response.message);}}).

catch(function(err){
if(response.status==401){
return reject("INVALID_CREDENTIALS");}

return reject(err);});}).

catch(function(err){

console.log(JSON.stringify(err));});});};



global.btoa=function(str){
console.log("this is ");
return new Buffer(str).toString('base64');};



var is_user_authenticated=function(){
return new Promise(function(resolve,reject){
var check_login_status=function(){
do_authenticated_http_call("api/auth/is_logged_in",{
method:"GET",
headers:{
"Accept":"application/json"}}).

then(function(response){

response.json().then(function(json_response){

if(json_response.logged_in){
return resolve();}else 

{
return reject("NOT_LOGGED_IN");}}).

catch(function(err){
return reject(err);});});};




if(!auth_info){

var xenforma_auth_info=db.collection('xenforma_auth_info');
xenforma_auth_info.load(function(err){

if(err){
return reject(err);}


var db_auth_info=xenforma_auth_info.find({});
if(db_auth_info.length>0){
auth_info=db_auth_info[0];
check_login_status();}else 

{
return reject("NOT_LOGGED_IN");}});}else 



{
check_login_status();}});};




var do_authenticated_http_call=function(url_path,options){

if(!auth_info){
return new Promise(function(resolve,reject){return reject("MISSING_CREDENTIALS");});}


if(options===undefined){
options={};}


if(options.headers===undefined){
options.headers={};}


console.log("auth info server_url "+auth_info.server_url);
options.headers["Authorization"]="JWT "+auth_info.login_token;

return fetch(auth_info.server_url+url_path,options);};

var did_forget_password=function(server_url,request){
var request={};};



exports.do_authenticated_http_call=do_authenticated_http_call;
exports.is_user_authenticated=is_user_authenticated;
exports.authenticate_username_password=authenticate_username_password;
});
__d('buffer/index.js',function(global, require, module, exports) {  /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */


'use strict';

var base64=require('base64-js/lib/b64.js');
var ieee754=require('ieee754/index.js');
var isArray=require('isarray/index.js');

exports.Buffer=Buffer;
exports.SlowBuffer=SlowBuffer;
exports.INSPECT_MAX_BYTES=50;
Buffer.poolSize=8192;

var rootParent={};

























Buffer.TYPED_ARRAY_SUPPORT=global.TYPED_ARRAY_SUPPORT!==undefined?
global.TYPED_ARRAY_SUPPORT:
typedArraySupport();

function typedArraySupport(){
try{
var arr=new Uint8Array(1);
arr.foo=function(){return 42;};
return arr.foo()===42&&
typeof arr.subarray==='function'&&
arr.subarray(1,1).byteLength===0;}
catch(e){
return false;}}



function kMaxLength(){
return Buffer.TYPED_ARRAY_SUPPORT?
0x7fffffff:
0x3fffffff;}











function Buffer(arg){
if(!(this instanceof Buffer)){

if(arguments.length>1)return new Buffer(arg,arguments[1]);
return new Buffer(arg);}


if(!Buffer.TYPED_ARRAY_SUPPORT){
this.length=0;
this.parent=undefined;}



if(typeof arg==='number'){
return fromNumber(this,arg);}



if(typeof arg==='string'){
return fromString(this,arg,arguments.length>1?arguments[1]:'utf8');}



return fromObject(this,arg);}



Buffer._augment=function(arr){
arr.__proto__=Buffer.prototype;
return arr;};


function fromNumber(that,length){
that=allocate(that,length<0?0:checked(length)|0);
if(!Buffer.TYPED_ARRAY_SUPPORT){
for(var i=0;i<length;i++){
that[i]=0;}}


return that;}


function fromString(that,string,encoding){
if(typeof encoding!=='string'||encoding==='')encoding='utf8';


var length=byteLength(string,encoding)|0;
that=allocate(that,length);

that.write(string,encoding);
return that;}


function fromObject(that,object){
if(Buffer.isBuffer(object))return fromBuffer(that,object);

if(isArray(object))return fromArray(that,object);

if(object==null){
throw new TypeError('must start with number, buffer, array or string');}


if(typeof ArrayBuffer!=='undefined'){
if(object.buffer instanceof ArrayBuffer){
return fromTypedArray(that,object);}

if(object instanceof ArrayBuffer){
return fromArrayBuffer(that,object);}}



if(object.length)return fromArrayLike(that,object);

return fromJsonObject(that,object);}


function fromBuffer(that,buffer){
var length=checked(buffer.length)|0;
that=allocate(that,length);
buffer.copy(that,0,0,length);
return that;}


function fromArray(that,array){
var length=checked(array.length)|0;
that=allocate(that,length);
for(var i=0;i<length;i+=1){
that[i]=array[i]&255;}

return that;}



function fromTypedArray(that,array){
var length=checked(array.length)|0;
that=allocate(that,length);



for(var i=0;i<length;i+=1){
that[i]=array[i]&255;}

return that;}


function fromArrayBuffer(that,array){
array.byteLength;

if(Buffer.TYPED_ARRAY_SUPPORT){

that=new Uint8Array(array);
that.__proto__=Buffer.prototype;}else 
{

that=fromTypedArray(that,new Uint8Array(array));}

return that;}


function fromArrayLike(that,array){
var length=checked(array.length)|0;
that=allocate(that,length);
for(var i=0;i<length;i+=1){
that[i]=array[i]&255;}

return that;}




function fromJsonObject(that,object){
var array;
var length=0;

if(object.type==='Buffer'&&isArray(object.data)){
array=object.data;
length=checked(array.length)|0;}

that=allocate(that,length);

for(var i=0;i<length;i+=1){
that[i]=array[i]&255;}

return that;}


if(Buffer.TYPED_ARRAY_SUPPORT){
Buffer.prototype.__proto__=Uint8Array.prototype;
Buffer.__proto__=Uint8Array;
if(typeof Symbol!=='undefined'&&Symbol.species&&
Buffer[Symbol.species]===Buffer){

Object.defineProperty(Buffer,Symbol.species,{
value:null,
configurable:true});}}else 


{

Buffer.prototype.length=undefined;
Buffer.prototype.parent=undefined;}


function allocate(that,length){
if(Buffer.TYPED_ARRAY_SUPPORT){

that=new Uint8Array(length);
that.__proto__=Buffer.prototype;}else 
{

that.length=length;}


var fromPool=length!==0&&length<=Buffer.poolSize>>>1;
if(fromPool)that.parent=rootParent;

return that;}


function checked(length){


if(length>=kMaxLength()){
throw new RangeError('Attempt to allocate Buffer larger than maximum '+
'size: 0x'+kMaxLength().toString(16)+' bytes');}

return length|0;}


function SlowBuffer(subject,encoding){
if(!(this instanceof SlowBuffer))return new SlowBuffer(subject,encoding);

var buf=new Buffer(subject,encoding);
delete buf.parent;
return buf;}


Buffer.isBuffer=function isBuffer(b){
return !!(b!=null&&b._isBuffer);};


Buffer.compare=function compare(a,b){
if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){
throw new TypeError('Arguments must be Buffers');}


if(a===b)return 0;

var x=a.length;
var y=b.length;

var i=0;
var len=Math.min(x,y);
while(i<len){
if(a[i]!==b[i])break;

++i;}


if(i!==len){
x=a[i];
y=b[i];}


if(x<y)return -1;
if(y<x)return 1;
return 0;};


Buffer.isEncoding=function isEncoding(encoding){
switch(String(encoding).toLowerCase()){
case 'hex':
case 'utf8':
case 'utf-8':
case 'ascii':
case 'binary':
case 'base64':
case 'raw':
case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return true;
default:
return false;}};



Buffer.concat=function concat(list,length){
if(!isArray(list))throw new TypeError('list argument must be an Array of Buffers.');

if(list.length===0){
return new Buffer(0);}


var i;
if(length===undefined){
length=0;
for(i=0;i<list.length;i++){
length+=list[i].length;}}



var buf=new Buffer(length);
var pos=0;
for(i=0;i<list.length;i++){
var item=list[i];
item.copy(buf,pos);
pos+=item.length;}

return buf;};


function byteLength(string,encoding){
if(typeof string!=='string')string=''+string;

var len=string.length;
if(len===0)return 0;


var loweredCase=false;
for(;;){
switch(encoding){
case 'ascii':
case 'binary':

case 'raw':
case 'raws':
return len;
case 'utf8':
case 'utf-8':
return utf8ToBytes(string).length;
case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return len*2;
case 'hex':
return len>>>1;
case 'base64':
return base64ToBytes(string).length;
default:
if(loweredCase)return utf8ToBytes(string).length;
encoding=(''+encoding).toLowerCase();
loweredCase=true;}}}



Buffer.byteLength=byteLength;

function slowToString(encoding,start,end){
var loweredCase=false;

start=start|0;
end=end===undefined||end===Infinity?this.length:end|0;

if(!encoding)encoding='utf8';
if(start<0)start=0;
if(end>this.length)end=this.length;
if(end<=start)return '';

while(true){
switch(encoding){
case 'hex':
return hexSlice(this,start,end);

case 'utf8':
case 'utf-8':
return utf8Slice(this,start,end);

case 'ascii':
return asciiSlice(this,start,end);

case 'binary':
return binarySlice(this,start,end);

case 'base64':
return base64Slice(this,start,end);

case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return utf16leSlice(this,start,end);

default:
if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);
encoding=(encoding+'').toLowerCase();
loweredCase=true;}}}






Buffer.prototype._isBuffer=true;

Buffer.prototype.toString=function toString(){
var length=this.length|0;
if(length===0)return '';
if(arguments.length===0)return utf8Slice(this,0,length);
return slowToString.apply(this,arguments);};


Buffer.prototype.equals=function equals(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this===b)return true;
return Buffer.compare(this,b)===0;};


Buffer.prototype.inspect=function inspect(){
var str='';
var max=exports.INSPECT_MAX_BYTES;
if(this.length>0){
str=this.toString('hex',0,max).match(/.{2}/g).join(' ');
if(this.length>max)str+=' ... ';}

return '<Buffer '+str+'>';};


Buffer.prototype.compare=function compare(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this===b)return 0;
return Buffer.compare(this,b);};


Buffer.prototype.indexOf=function indexOf(val,byteOffset){
if(byteOffset>0x7fffffff)byteOffset=0x7fffffff;else 
if(byteOffset<-0x80000000)byteOffset=-0x80000000;
byteOffset>>=0;

if(this.length===0)return -1;
if(byteOffset>=this.length)return -1;


if(byteOffset<0)byteOffset=Math.max(this.length+byteOffset,0);

if(typeof val==='string'){
if(val.length===0)return -1;
return String.prototype.indexOf.call(this,val,byteOffset);}

if(Buffer.isBuffer(val)){
return arrayIndexOf(this,val,byteOffset);}

if(typeof val==='number'){
if(Buffer.TYPED_ARRAY_SUPPORT&&Uint8Array.prototype.indexOf==='function'){
return Uint8Array.prototype.indexOf.call(this,val,byteOffset);}

return arrayIndexOf(this,[val],byteOffset);}


function arrayIndexOf(arr,val,byteOffset){
var foundIndex=-1;
for(var i=0;byteOffset+i<arr.length;i++){
if(arr[byteOffset+i]===val[foundIndex===-1?0:i-foundIndex]){
if(foundIndex===-1)foundIndex=i;
if(i-foundIndex+1===val.length)return byteOffset+foundIndex;}else 
{
foundIndex=-1;}}


return -1;}


throw new TypeError('val must be string, number or Buffer');};


function hexWrite(buf,string,offset,length){
offset=Number(offset)||0;
var remaining=buf.length-offset;
if(!length){
length=remaining;}else 
{
length=Number(length);
if(length>remaining){
length=remaining;}}




var strLen=string.length;
if(strLen%2!==0)throw new Error('Invalid hex string');

if(length>strLen/2){
length=strLen/2;}

for(var i=0;i<length;i++){
var parsed=parseInt(string.substr(i*2,2),16);
if(isNaN(parsed))throw new Error('Invalid hex string');
buf[offset+i]=parsed;}

return i;}


function utf8Write(buf,string,offset,length){
return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}


function asciiWrite(buf,string,offset,length){
return blitBuffer(asciiToBytes(string),buf,offset,length);}


function binaryWrite(buf,string,offset,length){
return asciiWrite(buf,string,offset,length);}


function base64Write(buf,string,offset,length){
return blitBuffer(base64ToBytes(string),buf,offset,length);}


function ucs2Write(buf,string,offset,length){
return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}


Buffer.prototype.write=function write(string,offset,length,encoding){

if(offset===undefined){
encoding='utf8';
length=this.length;
offset=0;}else 

if(length===undefined&&typeof offset==='string'){
encoding=offset;
length=this.length;
offset=0;}else 

if(isFinite(offset)){
offset=offset|0;
if(isFinite(length)){
length=length|0;
if(encoding===undefined)encoding='utf8';}else 
{
encoding=length;
length=undefined;}}else 


{
var swap=encoding;
encoding=offset;
offset=length|0;
length=swap;}


var remaining=this.length-offset;
if(length===undefined||length>remaining)length=remaining;

if(string.length>0&&(length<0||offset<0)||offset>this.length){
throw new RangeError('attempt to write outside buffer bounds');}


if(!encoding)encoding='utf8';

var loweredCase=false;
for(;;){
switch(encoding){
case 'hex':
return hexWrite(this,string,offset,length);

case 'utf8':
case 'utf-8':
return utf8Write(this,string,offset,length);

case 'ascii':
return asciiWrite(this,string,offset,length);

case 'binary':
return binaryWrite(this,string,offset,length);

case 'base64':

return base64Write(this,string,offset,length);

case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return ucs2Write(this,string,offset,length);

default:
if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);
encoding=(''+encoding).toLowerCase();
loweredCase=true;}}};




Buffer.prototype.toJSON=function toJSON(){
return {
type:'Buffer',
data:Array.prototype.slice.call(this._arr||this,0)};};



function base64Slice(buf,start,end){
if(start===0&&end===buf.length){
return base64.fromByteArray(buf);}else 
{
return base64.fromByteArray(buf.slice(start,end));}}



function utf8Slice(buf,start,end){
end=Math.min(buf.length,end);
var res=[];

var i=start;
while(i<end){
var firstByte=buf[i];
var codePoint=null;
var bytesPerSequence=firstByte>0xEF?4:
firstByte>0xDF?3:
firstByte>0xBF?2:
1;

if(i+bytesPerSequence<=end){
var secondByte,thirdByte,fourthByte,tempCodePoint;

switch(bytesPerSequence){
case 1:
if(firstByte<0x80){
codePoint=firstByte;}

break;
case 2:
secondByte=buf[i+1];
if((secondByte&0xC0)===0x80){
tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;
if(tempCodePoint>0x7F){
codePoint=tempCodePoint;}}


break;
case 3:
secondByte=buf[i+1];
thirdByte=buf[i+2];
if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){
tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;
if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){
codePoint=tempCodePoint;}}


break;
case 4:
secondByte=buf[i+1];
thirdByte=buf[i+2];
fourthByte=buf[i+3];
if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){
tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;
if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){
codePoint=tempCodePoint;}}}}





if(codePoint===null){


codePoint=0xFFFD;
bytesPerSequence=1;}else 
if(codePoint>0xFFFF){

codePoint-=0x10000;
res.push(codePoint>>>10&0x3FF|0xD800);
codePoint=0xDC00|codePoint&0x3FF;}


res.push(codePoint);
i+=bytesPerSequence;}


return decodeCodePointsArray(res);}





var MAX_ARGUMENTS_LENGTH=0x1000;

function decodeCodePointsArray(codePoints){
var len=codePoints.length;
if(len<=MAX_ARGUMENTS_LENGTH){
return String.fromCharCode.apply(String,codePoints);}



var res='';
var i=0;
while(i<len){
res+=String.fromCharCode.apply(
String,
codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}


return res;}


function asciiSlice(buf,start,end){
var ret='';
end=Math.min(buf.length,end);

for(var i=start;i<end;i++){
ret+=String.fromCharCode(buf[i]&0x7F);}

return ret;}


function binarySlice(buf,start,end){
var ret='';
end=Math.min(buf.length,end);

for(var i=start;i<end;i++){
ret+=String.fromCharCode(buf[i]);}

return ret;}


function hexSlice(buf,start,end){
var len=buf.length;

if(!start||start<0)start=0;
if(!end||end<0||end>len)end=len;

var out='';
for(var i=start;i<end;i++){
out+=toHex(buf[i]);}

return out;}


function utf16leSlice(buf,start,end){
var bytes=buf.slice(start,end);
var res='';
for(var i=0;i<bytes.length;i+=2){
res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}

return res;}


Buffer.prototype.slice=function slice(start,end){
var len=this.length;
start=~ ~start;
end=end===undefined?len:~ ~end;

if(start<0){
start+=len;
if(start<0)start=0;}else 
if(start>len){
start=len;}


if(end<0){
end+=len;
if(end<0)end=0;}else 
if(end>len){
end=len;}


if(end<start)end=start;

var newBuf;
if(Buffer.TYPED_ARRAY_SUPPORT){
newBuf=this.subarray(start,end);
newBuf.__proto__=Buffer.prototype;}else 
{
var sliceLen=end-start;
newBuf=new Buffer(sliceLen,undefined);
for(var i=0;i<sliceLen;i++){
newBuf[i]=this[i+start];}}



if(newBuf.length)newBuf.parent=this.parent||this;

return newBuf;};





function checkOffset(offset,ext,length){
if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');
if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}


Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){
offset=offset|0;
byteLength=byteLength|0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i<byteLength&&(mul*=0x100)){
val+=this[offset+i]*mul;}


return val;};


Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){
offset=offset|0;
byteLength=byteLength|0;
if(!noAssert){
checkOffset(offset,byteLength,this.length);}


var val=this[offset+--byteLength];
var mul=1;
while(byteLength>0&&(mul*=0x100)){
val+=this[offset+--byteLength]*mul;}


return val;};


Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){
if(!noAssert)checkOffset(offset,1,this.length);
return this[offset];};


Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset]|this[offset+1]<<8;};


Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset]<<8|this[offset+1];};


Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return (this[offset]|
this[offset+1]<<8|
this[offset+2]<<16)+
this[offset+3]*0x1000000;};


Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]*0x1000000+(
this[offset+1]<<16|
this[offset+2]<<8|
this[offset+3]);};


Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){
offset=offset|0;
byteLength=byteLength|0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i<byteLength&&(mul*=0x100)){
val+=this[offset+i]*mul;}

mul*=0x80;

if(val>=mul)val-=Math.pow(2,8*byteLength);

return val;};


Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){
offset=offset|0;
byteLength=byteLength|0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var i=byteLength;
var mul=1;
var val=this[offset+--i];
while(i>0&&(mul*=0x100)){
val+=this[offset+--i]*mul;}

mul*=0x80;

if(val>=mul)val-=Math.pow(2,8*byteLength);

return val;};


Buffer.prototype.readInt8=function readInt8(offset,noAssert){
if(!noAssert)checkOffset(offset,1,this.length);
if(!(this[offset]&0x80))return this[offset];
return (0xff-this[offset]+1)*-1;};


Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset]|this[offset+1]<<8;
return val&0x8000?val|0xFFFF0000:val;};


Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset+1]|this[offset]<<8;
return val&0x8000?val|0xFFFF0000:val;};


Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]|
this[offset+1]<<8|
this[offset+2]<<16|
this[offset+3]<<24;};


Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]<<24|
this[offset+1]<<16|
this[offset+2]<<8|
this[offset+3];};


Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,true,23,4);};


Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,false,23,4);};


Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,true,52,8);};


Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,false,52,8);};


function checkInt(buf,value,offset,ext,max,min){
if(!Buffer.isBuffer(buf))throw new TypeError('buffer must be a Buffer instance');
if(value>max||value<min)throw new RangeError('value is out of bounds');
if(offset+ext>buf.length)throw new RangeError('index out of range');}


Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){
value=+value;
offset=offset|0;
byteLength=byteLength|0;
if(!noAssert)checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength),0);

var mul=1;
var i=0;
this[offset]=value&0xFF;
while(++i<byteLength&&(mul*=0x100)){
this[offset+i]=value/mul&0xFF;}


return offset+byteLength;};


Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){
value=+value;
offset=offset|0;
byteLength=byteLength|0;
if(!noAssert)checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength),0);

var i=byteLength-1;
var mul=1;
this[offset+i]=value&0xFF;
while(--i>=0&&(mul*=0x100)){
this[offset+i]=value/mul&0xFF;}


return offset+byteLength;};


Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,1,0xff,0);
if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);
this[offset]=value&0xff;
return offset+1;};


function objectWriteUInt16(buf,value,offset,littleEndian){
if(value<0)value=0xffff+value+1;
for(var i=0,j=Math.min(buf.length-offset,2);i<j;i++){
buf[offset+i]=(value&0xff<<8*(littleEndian?i:1-i))>>>
(littleEndian?i:1-i)*8;}}



Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value&0xff;
this[offset+1]=value>>>8;}else 
{
objectWriteUInt16(this,value,offset,true);}

return offset+2;};


Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value>>>8;
this[offset+1]=value&0xff;}else 
{
objectWriteUInt16(this,value,offset,false);}

return offset+2;};


function objectWriteUInt32(buf,value,offset,littleEndian){
if(value<0)value=0xffffffff+value+1;
for(var i=0,j=Math.min(buf.length-offset,4);i<j;i++){
buf[offset+i]=value>>>(littleEndian?i:3-i)*8&0xff;}}



Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset+3]=value>>>24;
this[offset+2]=value>>>16;
this[offset+1]=value>>>8;
this[offset]=value&0xff;}else 
{
objectWriteUInt32(this,value,offset,true);}

return offset+4;};


Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value>>>24;
this[offset+1]=value>>>16;
this[offset+2]=value>>>8;
this[offset+3]=value&0xff;}else 
{
objectWriteUInt32(this,value,offset,false);}

return offset+4;};


Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){
value=+value;
offset=offset|0;
if(!noAssert){
var limit=Math.pow(2,8*byteLength-1);

checkInt(this,value,offset,byteLength,limit-1,-limit);}


var i=0;
var mul=1;
var sub=value<0?1:0;
this[offset]=value&0xFF;
while(++i<byteLength&&(mul*=0x100)){
this[offset+i]=(value/mul>>0)-sub&0xFF;}


return offset+byteLength;};


Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){
value=+value;
offset=offset|0;
if(!noAssert){
var limit=Math.pow(2,8*byteLength-1);

checkInt(this,value,offset,byteLength,limit-1,-limit);}


var i=byteLength-1;
var mul=1;
var sub=value<0?1:0;
this[offset+i]=value&0xFF;
while(--i>=0&&(mul*=0x100)){
this[offset+i]=(value/mul>>0)-sub&0xFF;}


return offset+byteLength;};


Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);
if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);
if(value<0)value=0xff+value+1;
this[offset]=value&0xff;
return offset+1;};


Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value&0xff;
this[offset+1]=value>>>8;}else 
{
objectWriteUInt16(this,value,offset,true);}

return offset+2;};


Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value>>>8;
this[offset+1]=value&0xff;}else 
{
objectWriteUInt16(this,value,offset,false);}

return offset+2;};


Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value&0xff;
this[offset+1]=value>>>8;
this[offset+2]=value>>>16;
this[offset+3]=value>>>24;}else 
{
objectWriteUInt32(this,value,offset,true);}

return offset+4;};


Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){
value=+value;
offset=offset|0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
if(value<0)value=0xffffffff+value+1;
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset]=value>>>24;
this[offset+1]=value>>>16;
this[offset+2]=value>>>8;
this[offset+3]=value&0xff;}else 
{
objectWriteUInt32(this,value,offset,false);}

return offset+4;};


function checkIEEE754(buf,value,offset,ext,max,min){
if(offset+ext>buf.length)throw new RangeError('index out of range');
if(offset<0)throw new RangeError('index out of range');}


function writeFloat(buf,value,offset,littleEndian,noAssert){
if(!noAssert){
checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);}

ieee754.write(buf,value,offset,littleEndian,23,4);
return offset+4;}


Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){
return writeFloat(this,value,offset,true,noAssert);};


Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){
return writeFloat(this,value,offset,false,noAssert);};


function writeDouble(buf,value,offset,littleEndian,noAssert){
if(!noAssert){
checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);}

ieee754.write(buf,value,offset,littleEndian,52,8);
return offset+8;}


Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){
return writeDouble(this,value,offset,true,noAssert);};


Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){
return writeDouble(this,value,offset,false,noAssert);};



Buffer.prototype.copy=function copy(target,targetStart,start,end){
if(!start)start=0;
if(!end&&end!==0)end=this.length;
if(targetStart>=target.length)targetStart=target.length;
if(!targetStart)targetStart=0;
if(end>0&&end<start)end=start;


if(end===start)return 0;
if(target.length===0||this.length===0)return 0;


if(targetStart<0){
throw new RangeError('targetStart out of bounds');}

if(start<0||start>=this.length)throw new RangeError('sourceStart out of bounds');
if(end<0)throw new RangeError('sourceEnd out of bounds');


if(end>this.length)end=this.length;
if(target.length-targetStart<end-start){
end=target.length-targetStart+start;}


var len=end-start;
var i;

if(this===target&&start<targetStart&&targetStart<end){

for(i=len-1;i>=0;i--){
target[i+targetStart]=this[i+start];}}else 

if(len<1000||!Buffer.TYPED_ARRAY_SUPPORT){

for(i=0;i<len;i++){
target[i+targetStart]=this[i+start];}}else 

{
Uint8Array.prototype.set.call(
target,
this.subarray(start,start+len),
targetStart);}



return len;};



Buffer.prototype.fill=function fill(value,start,end){
if(!value)value=0;
if(!start)start=0;
if(!end)end=this.length;

if(end<start)throw new RangeError('end < start');


if(end===start)return;
if(this.length===0)return;

if(start<0||start>=this.length)throw new RangeError('start out of bounds');
if(end<0||end>this.length)throw new RangeError('end out of bounds');

var i;
if(typeof value==='number'){
for(i=start;i<end;i++){
this[i]=value;}}else 

{
var bytes=utf8ToBytes(value.toString());
var len=bytes.length;
for(i=start;i<end;i++){
this[i]=bytes[i%len];}}



return this;};





var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;

function base64clean(str){

str=stringtrim(str).replace(INVALID_BASE64_RE,'');

if(str.length<2)return '';

while(str.length%4!==0){
str=str+'=';}

return str;}


function stringtrim(str){
if(str.trim)return str.trim();
return str.replace(/^\s+|\s+$/g,'');}


function toHex(n){
if(n<16)return '0'+n.toString(16);
return n.toString(16);}


function utf8ToBytes(string,units){
units=units||Infinity;
var codePoint;
var length=string.length;
var leadSurrogate=null;
var bytes=[];

for(var i=0;i<length;i++){
codePoint=string.charCodeAt(i);


if(codePoint>0xD7FF&&codePoint<0xE000){

if(!leadSurrogate){

if(codePoint>0xDBFF){

if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
continue;}else 
if(i+1===length){

if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
continue;}



leadSurrogate=codePoint;

continue;}



if(codePoint<0xDC00){
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
leadSurrogate=codePoint;
continue;}



codePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else 
if(leadSurrogate){

if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}


leadSurrogate=null;


if(codePoint<0x80){
if((units-=1)<0)break;
bytes.push(codePoint);}else 
if(codePoint<0x800){
if((units-=2)<0)break;
bytes.push(
codePoint>>0x6|0xC0,
codePoint&0x3F|0x80);}else 

if(codePoint<0x10000){
if((units-=3)<0)break;
bytes.push(
codePoint>>0xC|0xE0,
codePoint>>0x6&0x3F|0x80,
codePoint&0x3F|0x80);}else 

if(codePoint<0x110000){
if((units-=4)<0)break;
bytes.push(
codePoint>>0x12|0xF0,
codePoint>>0xC&0x3F|0x80,
codePoint>>0x6&0x3F|0x80,
codePoint&0x3F|0x80);}else 

{
throw new Error('Invalid code point');}}



return bytes;}


function asciiToBytes(str){
var byteArray=[];
for(var i=0;i<str.length;i++){

byteArray.push(str.charCodeAt(i)&0xFF);}

return byteArray;}


function utf16leToBytes(str,units){
var c,hi,lo;
var byteArray=[];
for(var i=0;i<str.length;i++){
if((units-=2)<0)break;

c=str.charCodeAt(i);
hi=c>>8;
lo=c%256;
byteArray.push(lo);
byteArray.push(hi);}


return byteArray;}


function base64ToBytes(str){
return base64.toByteArray(base64clean(str));}


function blitBuffer(src,dst,offset,length){
for(var i=0;i<length;i++){
if(i+offset>=dst.length||i>=src.length)break;
dst[i+offset]=src[i];}

return i;}
});
__d('base64-js/lib/b64.js',function(global, require, module, exports) {  'use strict';

exports.toByteArray=toByteArray;
exports.fromByteArray=fromByteArray;

var lookup=[];
var revLookup=[];
var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;

function init(){
var i;
var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
var len=code.length;

for(i=0;i<len;i++){
lookup[i]=code[i];}


for(i=0;i<len;++i){
revLookup[code.charCodeAt(i)]=i;}

revLookup['-'.charCodeAt(0)]=62;
revLookup['_'.charCodeAt(0)]=63;}


init();

function toByteArray(b64){
var i,j,l,tmp,placeHolders,arr;
var len=b64.length;

if(len%4>0){
throw new Error('Invalid string. Length must be a multiple of 4');}







placeHolders=b64[len-2]==='='?2:b64[len-1]==='='?1:0;


arr=new Arr(len*3/4-placeHolders);


l=placeHolders>0?len-4:len;

var L=0;

for(i=0,j=0;i<l;i+=4,j+=3){
tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];
arr[L++]=(tmp&0xFF0000)>>16;
arr[L++]=(tmp&0xFF00)>>8;
arr[L++]=tmp&0xFF;}


if(placeHolders===2){
tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;
arr[L++]=tmp&0xFF;}else 
if(placeHolders===1){
tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;
arr[L++]=tmp>>8&0xFF;
arr[L++]=tmp&0xFF;}


return arr;}


function tripletToBase64(num){
return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}


function encodeChunk(uint8,start,end){
var tmp;
var output=[];
for(var i=start;i<end;i+=3){
tmp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2];
output.push(tripletToBase64(tmp));}

return output.join('');}


function fromByteArray(uint8){
var tmp;
var len=uint8.length;
var extraBytes=len%3;
var output='';
var parts=[];
var maxChunkLength=16383;


for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){
parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}



if(extraBytes===1){
tmp=uint8[len-1];
output+=lookup[tmp>>2];
output+=lookup[tmp<<4&0x3F];
output+='==';}else 
if(extraBytes===2){
tmp=(uint8[len-2]<<8)+uint8[len-1];
output+=lookup[tmp>>10];
output+=lookup[tmp>>4&0x3F];
output+=lookup[tmp<<2&0x3F];
output+='=';}


parts.push(output);

return parts.join('');}
});
__d('ieee754/index.js',function(global, require, module, exports) {  exports.read=function(buffer,offset,isLE,mLen,nBytes){
var e,m;
var eLen=nBytes*8-mLen-1;
var eMax=(1<<eLen)-1;
var eBias=eMax>>1;
var nBits=-7;
var i=isLE?nBytes-1:0;
var d=isLE?-1:1;
var s=buffer[offset+i];

i+=d;

e=s&(1<<-nBits)-1;
s>>=-nBits;
nBits+=eLen;
for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}

m=e&(1<<-nBits)-1;
e>>=-nBits;
nBits+=mLen;
for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}

if(e===0){
e=1-eBias;}else 
if(e===eMax){
return m?NaN:(s?-1:1)*Infinity;}else 
{
m=m+Math.pow(2,mLen);
e=e-eBias;}

return (s?-1:1)*m*Math.pow(2,e-mLen);};


exports.write=function(buffer,value,offset,isLE,mLen,nBytes){
var e,m,c;
var eLen=nBytes*8-mLen-1;
var eMax=(1<<eLen)-1;
var eBias=eMax>>1;
var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;
var i=isLE?0:nBytes-1;
var d=isLE?1:-1;
var s=value<0||value===0&&1/value<0?1:0;

value=Math.abs(value);

if(isNaN(value)||value===Infinity){
m=isNaN(value)?1:0;
e=eMax;}else 
{
e=Math.floor(Math.log(value)/Math.LN2);
if(value*(c=Math.pow(2,-e))<1){
e--;
c*=2;}

if(e+eBias>=1){
value+=rt/c;}else 
{
value+=rt*Math.pow(2,1-eBias);}

if(value*c>=2){
e++;
c/=2;}


if(e+eBias>=eMax){
m=0;
e=eMax;}else 
if(e+eBias>=1){
m=(value*c-1)*Math.pow(2,mLen);
e=e+eBias;}else 
{
m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);
e=0;}}



for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}

e=e<<mLen|m;
eLen+=mLen;
for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}

buffer[offset+i-d]|=s*128;};
});
__d('isarray/index.js',function(global, require, module, exports) {  var toString={}.toString;

module.exports=Array.isArray||function(arr){
return toString.call(arr)=='[object Array]';};
});
__d('XenformaMobileSync/app.component.login.js',function(global, require, module, exports) {  "use strict";













var React=require('react-native/Libraries/react-native/react-native.js');
var server_auth=require('XenformaMobileSync/server_auth.js');var 

AppRegistry=






React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var Image=React.Image;var View=React.View;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;

var LoginComponent=React.createClass({displayName:'LoginComponent',
getInitialState:function(){
return {username:"",password:"",organization:"prologic",forgetview:"no",username1:"",disable_submit:true};},

perform_login:function(){var _this=this;
var context=this;
server_auth.authenticate_username_password("http://webcreek.xenforma.com/",this.state.username,this.state.password).then(function(){
if(_this.props.on_auth_successful){

_this.props.on_auth_successful();}}).

catch(function(err){
if(err=="INVALID_CREDENTIALS"){
context.setState({error:"Invalid credentials"});}else 

{
context.setState({error:err});}});



this.setState({forgetview:"no"});},

perform_submit:function(){
var context=this;
var request={};
request.secret_answer=this.state.secret_answer;
if(this.state.username1.indexOf("@")==-1){
request.login_name=this.state.username1;}else 

{
request.email_address=this.state.username1;}


fetch("http://webcreek.xenforma.com/api/auth/reset_password",{
method:"POST",
headers:{
"Accept":"application/json",
"Content-Type":"application/json"},

body:JSON.stringify(request)}).

then(function(response){
response.json().then(function(json_response){

if(json_response.success){}else 

{
context.setState({error1:json_response.message});}});}).



catch(function(err){});},




on_submit_blue:function(){

var lookup={};
if(this.state.username1.indexOf("@")==-1){
lookup.login_name=this.state.username1;}else 

{
lookup.email_address=this.state.username1;}

var context=this;
fetch("http://webcreek.xenforma.com/api/auth/get_secret_question",{
method:"POST",
headers:{
"Accept":"application/json",
"Content-Type":"application/json"},

body:JSON.stringify(lookup)}).

then(function(response){
response.json().then(function(json_response){

if(json_response.success&&json_response.secret_question){

context.setState({secret_question:json_response.secret_question,disable_submit:false});
context.setState({secret_label:'Secret Question:  '});

this.perform_submit();}else 

if(!json_response.success){

context.setState({error1:json_response.message});}else 

{
context.setState({secret_question:undefined});}}).


catch(function(err){
var response=err.responseJSON;
context.setState({error1:response.message});});}).




catch(function(err){
var response=err.responseJSON;
context.setState({error1:response.message});});},



forget_password:function(){

this.setState({forgetview:"yes"});},


error_clear:function(){
this.setState({error:""});},


render:function(){var _this2=this;
if(this.state.forgetview=="no"){
var error=React.createElement(Text,null,"");
if(this.state.error){
error=React.createElement(View,{style:styles.viewerror},React.createElement(Text,{style:styles.errortxt},this.state.error));}


return (
React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'#B7C5FF'}},

React.createElement(View,{style:styles.top_container},
React.createElement(Image,{
source:{uri:"http://webcreek.xenforma.com/images/logo.png"},
style:{width:180,height:40,padding:5,top:30}})),



React.createElement(View,{style:styles.container},

React.createElement(TouchableOpacity,{onPress:this.error_clear},
error),

React.createElement(View,{style:{top:15,borderRadius:2,borderStyle:'solid',borderWidth:1,borderColor:'#D5D5D5'}},
React.createElement(TextInput,{onChangeText:function(text){return _this2.setState({username:text});},style:styles.usertxt,value:this.state.username,placeholder:'Username',onSubmitEditing:this.perform_login})),

React.createElement(View,{style:{top:15,borderRadius:2,borderStyle:'solid',borderWidth:1,borderColor:'#D5D5D5'}},
React.createElement(TextInput,{onChangeText:function(text){return _this2.setState({password:text});},style:styles.passtxt,secureTextEntry:true,value:this.state.password,placeholder:'Password',onSubmitEditing:this.perform_login})),

React.createElement(TouchableOpacity,{style:styles.button,onPress:this.perform_login},
React.createElement(Text,{style:{fontSize:12,textAlign:'center',justifyContent:'center',borderWidth:2,color:'#FFFFFF'}},'Login')),


React.createElement(TouchableOpacity,{style:styles.forgetbutton,onPress:this.forget_password},
React.createElement(Text,{style:{fontSize:12,textAlign:'center',color:'#4AA6E5'}},'Forget my password?'))),




React.createElement(View,{style:styles.bottom_container})));}else 





{
var secret_question=React.createElement(Text,null,"");
var error1=React.createElement(Text,null,"");
if(this.state.error1){
error1=React.createElement(View,{style:styles.viewerror1},React.createElement(Text,{style:styles.errortxt1},this.state.error1));}


if(this.state.secret_question){
secret_question=React.createElement(View,{style:{borderRadius:2,top:10,borderStyle:'solid',borderWidth:1,borderColor:'#D5D5D5',alignSelf:'center',alignItems:'center'}},
React.createElement(TextInput,{onChangeText:function(text){return _this2.setState({secret_answer:text});},style:styles.usertxt1,value:this.state.secret_answer,placeholder:'Secret Answer'}));}



return (
React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'#B7C5FF'}},
React.createElement(View,{style:styles.top_container},
React.createElement(Image,{
source:{uri:"http://webcreek.xenforma.comimages/logo.png"},
style:{width:280,height:50,padding:5,alignSelf:'stretch',top:30}})),


React.createElement(View,{style:styles.container},
React.createElement(TouchableOpacity,{onPress:this.error_clear},
error1),

React.createElement(Text,{style:{top:3,color:'#494949'}},"Please fill in your information"),

React.createElement(View,{style:{top:5,borderRadius:2,borderStyle:'solid',borderWidth:1,borderColor:'#D5D5D5'}},
React.createElement(TextInput,{onChangeText:function(text){return _this2.setState({username1:text});},style:styles.usertxt1,value:this.state.username1,placeholder:'Username',onSubmitEditing:this.on_submit_blue})),



React.createElement(View,{style:{top:5}},
React.createElement(View,{style:styles.container_answer},
React.createElement(Text,{style:{color:'#494949',fontWeight:'bold'}},this.state.secret_label),
React.createElement(Text,{style:{color:'#494949',fontSize:12}},this.state.secret_question)),



secret_question),


React.createElement(TouchableOpacity,{style:styles.button1,onPress:this.perform_submit},
React.createElement(Text,{style:{fontSize:12,textAlign:'center',justifyContent:'center',borderWidth:2,color:'#FFFFFF'}},'Submit'))),



React.createElement(View,{style:styles.bottom_container})));}}});









var styles=StyleSheet.create({
top_container:{
flex:1,
justifyContent:'center',
alignItems:'center',
flexWrap:'nowrap'},


bottom_container:{
flex:1,

alignItems:'center',
backgroundColor:'#00FCFF',
flexWrap:'nowrap',
marginBottom:10,
justifyContent:'flex-end'},


banner:{
flex:1,
borderRadius:5,
borderStyle:'solid',
borderWidth:5,
borderColor:'#FFFFFF',
backgroundColor:'#F4F4F4',
height:20,
alignSelf:'center',
alignItems:'center'},


container:{

flex:1,
borderRadius:5,
borderStyle:'solid',
borderWidth:5,
borderColor:'#FFFFFF',
paddingLeft:15,
paddingRight:15,
paddingBottom:20,
backgroundColor:'#F4F4F4',
height:230,
alignSelf:'center',
alignItems:'center',
justifyContent:'space-around'},


container_answer:{
flex:2,
borderColor:'#FF442F',
alignSelf:'center',
alignItems:'center',
flexDirection:'row'},

welcome:{
fontSize:20,
textAlign:'center',
margin:10},

instructions:{
textAlign:'center',
color:'#333333',
marginBottom:5},

usertxt:{
paddingLeft:10,
backgroundColor:'#FAFFBD',
height:24,
fontSize:13,
paddingBottom:1,
paddingTop:1,
borderRadius:3,
width:230},

usertxt1:{
paddingLeft:10,
backgroundColor:'#FFFFFF',
height:24,
fontSize:13,
paddingBottom:1,
paddingTop:1,
borderRadius:3,
width:230},

passtxt:{
backgroundColor:'#FAFFBD',
height:24,
paddingLeft:15,
fontSize:13,
paddingBottom:1,
paddingTop:1,
borderRadius:3,
width:230},


button:{
top:20,
padding:1,
borderWidth:0,
borderRadius:2,
width:230,
height:23,
backgroundColor:'#427FED'},

button1:{
top:15,
padding:1,
borderWidth:0,
borderRadius:2,
width:230,
height:24,
backgroundColor:'#427FED'},

forgetbutton:{
top:15,
padding:3,
borderWidth:0,
borderRadius:3,
width:250,
height:25},


viewerror:{
padding:1,
top:10,
width:280,
backgroundColor:"#E46F61",
borderLeftWidth:7,
borderLeftColor:"#DF5138"},

viewerror1:{
top:10,
width:280,
backgroundColor:"#E46F61",
borderLeftWidth:7,
borderLeftColor:"#DF5138",
padding:1},

errortxt:{
padding:1,
textDecorationStyle:'solid',
fontSize:12,
height:44,
color:'#FFFFFF',
paddingLeft:5,
marginLeft:5,
textAlign:'left',
justifyContent:'center'},


errortxt1:{

textDecorationStyle:'solid',
fontSize:14,
height:44,
color:'#FFFFFF',
paddingLeft:5,
marginLeft:5,
textAlign:'center',
justifyContent:'center'}});





AppRegistry.registerComponent('LoginComponent',function(){return LoginComponent;});
module.exports=LoginComponent;
});
__d('XenformaMobileSync/app.component.side-bar.js',function(global, require, module, exports) {  "use strict";













var React=require('react-native/Libraries/react-native/react-native.js');
var server_auth=require('XenformaMobileSync/server_auth.js');
var ForerunnerDB=require("forerunnerdb/js/builds/nodecore.js");
var mobile_utils=require('XenformaMobileSync/mobile_utils.js');
var Collapsible=require('Collapsible');
var fdb=new ForerunnerDB();
var db=fdb.db('xenforma');var 

AppRegistry=









React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;var ToolbarAndroid=React.ToolbarAndroid;var ListView=React.ListView;var Image=React.Image;var TouchableHighlight=React.TouchableHighlight;var LayoutAnimation=React.LayoutAnimation;


var SideBarSection=React.createClass({displayName:'SideBarSection',

getInitialState:function(){
var ds=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1!==r2;}});
var ds1=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1!==r2;}});
var ds2=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1!==r2;}});

return {

dataSource:ds.cloneWithRows(this._genRows()),
dataSource1:ds1.cloneWithRows({}),
dataSource2:ds2.cloneWithRows({})};},


_pressData:{},
_genRows:function(pressData){
var context=this;
var menu_items=[];
var xenforma_menu_info=db.collection('xenforma_menu_info');
xenforma_menu_info.load(function(err){
if(!err){
var result=xenforma_menu_info.find({});

for(var i=0;i<result.length;i++){
menu_items.push(result[i].menuitem);}



context.setState({dataSource:context.state.dataSource.cloneWithRows(menu_items)});}});



return menu_items;},

getsubdata_source:function(rowData){
var xenforma_submenu_first=db.collection('xenforma_submenu_first');
var menu_items=[];
var memu_item_map=[];
var context=this;
var result=[];
var app_object=[];
xenforma_submenu_first.load(function(err){
if(!err){
result=xenforma_submenu_first.find({idd:rowData});
for(var i=0;i<result.length;i++){
menu_items.push(result[i].submenu);
var submenu=result[i].submenu;
app_object[submenu]=result[i].app_obj;}


context.setState({app_object:app_object});
context.setState({dataSource1:context.state.dataSource.cloneWithRows(menu_items)});}

if(err){
console.log(err);}});



return result.length;},

getsubdata_source_1:function(rowData){

var xenforma_submenu_first=db.collection('xenforma_submenu_second');
var menu_items=[];
var memu_item_map=[];
var context=this;
var result=[];
xenforma_submenu_first.load(function(err){
if(!err){
result=xenforma_submenu_first.find({idd:rowData});
for(var i=0;i<result.length;i++){
menu_items.push(result[i].submenu);}

context.setState({child:result.length});
context.setState({dataSource2:context.state.dataSource.cloneWithRows(menu_items)});}});



return result.length;},

render:function(){
console.log("render-side -bar");
return (
React.createElement(View,{style:{flex:1,backgroundColor:'#fff'}},
React.createElement(ToolbarAndroid,{
logo:{uri:"http://webcreek.xenforma.com/images/logo.png"},
title:'',
style:styles.toolbar}),

React.createElement(View,{style:styles.searchRow},
React.createElement(Image,{
style:{width:25,height:20,padding:1,right:2,top:3},
source:require('XenformaMobileSync/images/search.png')}),

React.createElement(TextInput,{
autoCapitalize:'none',
autoCorrect:false,
clearButtonMode:'always',
placeholder:'Search...',
style:[styles.searchTextInput],
testID:'explorer_search'})),



React.createElement(TouchableHighlight,null,
React.createElement(View,{style:{backgroundColor:'red'}},
React.createElement(View,{style:styles.row},
React.createElement(Image,{style:styles.thumb,source:THUMB_URLS[0]}),
React.createElement(Text,{style:styles.text},
"Home")))),




React.createElement(View,{style:styles.separator}),

React.createElement(ListView,{
dataSource:this.state.dataSource,
renderRow:this._renderRow,
keyboardDismissMode:'on-drag',
renderSeparator:function(sectionID,rowID){return React.createElement(View,{key:sectionID+'-'+rowID,style:styles.separator});}})));},




_renderRow:function(rowData,sectionID,rowID){var _this=this;
var rowHash=Math.abs(hashCode(rowData));
var imgSource=THUMB_URLS[++rowID];
if(this.state.collapsed===false&&this.state.key===rowID)
var icon=icons['down'];else 

var icon=icons['up'];
return (
React.createElement(View,null,
React.createElement(TouchableHighlight,{onPress:function(){return _this._pressRow(rowID,rowData);}},
React.createElement(View,null,
React.createElement(View,{style:styles.row},
React.createElement(Image,{style:styles.thumb,source:imgSource}),
React.createElement(Text,{style:styles.text},
rowData),

React.createElement(Image,{style:styles.icon,source:icon})))),




this.state.key===rowID?React.createElement(Collapsible,{key:rowID,collapsed:this.state.collapsed,align:'center'},
React.createElement(View,{style:{flex:1,padding:20,backgroundColor:'#fff'}},
React.createElement(ListView,{
dataSource:this.state.dataSource1,
renderRow:this._renderRow_second,
keyboardDismissMode:'on-drag'}))):


React.createElement(Text,null)));},



_renderRow_second:function(rowData,sectionID,rowID){var _this2=this;
return (
React.createElement(View,null,
React.createElement(TouchableHighlight,{onPress:function(){return _this2._pressRow_submenu(rowID,rowData);}},
React.createElement(View,null,
React.createElement(View,{style:styles.submenu_first},
React.createElement(Text,{style:styles.text},
rowData)))),





this.state.key_1===rowID?React.createElement(Collapsible,{key:rowID,collapsed:this.state.collapsed_1,align:'center'},
React.createElement(View,{style:{flex:1,padding:20,backgroundColor:'#fff'}},

React.createElement(ListView,{
dataSource:this.state.dataSource2,
renderRow:this._renderRow_third,
keyboardDismissMode:'on-drag',
renderSeparator:function(sectionID,rowID){return React.createElement(View,{key:sectionID+'-'+rowID,style:styles.separator});}}))):


React.createElement(Text,null)));},




_renderRow_third:function(rowData,sectionID,rowID){

return (
React.createElement(TouchableHighlight,null,
React.createElement(View,null,
React.createElement(View,{style:styles.submenu_second},
React.createElement(Text,{style:styles.text},
rowData)))));},






_pressRow:function(rowID,rowData){
this.getsubdata_source(rowData);

if(this.state.key==rowID&&this.state.collapsed==false){
this.setState({collapsed:true});}else 

{
this.setState({collapsed:false});}


this.setState({key:rowID});},

_pressRow_submenu:function(rowID,rowData){

this.getsubdata_source_1(rowData);
if(this.state.key_1==rowID&&this.state.collapsed_1==false)
this.setState({collapsed_1:true});else 

this.setState({collapsed_1:false});
this.setState({key_1:rowID});

console.log(this.state.app_object[rowData].workflow_states.length);

var workflow_len=this.state.app_object[rowData].workflow_states.length;
if(workflow_len>0&&this.state.app_object[rowData].workflow_states)
this.handle_app_object_click(this.state.app_object[rowData],this.state.app_object[rowData].workflow_states);else 

this.handle_app_object_click(this.state.app_object[rowData],undefined);

this.props.on_closesecond_Event(rowID,rowData);},

handle_app_object_click:function(app_object,workflow_state){

if(workflow_state){
if(workflow_state.work_queue_app_object_code){
app_object.type="data_list";
app_object.code=workflow_state.work_queue_app_object_code;}

app_object.workflow_conditions={workflow_status:workflow_state.status_code};}else 


{
delete app_object.workflow_conditions;}


this.props.app_object_handler(app_object);}});


var styles=StyleSheet.create({
container:{
flexDirection:'row',
flex:1,height:35,
justifyContent:'space-between',
alignItems:'stretch',
flexWrap:'nowrap',
backgroundColor:'red'},

welcome:{
fontSize:20,
textAlign:'center',
margin:10},

instructions:{
textAlign:'center',
color:'#333333',
marginBottom:5},

searchRow:{
top:5,borderRadius:1,
borderStyle:'solid',
borderColor:'#D5D5D5',
paddingLeft:20,
paddingRight:20,
flexDirection:'row',
borderBottomWidth:3},

searchTextInput:{
flex:1,
paddingLeft:10,
backgroundColor:'#FFFFFF',
height:24,
fontSize:13,
paddingBottom:1,
paddingTop:1},

toolbar:{
backgroundColor:'#2DC3E8',
height:50},

text:{
flex:1},

row:{
flexDirection:'row',
justifyContent:'center',
padding:5,
backgroundColor:'#FFFFFF'},

row_second:{
flexDirection:'row',
justifyContent:'center',
padding:3,
backgroundColor:'#F3F3F3'},

submenu_first:{
justifyContent:'center',
padding:5,
backgroundColor:'#FFFFFFF',
borderColor:'#E2E2E2',
borderLeftWidth:1},

submenu_second:{
justifyContent:'center',
padding:5,
backgroundColor:'#FFFFFFF'},


separator:{
height:1,
backgroundColor:'#CCCCCC'},

thumb:{
width:28,
height:24},

icon:{
top:10,
width:10,
height:10}});



var THUMB_URLS=[
require('XenformaMobileSync/images/image/home.png'),
require('XenformaMobileSync/images/image/gear.png'),
require('XenformaMobileSync/images/image/custom.png'),
require('XenformaMobileSync/images/image/pay.png'),
require('XenformaMobileSync/images/image/setup.png'),
require('XenformaMobileSync/images/image/contact.png'),
require('XenformaMobileSync/images/image/inciden.png'),
require('XenformaMobileSync/images/image/track.png'),
require('XenformaMobileSync/images/image/work.png')];

var icons={
'up':require('XenformaMobileSync/images/up.png'),
'down':require('XenformaMobileSync/images/down.png')};


var hashCode=function(str){
var hash=15;
for(var ii=str.length-1;ii>=0;ii--){
hash=(hash<<5)-hash+str.charCodeAt(ii);}

return hash;};

var animations={
layout:{
spring:{
duration:750,
create:{
duration:300,
type:LayoutAnimation.Types.easeInEaseOut,
property:LayoutAnimation.Properties.opacity},

update:{
type:LayoutAnimation.Types.spring,
springDamping:0.4}},


easeInEaseOut:{
duration:300,
create:{
type:LayoutAnimation.Types.easeInEaseOut,
property:LayoutAnimation.Properties.scaleXY},

update:{
delay:100,
type:LayoutAnimation.Types.easeInEaseOut}}}};




var layoutAnimationConfigs=[
animations.layout.spring,
animations.layout.easeInEaseOut];

module.exports=SideBarSection;
});
__d('Collapsible',function(global, require, module, exports) {  'use strict';





var React=require('react-native/Libraries/react-native/react-native.js');var 

Animated=


React.Animated;var Easing=React.Easing;var View=React.View;

var ANIMATED_EASING_PREFIXES=['easeInOut','easeOut','easeIn'];


var ALMOST_ZERO=0.00000001;

var Collapsible=React.createClass({displayName:'Collapsible',
propTypes:{
align:React.PropTypes.oneOf(['top','center','bottom']),
collapsed:React.PropTypes.bool,
duration:React.PropTypes.number,
easing:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.func])},



getDefaultProps:function(){
return {
align:'top',
collapsed:true,
duration:300,
easing:'easeOutCubic'};},



componentWillReceiveProps:function(props){
if(props.collapsed!==this.props.collapsed){
this._toggleCollapsed(props.collapsed);}},



getInitialState:function(){
return {
height:new Animated.Value(ALMOST_ZERO),
contentHeight:0,
animating:false};},



_toggleCollapsed:function(collapsed){var _this=this;
var height=collapsed?ALMOST_ZERO:this.state.contentHeight;var _props=
this.props;var easing=_props.easing;var duration=_props.duration;

if(typeof easing==='string'){
var prefix,found=false;
for(var i=0;i<ANIMATED_EASING_PREFIXES.length;i++){
prefix=ANIMATED_EASING_PREFIXES[i];
if(easing.substr(0,prefix.length)===prefix){
easing=easing.substr(prefix.length,1).toLowerCase()+easing.substr(prefix.length+1);
prefix=prefix.substr(4,1).toLowerCase()+prefix.substr(5);
easing=Easing[prefix](Easing[easing||'ease']);
found=true;
break;}}

;
if(!found){
easing=Easing[easing];}

if(!easing){
throw new Error('Invalid easing type "'+this.props.easing+'"');}}



if(this._animation){
this._animation.stop();}

this.setState({animating:true});
this._animation=Animated.timing(this.state.height,{
toValue:height,
duration:duration,
easing:easing}).
start(function(event){return _this.setState({animating:true});});},


_handleLayoutChange:function(event){
var contentHeight=event.nativeEvent.layout.height;
var height=this.props.collapsed?ALMOST_ZERO:contentHeight;
this.setState({
height:new Animated.Value(height),
contentHeight:contentHeight});},



render:function(){var _state=
this.state;var height=_state.height;var contentHeight=_state.contentHeight;
var style={
overflow:'hidden',
height:height};

var contentStyle={};
if(this.props.align==='center'){
contentStyle.transform=[{
translateY:height.interpolate({
inputRange:[0,contentHeight],
outputRange:[contentHeight/-2,0]})}];}else 


if(this.props.align==='bottom'){
contentStyle.transform=[{
translateY:height.interpolate({
inputRange:[0,contentHeight],
outputRange:[-contentHeight,0]})}];}



return (
React.createElement(Animated.View,{style:style,pointerEvents:this.props.collapsed?'none':'auto'},
React.createElement(Animated.View,{style:contentStyle,onLayout:this.state.animating?undefined:this._handleLayoutChange},
this.props.children)));}});






module.exports=Collapsible;
});
__d('XenformaMobileSync/images/search.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images","httpServerLocation":"/assets/images","width":34,"height":31,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\search.png"],"hash":"274a4b9146f54c48ca65099ff6930583","name":"search","type":"png"});
});
__d('XenformaMobileSync/images/image/home.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":36,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\home.png"],"hash":"3bc488d06f9d06defba10f858c3c2189","name":"home","type":"png"});
});
__d('XenformaMobileSync/images/image/gear.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":36,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\gear.png"],"hash":"993890de027723442a998cea5fbd5e18","name":"gear","type":"png"});
});
__d('XenformaMobileSync/images/image/custom.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":43,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\custom.png"],"hash":"f2a89e76e393b722d342681ad8397e35","name":"custom","type":"png"});
});
__d('XenformaMobileSync/images/image/pay.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":36,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\pay.png"],"hash":"59838f17c19a0672d6a5370ca4e57b05","name":"pay","type":"png"});
});
__d('XenformaMobileSync/images/image/setup.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":43,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\setup.png"],"hash":"d2058c4519582e73a67449f445f27a2d","name":"setup","type":"png"});
});
__d('XenformaMobileSync/images/image/contact.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":43,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\contact.png"],"hash":"4278e3145e7f6086e5dd7d396728203f","name":"contact","type":"png"});
});
__d('XenformaMobileSync/images/image/inciden.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":43,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\inciden.png"],"hash":"399589fb71f9f06ff889e97427126139","name":"inciden","type":"png"});
});
__d('XenformaMobileSync/images/image/track.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":43,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\track.png"],"hash":"d6d69a948382e0b423daffb117100ab1","name":"track","type":"png"});
});
__d('XenformaMobileSync/images/image/work.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image","httpServerLocation":"/assets/images/image","width":40,"height":43,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\image\\work.png"],"hash":"3f723dd46d184a2736bf36e02b7e4220","name":"work","type":"png"});
});
__d('XenformaMobileSync/images/up.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images","httpServerLocation":"/assets/images","width":10,"height":10,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\up.png"],"hash":"bc6089cf256db3928656666ff0441116","name":"up","type":"png"});
});
__d('XenformaMobileSync/images/down.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images","httpServerLocation":"/assets/images","width":10,"height":10,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\down.png"],"hash":"2f117b1fc2c86de4b4a1a7219b4948ec","name":"down","type":"png"});
});
__d('XenformaMobileSync/app.component.data-list.js',function(global, require, module, exports) {  "use strict";













var React=require('react-native/Libraries/react-native/react-native.js');
var server_auth=require('XenformaMobileSync/server_auth.js');
var ForerunnerDB=require("forerunnerdb/js/builds/nodecore.js");

var fdb=new ForerunnerDB();
var db=fdb.db('xenforma');
var GridView=require('rn-grid-view/index.js');var 

AppRegistry=








React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var TextInput=React.TextInput;var ListView=React.ListView;var Image=React.Image;var TouchableHighlight=React.TouchableHighlight;var LayoutAnimation=React.LayoutAnimation;var ScrollView=React.ScrollView;
var loop_val=0;
var DataListComponent=React.createClass({displayName:'DataListComponent',
getInitialState:function(){

var state;
var context=this;



if(!state){
state={};}


var col=[];
for(var i=0;i<4;i++){
col.push({id:i,image:"tt"});}
;













var ds=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1!==r2;}});
var data=Array.apply(null,{length:20}).map(Number.call,Number);

return {
books:{
"Finished Reading":col,
"":col}};},




initialize_data_list:function(){
if(this.props.skip_init){

var state_object={};
state_object.app_object=this.props.app_object;
state_object.entity_attributes=this.props.entity_attributes;
state_object.entity_instances=this.props.entity_instances;
return state_object;}

var request={};
request.entity="app_object";
request.method="get_by_code";
request.data={app_object_code:this.props.app_object_code,conditions:this.props.conditions};

var context=this;
server_auth.do_authenticated_http_call('api/entity/invoke_method',{
method:"POST",
headers:{
"Content-Type":"application/json"},

body:JSON.stringify(request)}).
then(function(response){
response.json().then(function(json_response){
console.log(json_response.data.entity_attributes);
console.log("ccccccccccc");
context.setState({
app_object:json_response.data.app_object,
entity_attributes:json_response.data.entity_attributes,
entity_instances:[]});}).



catch(function(err){
context.setState({error:err.responseJSON.message});});}).

catch(function(err){
context.setState({error:err.responseJSON.message});});},


componentDidMount:function(){},









componentDidUpdate:function(){
var context=this;
var data_source;},






































_renderHeader:function(data,id){
return React.createElement(View,{style:styles.header});},



_renderBook:function(item){
return (
React.createElement(View,{key:item.id,style:styles.contain},
React.createElement(Text,{style:styles.thumb},item.caption)));},




render:function(){

var columns=[];
var context=this;
console.log("rendser_submenu");






































this.state.columns=columns;
var app_object_name=this.state.app_object?this.state.app_object.name:"";

var header_caption=this.props.header_caption?this.props.header_caption:[];
var header_length=this.props.header_length?this.props.header_length:0;

return (

React.createElement(ScrollView,{
automaticallyAdjustContentInsets:false,
horizontal:true,
style:[styles.scrollView,styles.horizontalScrollView]},
React.createElement(GridView,{
itemsPerRow:header_length,
renderFooter:null,
onEndReached:null,
scrollEnabled:true,
renderSeparator:null,
style:{marginTop:10},
items:header_caption,
fillIncompleteRow:false,
renderItem:this._renderBook,
renderSectionHeader:this._renderHeader,
automaticallyAdjustContentInsets:false})));},



renderItem:function(item){
return React.createElement(Text,null,' ',item);}});


var styles=StyleSheet.create({
container:{
flexDirection:'row',
flex:1,height:35,
justifyContent:'space-between',
alignItems:'stretch',
flexWrap:'nowrap',
backgroundColor:'red'},

list:{
flexDirection:'row',
flexWrap:'wrap'},

item:{
backgroundColor:'red',
margin:3,
width:50},

scrollView:{
backgroundColor:'#FFFFFF',
height:300},

horizontalScrollView:{
height:120},

headerText:{
fontSize:18,
fontWeight:'700',
textAlign:'center',

color:"white"},

header:{
backgroundColor:'#1CC839'},

thumb:{
width:115,
height:20,
margin:1,
fontSize:10},

contain:{
borderWidth:1,
borderColor:'#D3D3D3'}});


module.exports=DataListComponent;
});
__d('rn-grid-view/index.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=


React.View;var ListView=React.ListView;var StyleSheet=React.StyleSheet;


var GridView=React.createClass({displayName:'GridView',

getInitialState:function(){
return {
items:{},
style:{},
itemsPerRow:1,
renderItem:null,
onEndReached:null,
scrollEnabled:true,
renderSeparator:null,
fillIncompleteRow:false,
renderSectionHeader:null,
automaticallyAdjustContentInsets:false};},




createGroup:function(items,itemsPerRow){
var group=[];
var itemGroups=[];

items.forEach(function(item){
if(group.length===itemsPerRow){
itemGroups.push(group);
group=[item];}else 
{
group.push(item);}});



if(group.length>0){
if(this.props.fillIncompleteRow===true){
while(group.length<itemsPerRow){
group.push(null);}}


itemGroups.push(group);}


return itemGroups;},



groupItems:function(items,hasHeaders,itemsPerRow){
if(hasHeaders){
var data={};

for(var i in items){
data[i]=this.createGroup(items[i],itemsPerRow);}


return data;}


return this.createGroup(items,itemsPerRow);},



renderRowGroup:function(group,sectionID,rowID){
var self=this;
var items=group.map(function(item){
return self.props.renderItem(item);});


return (
React.createElement(View,{style:styles.row},
items));},





render:function(){
var dsContent=null;
var hasHeaders=!Array.isArray(this.props.items);
var groups=this.groupItems(this.props.items,
hasHeaders,
this.props.itemsPerRow);
var ds=new ListView.DataSource({
rowHasChanged:function(r1,r2){return r1!==r2;},
sectionHeaderHasChanged:function(s1,s2){return s1!==s2;}});


if(hasHeaders){
dsContent=ds.cloneWithRowsAndSections(groups);}else 
{
dsContent=ds.cloneWithRows(groups);}


return (
React.createElement(ListView,{
dataSource:dsContent,
style:this.props.style,
renderRow:this.renderRowGroup,
renderFooter:this.props.renderFooter,
onEndReached:this.props.onEndReached,
scrollEnabled:this.props.scrollEnabled,
renderSeparator:this.props.renderSeparator,
renderSectionHeader:this.props.renderSectionHeader,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets}));}});







var styles=StyleSheet.create({
row:{
alignItems:'flex-start',
flexDirection:'row',
justifyContent:'flex-start'}});




module.exports=GridView;
});
__d('XenformaMobileSync/images/back.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images","httpServerLocation":"/assets/images","width":67,"height":87,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\back.png"],"hash":"27131c1abfd8345892dcb7e638881eff","name":"back","type":"png"});
});
__d('XenformaMobileSync/images/title.png',function(global, require, module, exports) {  module.exports = require("AssetRegistry").registerAsset({"__packager_asset":true,"fileSystemLocation":"E:\\testwork\\XenformaMobileSync\\backxenforma\\images","httpServerLocation":"/assets/images","width":102,"height":83,"scales":[1],"files":["E:\\testwork\\XenformaMobileSync\\backxenforma\\images\\title.png"],"hash":"93b60f42e98589f4f47dc0627b8a6d48","name":"title","type":"png"});
});
;require("InitializeJavaScriptAppEngine");
;require("XenformaMobileSync/index.android.js");
__SSTOKENSTRING = "@generated SignedSource<<2f4cdebfe491a318bb86e10b53715118>>";
